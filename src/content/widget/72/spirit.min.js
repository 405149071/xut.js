(function(w) {
	var isDesktop = !('ontouchstart' in window);
	var startEventType = isDesktop ? "mousedown" : "touchstart";
	var moveEventType = isDesktop ? "mousemove" : "touchmove";
	var endEventType = isDesktop ? "mouseup" : "touchend";
	var cancelEventType = isDesktop ? 'mouseup' : 'touchcancel';
	var TouchEvent = function(obj, margion,startCallback, leftCallback, rightCallback, touchEnd) {
		this.x, this.y, this.ox, this.oy, this.prex;
		this.scroller = obj;
		this.margion = margion;
		this.startCallback=startCallback;
		this.leftCallback = leftCallback;
		this.rightCallback = rightCallback;
		this.touchEnd = touchEnd;
		//this.rightComplete=rightComplete;
		this.hasTouch = 'ontouchstart' in window;
		this._bind(startEventType, null);
	}
	TouchEvent.prototype = {
		handleEvent: function(e) {
			var _this = this;
			switch (e.type) {
				case startEventType:
					_this._start(e);
					break;
				case moveEventType:
					_this._move(e);
					break;
				case endEventType:
					_this._end(e);
					break;
				case cancelEventType:
					_this._end(e);
					break;
				case 'mouseout':
					_this._end(e);
					break;
			}
		},
		_start: function(e) {

			 if (e.target) {
			 	if (!e.target.getAttribute("preventDefault") || e.target.nodeName.toUpperCase() == "IMG") {
			 		e.preventDefault();
			 	}
			 }
			///^(?:INPUT|TEXTAREA|A)$/.test(e.target.tagName) || e.preventDefault();
			//console.log((e.target))
			this._bind(moveEventType);
			this._bind(endEventType);
			this._bind(cancelEventType);
			if (!this.hasTouch) {
				this._bind('mouseout');
			}
			
			this.ox = this.hasTouch ? e.changedTouches[0].pageX : e.clientX;
			//this.oy = this.hasTouch ? e.changedTouches[0].pageY : e.clientY;
			this.prex = this.ox;
			(typeof this.startCallback === "function") && this.startCallback();
		},
		_move: function(e) {
			this.x = this.hasTouch ? e.changedTouches[0].pageX : e.clientX;
			//this.y = this.hasTouch ? e.changedTouches[0].pageY : e.clientY;
			var left = this.x - this.ox - this.margion > 0 ? true : false;
			var right = this.ox - this.x - this.margion > 0 ? true : false;

			var flag = false;
			if (left) {
				flag = (this.x - this.prex >= this.margion) ? true : false;
				if (flag) {
					this.prex = this.x;
					(typeof this.leftCallback === "function") && this.leftCallback();
				}
			}
			if (right) {
				flag = (this.prex - this.x >= this.margion) ? true : false;
				if (flag) {
					this.prex = this.x;
					(typeof this.rightCallback === "function") && this.rightCallback();
				}
			}
		},
		_end: function(e) {
			this._unbind(moveEventType);
			this._unbind(endEventType);
			this._unbind(cancelEventType);
			if (!this.hasTouch) this._unbind('mouseout');
			this.x = this.hasTouch ? e.changedTouches[0].pageX : e.clientX;
			if (this.x !== this.ox) {
				(typeof this.touchEnd === "function") && this.touchEnd();
			}
		},
		_bind: function(type, el, bubble) {
			(el || this.scroller).addEventListener(type, this, !!bubble);
		},
		_unbind: function(type, el, bubble) {
			(el || this.scroller).removeEventListener(type, this, !!bubble);
		},
		destroy: function() {
			console.log("touchEvent destroy...");
			this._unbind(moveEventType);
			this._unbind(endEventType);
			this._unbind(cancelEventType);
			if (!this.hasTouch) this._unbind('mouseout');
			this.leftCallback = null;
			this.rightCallback = null;
			this.touchEnd = null;
		}
	}
	//高级精灵动画
	var spiritAni = function(data, contentPrefix, path) {
		this.resType = 1;
		this.data = data;
		this.contentPrefix = contentPrefix;
		this.curFPS = 0;
		this.timer = null;
		this.loop=1;
		this.curLoop = 1;
		if(this.playerType=="loop") this.loop=0;
		this.action=this.data.params["actList"].split(",")[0];
		this.FPS = parseInt(this.data.params[this.action].fps);
		this.playerType =  (this.data.params[this.action].playerType);
		this.isSports = parseInt(this.data.params[this.action].isSports);
		this.imageList = this.data.params[this.action].ImageList;
		this.obj = $("#"+this.contentPrefix+this.data.framId);
		this.FPSCount = this.imageList.length;
		this.ResourcePath = path;
		this.imgArray = new Array();
		this.init();
	}
	var p = spiritAni.prototype;
	//获取文件名
	p.getFilename = function(name){
		return name.substr(0,name.indexOf('.'));
	}
	/*资源(图片、MP3)预加载处理*/
	p.loadResource = function (url, callback) {
		//var ext=url.substr(url.lastIndexOf("."));
		var img = new Image(); //创建一个Image对象，实现图片的预下载
		img.onload = function(){
			img.onload = null;
			if(typeof(callback)=="function" ) callback(img);
		}
		img.src = url;
		return img;
	}
	//初始化
	p.init = function() {
		if (this.isSports)
			this.cutInit();
		else
			this.switchInit();
		self.curFPS++;
	}
	p.cutInit = function() {
		if(!this.initState){
			this.startPoint = {
				x: this.imageList[0].X,
				y: this.imageList[0].Y,
				w: parseInt(this.data.params[this.action].width),
				h: parseInt(this.data.params[this.action].height)
			}
			this.xRote = parseInt(this.obj.css("width")) / this.startPoint.w;
			this.yRote = parseInt(this.obj.css("height")) / this.startPoint.h;
			this.startLeft = parseInt(this.obj.css("left"));
			this.startTop = parseInt(this.obj.css("top"));
			this.initState = true;
		}
		if(this.resType==1){
			this.obj.html("<img id='spImg_" + this.data.framId + "' src='" + this.ResourcePath + this.imageList[0].name + "' style='width:100%;height:100%;position:absolute;' width='100%' height='100%' />");
		}else{
			var filename = this.getFilename(this.imageList[0].name);
			this.obj.append("<div id='spImg_" + this.data.framId + "' style='width:100%;height:100%;position:absolute;background: url("+this.ResourcePath +filename+".jpg) no-repeat;background-size: 100% 100%;-webkit-mask: url("+this.ResourcePath +filename+".png) no-repeat;-webkit-mask-size: 100% 100%;'></div>");
			//this.obj.append("<img id='spImg_" + this.data.framId + "' src='" + this.ResourcePath + filename + ".jpg' style='width:100%;height:100%;position:absolute;-webkit-mask: url("+this.ResourcePath +filename+".png) no-repeat;-webkit-mask-size: 100% 100%;' width='100%' height='100%' />");
		}
	}
	p.switchInit = function() {
		if(this.resType==1){
			this.obj.html("<img id='spImg_" + this.data.framId + "' src='" + this.ResourcePath + this.imageList[0].name + "' style='width:100%;height:100%;position:absolute;' />");
			/*this.mask=this.data.params[this.action].mask
			if (this.mask &&this.mask!= "") {
				this.obj.append("<img id='spMask_" + this.data.framId + "' src='" + this.mask + "' style='width:100%;height:100%;position:absolute;opacity:0.5' />");
			}*/
		}else{
			var filename = this.getFilename(this.imageList[0].name);
			this.obj.append("<div id='spImg_" + this.data.framId + "' style='width:100%;height:100%;position:absolute;background: url("+this.ResourcePath +filename+".jpg) no-repeat;background-size: 100% 100%;-webkit-mask: url("+this.ResourcePath +filename+".png) no-repeat;-webkit-mask-size: 100% 100%;'></div>");
		}
	}

	p.cutAni = function() {
		var self = this;
		if(this.resType==1){
			$("#spImg_" + self.data.framId).attr("src", this.ResourcePath + this.imageList[self.curFPS].name);
		}else{
			var filename = this.getFilename(this.imageList[self.curFPS].name);
			$("#spImg_" + self.data.framId).css("background-image", "url("+this.ResourcePath + filename + ".jpg)");
			$("#spImg_" + self.data.framId).css("-webkit-mask-image", "url("+this.ResourcePath + filename + ".png)");
			//$("#spImg_" + self.data.framId).attr("src", this.ResourcePath + filename + ".jpg");
			//$("#spImg_" + self.data.framId).css("-webkit-mask-image", "url("+this.ResourcePath + filename + ".png)");
		}
		var x = self.imageList[self.curFPS].X - self.startPoint.x;
		var y = self.imageList[self.curFPS].Y - self.startPoint.y;
		self.obj.css("left", self.startLeft + x * self.xRote);
		self.obj.css("top", self.startTop + y * self.yRote);
		//预加载下下下帧资源
		self.imgArray.pop();
		if(this.resType!=1) self.imgArray.pop();
		var nextImgId = self.curFPS + 6;
		if(nextImgId<this.imageList.length){
			if(this.resType==1){
				var img = this.loadResource(this.ResourcePath+this.imageList[nextImgId].name, null);
				self.imgArray.unshift(img);
			}else{
				var filename = this.getFilename(this.imageList[nextImgId].name);
				var mask = this.loadResource(this.ResourcePath+filename+".png", null);
				var img = this.loadResource(this.ResourcePath+filename+".jpg", null);
				self.imgArray.unshift(img);
				self.imgArray.unshift(mask);
			}
		}
		self.curFPS++;
	}
	//更换动作
	p.changeSwitchAni = function(action, loop) {
		var self = this;
		this.action=action;
		if (!this.data.params[action]) {
			console.log(" Function changeSwitchAni  parameters "+action+" error");
			return;
		}
		this.FPS = parseInt(this.data.params[this.action].fps);
		this.playerType =  (this.data.params[this.action].playerType);
		this.loop=loop;
		
		this.isSports=parseInt(this.data.params[this.action].isSports);
		this.imageList=this.data.params[this.action].ImageList;
		this.obj=$("#"+this.contentPrefix+this.data.framId);
		this.FPSCount = this.imageList.length;
		this.curFPS=0;
		clearTimeout(this.timer);
		//预加载图片
		self.imgArray = [];
		for(i=1;i<6;i++){
			if(i>=this.imageList.length) break;
			if(this.resType==1){
				var img = this.loadResource(this.ResourcePath+this.imageList[i].name, null);
				self.imgArray.unshift(img);
			}else{
				var filename = this.getFilename(this.imageList[i].name);
				var mask = this.loadResource(this.ResourcePath+filename+".png", null);
				var img = this.loadResource(this.ResourcePath+filename+".jpg", null);
				self.imgArray.unshift(img);
				self.imgArray.unshift(mask);
			}
		}
		setTimeout(self.setAni.bind(self), 250);
		//this.setAni();
	}

	p.bindEvent = function() {
		var self = this;
		var margin = parseInt(parseInt(this.obj.css("width")) / this.FPSCount)/2;
		if (!this.isSports) {
			new TouchEvent(self.obj[0], margin, function(){
				clearTimeout(self.timer);
			}, function() {
				//console.log(self.curFPS,self.FPSCount);
				if (self.curFPS < self.FPSCount) {
					self.curFPS++;
					if(this.resType==1){
						$("#spImg_" + self.data.framId).attr("src", self.ResourcePath + self.imageList[self.curFPS-1].name);
					}else{
						var filename = this.getFilename(this.imageList[self.curFPS-1].name);
						$("#spImg_" + self.data.framId).css("background-image", "url("+this.ResourcePath + filename + ".jpg)");
						$("#spImg_" + self.data.framId).css("-webkit-mask-image", "url("+this.ResourcePath + filename + ".png)");
					}
				}
			}, function() {
				//console.log(self.curFPS);
				if (self.curFPS > 0) {
					self.curFPS--;
					if(this.resType==1){
						$("#spImg_" + self.data.framId).attr("src", self.ResourcePath + self.imageList[self.curFPS].name);
					}else{
						var filename = this.getFilename(this.imageList[self.curFPS].name);
						$("#spImg_" + self.data.framId).css("background-image", "url("+this.ResourcePath + filename + ".jpg)");
						$("#spImg_" + self.data.framId).css("-webkit-mask-image", "url("+this.ResourcePath + filename + ".png)");
					}
				}
			}, function() {
				if(self.isAni)
				self.setAni();
			});
		}
	}
	p.switchAni = function() {
		var self = this;
		if(this.resType==1){
			$("#spImg_" + self.data.framId).attr("src", this.ResourcePath + this.imageList[self.curFPS].name);
		}else{
			var filename = this.getFilename(this.imageList[self.curFPS].name);
			$("#spImg_" + self.data.framId).css("background-image", "url("+this.ResourcePath + filename + ".jpg)");
			$("#spImg_" + self.data.framId).css("-webkit-mask-image", "url("+this.ResourcePath + filename + ".png)");
		}
		self.curFPS++;
	}
	p.stop=function(){
		clearTimeout(this.timer);
	}
	p.setAni = function() {
		var self = this;
		self.isAni = false;

		function ani() {
			if (self.curFPS >= self.FPSCount) {
				if (self.loop > 0) {
					if (self.curLoop >= self.loop) {
						self.isAni = false;
						return;
					} else {
						self.curLoop++;
						self.curFPS = 0;
						self.isAni = true;
						time();
					}
				} else {
					self.curFPS = 0;
					self.isAni = true;
					time();
				}
			} else {
				self.isAni = true;
				time();
			}
		}

		function time() {
			self.timer = setTimeout(function() {
				if (self.isSports)
					self.cutAni();
				else
					self.switchAni();
				ani();
			}, 1000 / self.FPS);
		}
		ani();
	}

	var moveContent=function(contentPrefix, id, parentId){
		var obj =$("#"+contentPrefix+id);
		var parentObj=$("#"+contentPrefix+parentId);
		var left=obj.offset().left;
		var top=obj.offset().top;
		var parLeft=parentObj.offset().left;
		var parTop=parentObj.offset().top;
		if($("#spirit_parent_"+parentId).length==0)
	    parentObj.append("<div style='position:absolute; width:100%; height:100%'  id='spirit_parent_"+parentId+"'></div>");
	    $("#spirit_parent_"+parentId).append(obj);
	    obj.css("left",left-parLeft);
	    obj.css("top",top-parTop);
	}
	//初始化
	var getSpiritAni = function(inputPara, contentPrefix, path) {
		var id = '';
		if (typeof inputPara == "object")
			id = contentPrefix + inputPara.framId;
		else
			id = inputPara;

		var doc = document.getElementById(id);
		if (doc) {
			if (doc["Spirit"]) {
				return doc["Spirit"];
			} else {
				if (typeof inputPara == "object") {
					if(inputPara.parentId!="0"){
						moveContent(contentPrefix,inputPara.framId,inputPara.parentId);
					}
					doc["Spirit"] = new spiritAni(inputPara, contentPrefix, path);
					return doc["Spirit"];
				} else {
					console.log("inputPara undefine Spirit")
					return null;
				}
			}
		} else {
			console.log("inputPara undefine doc.")
			return null;
		}
	}
	//零件设置
	spiritWidget = function(inputPara, contents) {
		this.inputPara = inputPara;
		this.ResourcePath = "content/widget/gallery/" + inputPara.id + "/";
		var xhr = new XMLHttpRequest();
		xhr.open('GET', this.ResourcePath + 'app.json', false);
		xhr.send(null);
		try {
			this.option = eval("(" + xhr.responseText + ")");
		} catch (e) {
			console.log("app.json get error:" + e);
		}
		for(var i=0;i<this.option.spiritList.length;i++){
			getSpiritAni(this.option.spiritList[i], inputPara.contentPrefix, this.ResourcePath);
		}
	}
	spiritWidget.prototype={
		//销毁
		destroy : function(){
			for(var i=0;i<this.option.spiritList.length;i++){
				var id = this.inputPara.contentPrefix+this.option.spiritList[i].framId;
				var doc = document.getElementById(id);
				if (doc && doc["Spirit"]){
					doc["Spirit"].stop();
					doc["Spirit"]=null;
				}
				$("#"+id).html("");
			}
		}
	}
	spiritWidget.updateAction = function(id, params) {
		var loop=1;
		if(params.playerType=="loop") loop=0;
		var spirit = getSpiritAni(id);
		if (spirit) {
			spirit.init();
			spirit.changeSwitchAni(params.actList, loop);
		}
	}
	spiritWidget.stop = function(id) {
		var spirit = getSpiritAni(id);
		if (spirit) spirit.stop();
	}
	w.spiritWidget = spiritWidget;
})(window);