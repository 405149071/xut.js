{"version":3,"file":"0.d6e47b1a37178bb041f6.hot-update.js","sources":["webpack:///./src/lib/toolbar/bookbar/index.js?8408","webpack:///./src/lib/toolbar/bookbar/Mark.js?29a4"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Mark = require('./Mark');\n\nvar _index = require('../../util/index');\n\nvar _tap = require('../../tap');\n\nvar _bar = require('../base/bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 阅读模式工具栏\r\n * @param options object\r\n * @demo {container:页面容器,controlBar:工具栏容器,...}\r\n * @desc 继承自Toolbar.js\r\n */\nvar BookBar = function (_Bar) {\n    _inherits(BookBar, _Bar);\n\n    function BookBar() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var pageMode = _ref.pageMode;\n        var container = _ref.container;\n        var controlBar = _ref.controlBar;\n\n        _classCallCheck(this, BookBar);\n\n        //左右箭头\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BookBar).call(this));\n\n        _this.arrows = {};\n\n        //工具栏父容器\n        _this.container = container;\n\n        //工具栏容器\n        _this.controlBar = controlBar;\n\n        _this.pageMode = pageMode;\n\n        //是否有顶部工具栏\n        _this.hasTopBar = true;\n        _this.Lock = false;\n        _this.delay = 50;\n\n        //图书工具栏高度\n        _this.topBarHeight = _this.iconHeight * 1.25;\n\n        //配置属性\n        _this.initConfig();\n\n        _this.initTool();\n        return _this;\n    }\n\n    /**\r\n     * 初始化\r\n     */\n\n\n    _createClass(BookBar, [{\n        key: 'initTool',\n        value: function initTool() {\n            //工具栏的显示状态\n            var display = this.controlBar.css('display');\n            this.barStatus = display == 'none' ? false : true;\n            this.setToolbarStyle();\n            this.createBackIcon();\n            this.createDirIcon();\n            this.createMarkIcon();\n            // this.createStarIcon();\n\n            //翻页按钮\n            if (this.pageMode == 2) {\n                this.createArrows();\n            }\n\n            //监听事件\n            (0, _tap.bindTap)(this.container[0], {\n                end: this\n            });\n        }\n\n        /**\r\n         * 工具条的样式\r\n         */\n\n    }, {\n        key: 'setToolbarStyle',\n        value: function setToolbarStyle() {\n            var height = this.topBarHeight,\n                TOP = this.barHeight; //系统工具栏占用的高度\n\n            //在顶部\n            this.controlBar.css({\n                top: 0,\n                height: height + 'px',\n                paddingTop: TOP + 'px',\n                backgroundColor: 'rgba(0, 0, 0, 0.2)', //transparent\n                fontSize: '0.625em',\n                color: 'white'\n            });\n        }\n\n        /**\r\n         * 更新页码\r\n         */\n\n    }, {\n        key: 'updatePointer',\n        value: function updatePointer() {}\n        //预留\n\n\n        /**\r\n         * 创建目录图标\r\n         */\n\n    }, {\n        key: 'createDirIcon',\n        value: function createDirIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '目录';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-dir';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 创建书签图标\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createMarkIcon',\n        value: function createMarkIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '书签';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-mark';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 创建评分图标\r\n         */\n\n    }, {\n        key: 'createStarIcon',\n        value: function createStarIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '评分';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-star';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 后退按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createBackIcon',\n        value: function createBackIcon() {\n            var icon = document.createElement('div');\n            icon.style.width = this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-back';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 显示顶部工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showTopBar',\n        value: function showTopBar() {\n            var that = this;\n\n            if (this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n\n            this.controlBar.css({\n                'display': 'block',\n                'opacity': 0\n            });\n\n            setTimeout(function () {\n                that.controlBar.animate({\n                    'opacity': 1\n                }, that.delay, 'linear', function () {\n                    that.showSystemBar();\n                    that.barStatus = true;\n                    that.Lock = false;\n                });\n            }, 50);\n        }\n\n        /**\r\n         * 隐藏顶部工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideTopBar',\n        value: function hideTopBar() {\n            var that = this;\n\n            if (!this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n\n            this.controlBar.animate({\n                'opacity': 0\n            }, that.delay, 'linear', function () {\n                that.controlBar.hide();\n                that.hideSystemBar();\n                that.barStatus = false;\n                that.Lock = false;\n            });\n        }\n\n        /**\r\n         * 创建目录菜单\r\n         */\n\n    }, {\n        key: 'createDirMenu',\n        value: function createDirMenu() {\n            var self = this;\n            var wrap = document.createElement('div');\n            var mask = document.createElement('div');\n            //添加遮层\n            mask.className = 'xut-book-menu-mask';\n            //获取内容\n            this.getDirContent();\n            wrap.className = 'xut-book-menu';\n            wrap.innerHTML = '<ul>' + this.contentText + '</ul>';\n            this.container.append(wrap);\n            //是否滚动\n            this.isScrolled = false;\n\n            //添加滚动条\n            //url : http://iscrolljs.com/\n            this.iscroll = new iScroll(wrap, {\n                scrollbars: true,\n                fadeScrollbars: true,\n                scrollX: false\n            });\n\n            this.menu = wrap;\n\n            this.setColor();\n\n            this.iscroll.on('scrollStart', function (e) {\n                self.isScrolled = true;\n            });\n\n            this.iscroll.on('scrollEnd', function (e) {\n                self.isScrolled = false;\n            });\n\n            wrap.appendChild(mask);\n        }\n\n        /**\r\n         *  显示目录菜单\r\n         */\n\n    }, {\n        key: 'showDirMenu',\n        value: function showDirMenu() {\n            //获取当前页面\n            var page = Xut.Presentation.GetPageElement();\n\n            if (this.menu) {\n                this.menu.style.display = 'block';\n            } else {\n                this.createDirMenu();\n            }\n\n            //添加模糊效果\n            page.addClass('filter');\n            this.page = page;\n\n            //隐藏顶部工具栏\n            this.controlBar.hide();\n            var iscroll = this.iscroll;\n            //自动定位到上一位置\n            if (iscroll.y > iscroll.wrapperHeight) {\n                iscroll.scrollToElement(this.selectedChild);\n            }\n        }\n\n        /**\r\n         *  隐藏目录菜单\r\n         */\n\n    }, {\n        key: 'hideDirMenu',\n        value: function hideDirMenu() {\n            this.menu.style.display = 'none';\n            //恢复顶部工具栏\n            this.controlBar.show();\n            //移除模糊效果\n            this.page.removeClass('filter');\n        }\n\n        /**\r\n         *  创建目录内容\r\n         */\n\n    }, {\n        key: 'getDirContent',\n        value: function getDirContent() {\n\n            var Api = Xut.Presentation;\n            var data = Api.GetAppSectionData();\n            var sns = data[0];\n            var seaonId = sns._id;\n            var cids = Xut.data.Chapter;\n\n            ////////////////////////////\n            //针对book模式，合并了Season的参数 //\n            //1 SeasonTitle\n            //2 ChapterList列表的范围区间\n            ////////////////////////////\n            data = (0, _index.parseJSON)(sns.parameter);\n\n            if (!data) {\n                console.log('book模式parameter数据出错');\n                return;\n            }\n\n            //二级目录\n            function secondaryDirectory(startCid, endCid) {\n                var cid,\n                    str = '';\n                for (startCid; startCid <= endCid; startCid++) {\n                    cid = cids.item(startCid - 1);\n                    if (cid && cid.chapterTitle) {\n                        str += '<section><a class=\"xut-book-menu-item\" data-mark=' + seaonId + '-' + startCid + ' href=\"javascript:0\">' + cid.chapterTitle + '</a></section>';\n                    }\n                }\n                return str;\n            }\n\n            var i = 0;\n            var len = data.length;\n            var li = '<li class=\"title\"><center class=\"select\">目录</center></li>';\n            var seasonInfo, mark, seasonTitle, seaonId, startCid, endCid;\n\n            for (i; i < len; i++) {\n                seasonInfo = data[i];\n                startCid = seasonInfo.ChapterList[0];\n                endCid = seasonInfo.ChapterList[1];\n                mark = seaonId + '-' + startCid;\n                if (seasonInfo.SeasonTitle.length <= 0) continue;\n                seasonTitle = seasonInfo.SeasonTitle || '第' + (i + 1) + '章';\n                //第一级目录\n                li += '<li>' + '<a class=\"xut-book-menu-item\" data-mark=\"' + mark + '\" href=\"javascript:0\">' + seasonTitle + '</a>' +\n                //第二级目录\n                secondaryDirectory(startCid, endCid) + '</li>';\n            }\n\n            this.contentText = li;\n        }\n\n        /**\r\n         * 突出显示点击颜色\r\n         */\n\n    }, {\n        key: 'setColor',\n        value: function setColor(element) {\n            if (this.selectedChild) {\n                this.selectedChild.className = 'xut-book-menu-item';\n            }\n\n            element = element || this.menu.querySelectorAll('li')[1].children[0];\n            element.className = 'select';\n            this.selectedChild = element;\n        }\n\n        /**\r\n         * 跳转到指定书页\r\n         */\n\n    }, {\n        key: 'turnToPage',\n        value: function turnToPage(target) {\n            //忽略滚动点击\n            if (this.isScrolled) return;\n            this.setColor(target);\n            this.hideDirMenu();\n            var data = target.dataset.mark || '';\n            if (data) {\n                data = data.split('-');\n                Xut.View.LoadScenario({\n                    'scenarioId': data[0],\n                    'chapterId': data[1]\n                });\n            }\n        }\n\n        /**\r\n         * 显示书签\r\n         */\n\n    }, {\n        key: 'showBookMark',\n        value: function showBookMark() {\n            if (this.bookMark) {\n                this.bookMark.restore();\n            } else {\n                var pageData = Xut.Presentation.GetPageData();\n                this.bookMark = new _Mark.BookMark({\n                    parent: this.container,\n                    seasonId: pageData.seasonId,\n                    pageId: pageData._id\n                });\n            }\n        }\n\n        /**\r\n         * 返回首页\r\n         */\n\n    }, {\n        key: 'goBack',\n        value: function goBack() {\n            var self = this;\n            Xut.Application.Suspend({\n                dispose: function dispose(promptMessage) {\n                    //停止热点动作\n                    //promptMessage('再按一次将跳至首页！')\n                },\n                processed: function processed() {\n                    Xut.View.GotoSlide(1); //调整到首页\n                    self.setColor();\n                }\n            });\n        }\n\n        /**\r\n         * 事件处理\r\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(e) {\n\n            var target = e.target || e.srcElement;\n\n            var name = target.className;\n\n            switch (name) {\n                case 'xut-book-bar-back':\n                    this.goBack();\n                    //返回\n                    break;\n                case 'xut-book-bar-dir':\n                    //目录\n                    this.showDirMenu();\n                    break;\n                case 'xut-book-bar-mark':\n                    //书签\n                    this.showBookMark();\n                    break;\n                case 'xut-book-bar-star':\n                    //评分\n                    break;\n                case 'xut-book-menu-item':\n                    //跳转\n                    this.turnToPage(target);\n                    break;\n                case 'xut-book-menu-mask':\n                case 'select':\n                    this.hideDirMenu();\n                    break;\n                default:\n                    // console.log(name+':undefined')\n                    break;\n            }\n        }\n\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.iscroll && this.iscroll.destroy();\n            this.bookMark && this.bookMark.destroy();\n            var ele = this.container[0];\n            ele.removeEventListener('touchend', this, false);\n            ele.removeEventListener('mouseup', this, false);\n            this.iscroll = null;\n            this.menu = null;\n            this.page = null;\n        }\n    }]);\n\n    return BookBar;\n}(_bar2.default);\n\nexports.default = BookBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/bookbar/index.js\n ** module id = 171\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n书签栏\r\n加入这个书签功能后，可以让用户自由选择哪页是需要保存记录的\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * @param options object\r\nexample {parent:页面容器,pageId:chapterId,seasonId:seasionId}\r\nn\n\nvar _tap = require('../../tap');\n\nvar _index = require('../../util/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar icons = {\n    hide: 'images/icons/arrowDown.svg'\n};\n\n/**\r\n * 行高\r\n * @type {[type]}\r\n */\nvar sLineHeiht = parseInt($('body').css('font-size')) || 16; //行高\n\n/**\r\n * 书签缓存\r\n */\nvar BOOKCACHE = void 0;\n\nvar Mark = function () {\n    function Mark() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var parent = _ref.parent;\n        var pageId = _ref.pageId;\n        var seasonId = _ref.seasonId;\n\n        _classCallCheck(this, Mark);\n\n        this.parent = parent;\n        this.pageId = pageId;\n        this.seasonId = seasonId;\n\n        this.screenSize = Xut.config.screenSize;\n        this.sHeight = this.screenSize.height;\n        this.sWidth = this.screenSize.width;\n\n        //是否已存储\n        this.isStored = false;\n        this.init();\n    }\n\n    /**\r\n     * 初始化\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Mark, [{\n        key: 'init',\n        value: function init() {\n            var $bookMark = this.createBookMark(),\n                dom = this.parent[0],\n                that = this;\n\n            this.parent.append($bookMark);\n            this.bookMarkMenu = $bookMark.eq(0);\n            //显示书签\n            setTimeout(function () {\n                that.restore();\n            }, 20);\n            //获取历史记录\n            BOOKCACHE = this.getHistory();\n\n            //邦定用户事件\n            (0, _tap.bindTap)(dom, {\n                end: this\n            });\n        }\n\n        /**\r\n         * 创建书签\r\n         * @return {[object]} [jquery生成的dom对象]\r\n         */\n\n    }, {\n        key: 'createBookMark',\n        value: function createBookMark() {\n            var height = sLineHeiht * 3,\n                // menu的高为3em\n            box = '<div class=\"xut-bookmark-menu\" style=\"width:100%;height:{0}px;left:0;top:{1}px;\">' + '<div class=\"xut-bookmark-wrap\">' + '<div class=\"xut-bookmark-add\">加入书签</div>' + '<div class=\"xut-bookmark-off\" style=\"background-image:url({2})\"></div>' + '<div class=\"xut-bookmark-view\">书签记录</div>' + '</div>' + '</div>' + '<div class=\"xut-bookmark-list\" style=\"display:none;width:100%;height:{3}px;\">' + '<ul class=\"xut-bookmark-head\">' + '<li class=\"xut-bookmark-back\">返回</li>' + '<li>书签</li>' + '</ul>' + '<ul class=\"xut-bookmark-body\"></ul>' + '</div>';\n            box = String.format(box, height, this.sHeight, icons.hide, this.sHeight);\n            this.markHeight = height;\n            return $(box);\n        }\n\n        /**\r\n         * 生成书签列表\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createMarkList',\n        value: function createMarkList() {\n            var tmp,\n                seasonId,\n                pageId,\n                list = '',\n                box = '',\n                self = this;\n\n            //取历史记录\n            _.each(BOOKCACHE, function (mark) {\n                tmp = mark.split('-');\n                seasonId = tmp[0];\n                pageId = tmp[1];\n                mark = self.getMarkId(seasonId, pageId);\n                list += '<li><a data-mark=\"' + mark + '\" class=\"xut-bookmark-id\" href=\"javascript:0\">第' + pageId + '页</a><a class=\"xut-bookmark-del\" data-mark=\"' + mark + '\" href=\"javascript:0\">X</a></li>';\n            });\n\n            return list;\n        }\n\n        /**\r\n         * 创建存储标签\r\n         * 存储格式 seasonId-pageId\r\n         * @return {string} [description]\r\n         */\n\n    }, {\n        key: 'getMarkId',\n        value: function getMarkId(seasonId, pageId) {\n            return seasonId + '-' + pageId;\n        }\n\n        /**\r\n         * 获取历史记录\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'getHistory',\n        value: function getHistory() {\n            var mark = (0, _index._get)('bookMark');\n            if (mark) {\n                return mark.split(',');\n            }\n            return [];\n        }\n\n        /**\r\n         * 添加书签\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'addBookMark',\n        value: function addBookMark() {\n            var key;\n\n            this.updatePageInfo();\n            key = this.getMarkId(this.seasonId, this.pageId);\n\n            //避免重复缓存\n            if (BOOKCACHE.indexOf(key) > -1) {\n                return;\n            }\n            BOOKCACHE.push(key);\n            (0, _index._set)('bookMark', BOOKCACHE);\n        }\n\n        /**\r\n         * 更新页信息\r\n         *  针对母板层上的书签\r\n         */\n\n    }, {\n        key: 'updatePageInfo',\n        value: function updatePageInfo() {\n            var pageData = Xut.Presentation.GetPageData();\n            this.pageId = pageData._id;\n            this.seasonId = pageData.seasonId;\n        }\n\n        /**\r\n         * 删除书签\r\n         * @param {object} [key] [事件目标对象]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'delBookMark',\n        value: function delBookMark(target) {\n            if (!target || !target.dataset) return;\n\n            var key = target.dataset.mark,\n                index = BOOKCACHE.indexOf(key);\n\n            BOOKCACHE.splice(index, 1);\n            (0, _index._set)('bookMark', BOOKCACHE);\n\n            if (BOOKCACHE.length == 0) {\n                (0, _index._remove)('bookMark');\n            }\n\n            //移除该行\n            $(target).parent().remove();\n        }\n\n        /**\r\n         * 显示书签\r\n         * @param {object} [target] [事件目标对象]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'viewBookMark',\n        value: function viewBookMark(target) {\n            var $bookMarkList,\n                list = this.createMarkList();\n\n            if (this.bookMarkList) {\n                $bookMarkList = this.bookMarkList;\n            } else {\n                $bookMarkList = $(target).parent().parent().next();\n            }\n            //更新书签内容\n            $bookMarkList.find('.xut-bookmark-body').html(list);\n            this.bookMarkList = $bookMarkList;\n            $bookMarkList.fadeIn();\n        }\n\n        /**\r\n         * 点击放大效果\r\n         * @param  {[object]} target [事件目标对象]\r\n         * @return {[type]}      [description]\r\n         */\n\n    }, {\n        key: 'iconManager',\n        value: function iconManager(target) {\n            var $icon = this.bookMarkIcon = $(target),\n                restore = this.iconRestore;\n\n            $icon.css({\n                'transform': 'scale(1.2)',\n                'transition-duration': '500ms'\n            })[0].addEventListener(Xut.style.transitionEnd, restore.bind(this), false);\n        }\n\n        /**\r\n         * 复原按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'iconRestore',\n        value: function iconRestore() {\n            this.bookMarkIcon.css('transform', '');\n        }\n\n        /**\r\n         * 跳转到书签页\r\n         * @param  {[type]} target [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'goBookMark',\n        value: function goBookMark(target) {\n            if (!target || !target.dataset) return;\n\n            var key = target.dataset.mark.split('-');\n            var seasonId = Number(key[0]);\n            var pageId = Number(key[1]);\n\n            this.updatePageInfo();\n            //关闭书签列表\n            this.backBookMark();\n\n            //忽略当前页的跳转\n            if (this.pageId == pageId && this.seasonId == seasonId) {\n                return;\n            }\n\n            Xut.View.LoadScenario({\n                'scenarioId': seasonId,\n                'chapterId': pageId\n            });\n        }\n\n        /**\r\n         * 书签回退键\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'backBookMark',\n        value: function backBookMark() {\n            this.bookMarkList.fadeOut();\n        }\n\n        /**\r\n         * 邦定事件\r\n         * @param  {[type]} evt [事件]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(evt) {\n            var target = evt.target;\n            switch (target.className) {\n                //加入书签\n                case 'xut-bookmark-add':\n                    this.addBookMark();\n                    this.iconManager(target);\n                    break;\n                //显示书签记录\n                case 'xut-bookmark-view':\n                    this.viewBookMark(target);\n                    this.iconManager(target);\n                    break;\n                //关闭书签\n                case 'xut-bookmark-off':\n                    this.closeBookMark(target);\n                    break;\n                //返回书签主菜单\n                case 'xut-bookmark-back':\n                    this.backBookMark();\n                    break;\n                //删除书签记录\n                case 'xut-bookmark-del':\n                    this.delBookMark(target);\n                    break;\n                //跳转到书签页\n                case 'xut-bookmark-id':\n                    this.goBookMark(target);\n                    break;\n                default:\n                    //console.log(target.className)\n                    break;\n            }\n        }\n\n        /**\r\n         * 关闭书签菜单\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'closeBookMark',\n        value: function closeBookMark(target) {\n            this.bookMarkMenu.css({\n                transform: 'translate3d(0,0,0)',\n                'transition-duration': '1s'\n            });\n        }\n\n        /**\r\n         * 恢复书签菜单\r\n         */\n\n    }, {\n        key: 'restore',\n        value: function restore() {\n            this.bookMarkMenu.css({\n                transform: 'translate3d(0,-' + this.markHeight + 'px,0)',\n                'transition-duration': '1s'\n            });\n        }\n\n        /**\r\n         * 销毁书签\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var dom = this.parent[0];\n\n            dom.removeEventListener('touchend', this, false);\n            dom.removeEventListener('mouseup', this, false);\n\n            //菜单部分\n            if (this.bookMarkMenu) {\n                this.bookMarkMenu.remove();\n                this.bookMarkMenu = null;\n            }\n\n            //列表部分\n            if (this.bookMarkList) {\n                this.bookMarkList.remove();\n                this.bookMarkList = null;\n            }\n\n            //按钮效果\n            if (this.bookMarkIcon) {\n                this.bookMarkIcon[0].removeEventListener(Xut.style.transitionEnd, this.iconRestore, false);\n                this.bookMarkIcon = null;\n            }\n\n            this.parent = null;\n        }\n    }]);\n\n    return Mark;\n}();\n\nexports.default = Mark;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/bookbar/Mark.js\n ** module id = 172\n ** module chunks = 0\n **/"],"mappingsrhsourceRoot":""}