{"version":3,"file":"0.633521c5338b0fac7dfb.hot-update.js","sources":["webpack:///./src/lib/toolbar/fnbar.js?2a36"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bar = require('./base/bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nvar _index = require('../config/index');\n\nvar _lang = require('../util/lang');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 函数工具栏\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar fnBar = function (_Bar) {\n    _inherits(fnBar, _Bar);\n\n    function fnBar() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var pageMode = _ref.pageMode;\n        var id = _ref.id;\n        var container = _ref.container;\n        var tbType = _ref.tbType;\n        var pageTotal = _ref.pageTotal;\n        var currentPage = _ref.currentPage;\n\n        _classCallCheck(this, fnBar);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(fnBar).call(this));\n\n        _this.pageTips = null;\n        _this.currTip = null;\n        _this.tipsMode = 0;\n        _this.top = 0;\n        _this.Lock = false;\n        _this.delay = 50;\n        _this.hasTopBar = false;\n        _this.barStatus = true;\n        _this.arrows = (0, _lang.hash)();\n        //options\n        _this.pageMode = pageMode;\n        _this.id = id;\n        _this.container = container;\n        _this.tbType = tbType;\n        _this.pageTotal = pageTotal;\n        _this.currentPage = currentPage;\n\n        _this.initConfig();\n\n        _this.initTool();\n        return _this;\n    }\n\n    /**\r\n     * 创建工具栏\r\n     * tbType:\r\n     *      0   禁止工具栏\r\n     *      1   系统工具栏   - 显示IOS系统工具栏\r\n     *      2   场景工具栏   - 显示关闭按钮\r\n     *      3   场景工具栏   - 显示返回按钮\r\n     *      4   场景工具栏   - 显示顶部小圆点式标示\r\n     *  pageMode:\r\n     *      0禁止滑动\r\n     *      1允许滑动无翻页按钮\r\n     *      2 允许滑动带翻页按钮\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(fnBar, [{\n        key: 'initTool',\n        value: function initTool() {\n            var container = this.container,\n                type;\n\n            container.hide();\n            this.controlBar = [];\n\n            while (type = this.tbType.shift()) {\n                switch (type) {\n                    case 1:\n                        this.createSystemBar();\n                        break;\n                    case 2:\n                        this.createCloseIcon();\n                        break;\n                    case 3:\n                        this.createBackIcon(container);\n                        break;\n                    case 4:\n                        this.createPageTips();\n                        break;\n                    default:\n                        this.barStatus = false;\n                        this.hasTopBar = false;\n                        break;\n                }\n            }\n\n            //创建翻页按钮\n            if (this.pageMode === 2) {\n                this.createArrows();\n            }\n\n            container.show();\n\n            //邦定事件\n            this.bindButtonsEvent();\n        }\n\n        /**\r\n         * 系统工具栏\r\n         */\n\n    }, {\n        key: 'createSystemBar',\n        value: function createSystemBar() {\n            var id = this.id,\n                TOP = this.barHeight,\n                html = '',\n                style = 'top:0;height:' + this.iconHeight + 'px;padding-top:' + TOP + 'px';\n            html = '<div id=\"controlBar' + id + '\" class=\"xut-controlBar\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.top = TOP;\n            this.showSystemBar();\n            this.createBackIcon(html);\n            this.createTitle(html);\n            this.createPageNum(html);\n            this.controlBar = html;\n            this.container.append(html);\n            this.hasTopBar = true;\n        }\n\n        /**\r\n         * 页码小圆点\r\n         */\n\n    }, {\n        key: 'createPageTips',\n        value: function createPageTips() {\n            var chapters = this.pageTotal,\n                height = this.iconHeight,\n                TOP = this.top,\n                isIOS = Xut.plat.isIOS,\n                html = '';\n\n            //如果只有一页则不显示小圆\n            if (chapters < 2) {\n                return '';\n            }\n\n            var calculate = _index.config.proportion.calculateContainer();\n            //圆点尺寸\n            var size = isIOS ? 7 : Math.max(8, Math.round(this.propHeight * 8)),\n                width = 2.5 * size,\n                //圆点间距\n            tipsWidth = chapters * width,\n                //圆点总宽度\n            top = (height - size) / 2,\n                //保持圆点垂直居中\n            left = (calculate.width - tipsWidth) / 2; //保持圆点水平居中\n\n            html = '<ul class=\"xut-scenario-tips\"  style=\"top:' + TOP + 'px;left:' + left + 'px;width:' + tipsWidth + 'px;opacity:0.6\">';\n            for (var i = 1; i <= chapters; i++) {\n                html += '<li class=\"xut-scenario-dark\" style=\"float:left;width:' + width + 'px;height:' + height + 'px;\" data-index=\"' + i + '\">';\n                html += '<div class=\"xut-scenario-radius\" style=\"width:' + size + 'px;height:' + size + 'px;margin:' + top + 'px auto\"></div></li>';\n            }\n            html += '</ul>';\n            html = $(html);\n            this.pageTips = html.children();\n            this.tipsMode = 1;\n            this.controlBar.push(html);\n            this.container.append(html);\n        }\n\n        /**\r\n         * 更新页码指示\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'updatePointer',\n        value: function updatePointer(pageIndex) {\n            switch (this.tipsMode) {\n                case 1:\n                    if (this.prevTip) {\n                        this.prevTip.className = 'xut-scenario-dark';\n                    }\n                    this.currTip = this.pageTips[pageIndex];\n                    this.currTip.className = 'xut-scenario-light';\n                    this.prevTip = this.currTip;\n                    break;\n                case 2:\n                    this.currTip.html(pageIndex + 1);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        /**\r\n         * [ 关闭按钮]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createCloseIcon',\n        value: function createCloseIcon() {\n            var style,\n                html,\n                TOP = this.top,\n                height = this.iconHeight;\n            style = 'top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon xut-scenario-close\" data-icon-name=\"close\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon($(html)[0], function () {\n                Xut.View.CloseScenario();\n            });\n            this.controlBar.push(html);\n            this.container.append(html);\n        }\n\n        /**\r\n         * [ 返回按钮]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createBackIcon',\n        value: function createBackIcon(container) {\n            var style,\n                html,\n                TOP = this.top,\n                height = this.iconHeight;\n            style = 'top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon xut-scenario-back\" data-icon-name=\"back\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon(html[0], function () {\n                Xut.View.CloseScenario();\n            });\n            this.controlBar.push(html);\n            container.append(html);\n        }\n\n        //创建页码数\n\n    }, {\n        key: 'createPageNum',\n        value: function createPageNum(container) {\n            var pageTotal = this.pageTotal,\n                TOP = this.top,\n                height = this.iconHeight,\n                currentPage = this.currentPage,\n                style,\n                html;\n            style = 'position:absolute;right:4px;top:' + (height * 0.25 + TOP) + 'px;padding:0 0.25em;height:' + height * 0.5 + 'px;line-height:' + height * 0.5 + 'px;border-radius:0.5em';\n            html = '<div class=\"xut-controlBar-pageNum\" style=\"' + style + '\">';\n            html += '<span class=\"currentPage\">' + currentPage + '</span>/<span>' + pageTotal + '</span>';\n            html += '</div>';\n            html = $(html);\n            this.tipsMode = 2;\n            this.currTip = html.children().first();\n            container.append(html);\n        }\n\n        //工具栏隐藏按钮\n\n    }, {\n        key: 'createHideToolbar',\n        value: function createHideToolbar(container) {\n            var html,\n                style,\n                TOP = this.top,\n                height = this.iconHeight,\n                right = this.iconHeight * 2.5;\n            style = 'position:absolute;right:' + right + 'px;top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px;background-size:cover';\n            html = '<div class=\"xut-controlBar-hide\" style=\"' + style + '\"></div>';\n            container.append(html);\n        }\n\n        //应用标题\n\n    }, {\n        key: 'createTitle',\n        value: function createTitle(container) {\n            var style,\n                html,\n                appName = this.appName;\n            style = 'line-height:' + this.iconHeight + 'px';\n            html = '<div class=\"xut-controlBar-title\" style=\"' + style + '\">' + appName + '</div>';\n            container.append(html);\n        }\n\n        /**\r\n         * [ 普通按钮邦定事件]\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'bindButtonsEvent',\n        value: function bindButtonsEvent() {\n            var that = this,\n                index = 1,\n                id = this.id;\n\n            this.container.on(\"touchend touchend\", function (e) {\n                var target = Xut.plat.evtTarget(e),\n                    type = target.className;\n                switch (type) {\n                    case 'xut-controlBar-hide':\n                        that.hideTopBar();\n                        break;\n                    case 'xut-scenario-dark':\n                        if (that.pageMode) {\n                            index = target.getAttribute('data-index') || 1;\n                            Xut.View.GotoSlide(Number(index));\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n\n        /**\r\n         * [ 显示顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showTopBar',\n        value: function showTopBar() {\n            var that = this,\n                delay = this.delay,\n                controlBar = this.controlBar;\n            if (this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n            if (this.hasTopBar) {\n                controlBar.css({\n                    'display': 'block',\n                    'opacity': 0\n                });\n                setTimeout(function () {\n                    controlBar.animate({\n                        'opacity': 1\n                    }, delay, 'linear', function () {\n                        that.showSystemBar();\n                        that.barStatus = true;\n                        that.Lock = false;\n                    });\n                });\n            } else {\n                controlBar.forEach(function (el) {\n                    el.show();\n                    that.Lock = false;\n                    that.barStatus = true;\n                });\n            }\n        }\n\n        /**\r\n         * [ 隐藏顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideTopBar',\n        value: function hideTopBar() {\n            var that = this,\n                delay = this.delay,\n                controlBar = this.controlBar;\n\n            if (!this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n            if (this.hasTopBar) {\n                controlBar.animate({\n                    'opacity': 0\n                }, delay, 'linear', function () {\n                    that.controlBar.hide();\n                    that.hideSystemBar();\n                    that.barStatus = false;\n                    that.Lock = false;\n                });\n            } else {\n                controlBar.forEach(function (el) {\n                    el.hide(delay, function () {\n                        that.Lock = false;\n                        that.barStatus = false;\n                    });\n                });\n            }\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.container.off();\n            this.controlBar = null;\n            this.arrows = null;\n            this.pageTips = null;\n            this.currTip = null;\n            this.prevTip = null;\n        }\n    }]);\n\n    return fnBar;\n}(_bar2.default);\n\nexports.default = fnBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/fnbar.js\n ** module id = 149\n ** module chunks = 0\n **/"],"mappingssourceRoot":""}