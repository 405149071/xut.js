{"version":3,"file":"0.4bbf0d831849c332a8c0.hot-update.js","sources":["webpack:///./src/lib/pagebase/threadtask/contents/structure/dom.js?3c58"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createDom = createDom;\n\nvar _index = require(\"../../../../util/index\");\n\nvar maskBoxImage = Xut.style.maskBoxImage;\n\n/**\r\n * 蒙版动画\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar maskContent = function maskContent(data, wrapObj) {\n\n    var restr = \"\";\n\n    //如果有蒙版图\n    var isMaskImg = data.mask ? maskBoxImage + \":url(\" + Xut.config.pathAddress + data.mask + \");\" : \"\";\n\n    //蒙板图\n    if (data.mask || wrapObj['isGif']) {\n\n        //蒙版图\n        if (maskBoxImage != undefined) {\n            restr += String.format('<img' + ' id=\"img_{1}\"' + ' class=\"xut-content-scroller-img\"' + ' src=\"{0}\"' + ' style=\"width:{2}px;height:{3}px;position:absolute;background-size:100% 100%;{4}\"/>', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg);\n        } else {\n            //canvas\n            restr += String.format(' <canvas src=\"{0}\"' + ' class=\"xut-content-scroller-img edges\"' + ' mask=\"{5}\"' + ' id = \"img_{1}\"' + ' width=\"{2}\"' + ' height=\"{3}\"' + ' style=\"width:{2}px; height:{3}px;opacity:0; background-size:100% 100%; {4}\"' + ' />', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg, Xut.config.pathAddress.replace(/\\//g, \"\\/\") + data.mask);\n        }\n\n        //精灵图\n    } else if (data.category == 'Sprite') {\n\n        var matrixX = 100 * data.thecount;\n        var matrixY = 100;\n\n        //如果有参数\n        //精灵图是矩阵图\n        if (data.parameter) {\n            var parameter = (0, _index.parseJSON)(data.parameter);\n            if (parameter && parameter.matrix) {\n                var matrix = parameter.matrix.split(\"-\");\n                matrixX = 100 * Number(matrix[0]);\n                matrixY = 100 * Number(matrix[1]);\n            }\n        }\n        restr += String.format('<div' + ' class=\"sprite\"' + ' style=\"height:{0}px;background-image:url({1});background-size:{2}% {3}%;\">' + '</div>', data.scaleHeight, wrapObj['pathImg'], matrixX, matrixY);\n    } else {\n        //普通图片\n        restr += String.format('<img' + ' src=\"{0}\"' + ' class=\"xut-contentScrollerImg\"' + ' id=\"img_{1}\"' + ' style=\"width:{2}px;height:{3}px;position:absolute;background-size:100% 100%; {4}\"/>', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg);\n    }\n\n    return restr;\n};\n\n/**\r\n * 纯文本内容\r\n * @param  {[type]} data [description]\r\n * @return {[type]}      [description]\r\n */\nvar textContent = function textContent(data) {\n    return String.format('<div' + ' id = \"{0}\"' + ' style=\"background-size:100% 100%;height:auto\">{1}</div>', data['_id'], data.content);\n};\n\n/**\r\n * 如果是.js结尾的\r\n * 新增的html文件\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar jsContent = function jsContent(data, wrapObj) {\n    return wrapObj[\"htmlstr\"];\n};\n\n/**\r\n * 如果内容是svg\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar svgContent = function svgContent(data, wrapObj) {\n    var restr = \"\";\n    var svgstr = wrapObj['svgstr'];\n    var scaleWidth = data['scaleWidth'];\n\n    //从SVG文件中，读取Viewport的值\n    if (svgstr != undefined) {\n        var startPos = svgstr.search('viewBox=\"');\n        var searchTmp = svgstr.substring(startPos, startPos + 64).replace('viewBox=\"', '').replace('0 0 ', '');\n        var endPos = searchTmp.search('\"');\n        var temp = searchTmp.substring(0, endPos);\n        var sptArray = temp.split(\" \");\n        var svgwidth = sptArray[0];\n        var svgheight = sptArray[1];\n\n        //svg内容宽度:svg内容高度 = viewBox宽:viewBox高\n        //svg内容高度 = svg内容宽度 * viewBox高 / viewBox宽\n        var svgRealHeight = Math.floor(scaleWidth * svgheight / svgwidth);\n        //如果svg内容高度大于布局高度则添加滚动条\n        if (svgRealHeight > data.scaleHeight + 1) {\n            var svgRealWidth = Math.floor(scaleWidth);\n            //if there do need scrollbar, then restore text to its original prop\n            //布局位置\n            var marginleft = wrapObj['backMode'] ? data.scaleLeft - data.scaleBackLeft : 0;\n            var margintop = wrapObj['backMode'] ? data.scaleTop - data.scaleBackTop : 0;\n            temp = '<div style=\"width:{0}; height:{1};margin-left:{2}px;margin-top:{3}px;\">{4}</div>';\n\n            if (data.isScroll) {\n                restr = String.format(temp, svgRealWidth + 'px', svgRealHeight + 'px', marginleft, margintop, svgstr);\n            } else {\n                restr = String.format(temp, '100%', '100%', marginleft, margintop, svgstr);\n            }\n        } else {\n            restr += svgstr;\n        }\n    }\n    return restr;\n};\n\n/**\r\n * 创建包含容器\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar createWapper = function createWapper(data, wrapObj) {\n    var wapper = void 0,\n        actName = void 0,\n        offset = void 0,\n        visibility = void 0,\n        backwidth = void 0,\n        backheight = void 0,\n        backleft = void 0,\n        backtop = void 0,\n        zIndex = data['zIndex'],\n        id = data['_id'],\n        containerName = wrapObj.containerName,\n        pid = wrapObj.pid,\n        makeId = wrapObj.makeId,\n        background = data.background ? 'background-image: url(' + Xut.config.pathAddress + data.background + ');' : '';\n\n    //背景尺寸优先\n    if (data.scaleBackWidth && data.scaleBackHeight) {\n        backwidth = data.scaleBackWidth;\n        backheight = data.scaleBackHeight;\n        backleft = data.scaleBackLeft;\n        backtop = data.scaleBackTop;\n        wrapObj.backMode = true; //背景图模式\n    } else {\n        backwidth = data.scaleWidth;\n        backheight = data.scaleHeight;\n        backleft = data.scaleLeft;\n        backtop = data.scaleTop;\n    }\n\n    //content默认是显示的数据的\n    //content.visible = 0\n    //如果为1 就隐藏改成hidden\n    //05.1.14\n    visibility = 'visible';\n    if (data.visible) {\n        visibility = 'hidden';\n    }\n\n    // var isHtml = \"\";\n    //2015.12.29\n    //如果是html内容\n    if (wrapObj.isJs) {\n        //正常content类型\n        wapper = '<div id=\"{0}\"' + ' data-behavior=\"click-swipe\"' + ' style=\"overflow:hidden;width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:{5};visibility:{6};background-size:100% 100%;{10}\">' + ' <div id=\"{7}\" style=\"width:{8}px;position:absolute;\">';\n        return String.format(wapper, containerName, backwidth, backheight, backtop, backleft, zIndex, visibility, makeId('contentWrapper'), backwidth, backheight, background);\n    }\n\n    //正常content类型\n    wapper = '<div id=\"{0}\"' + ' data-behavior=\"click-swipe\"' + ' style=\"overflow:hidden;width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:{5};visibility:{6};\">' + ' <div id=\"{7}\" style=\"width:{8}px;height:{9}px;{10}position:absolute;background-size:100% 100%;\">';\n\n    return String.format(wapper, containerName, backwidth, backheight, backtop, backleft, zIndex, visibility, makeId('contentWrapper'), backwidth, backheight, background);\n};\n\n/**\r\n * 创建内容\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar createContent = function createContent(data, wrapObj) {\n    var restr = \"\";\n    //如果内容是图片\n    //如果是svg或者html\n    if (wrapObj.imgContent) {\n        //如果是SVG\n        if (wrapObj.isSvg) {\n            restr += svgContent(data, wrapObj);\n        } else if (wrapObj.isJs) {\n            //如果是.js结构的html文件\n            restr += jsContent(data, wrapObj);\n        } else {\n            //如果是蒙板，或者是gif类型的动画，给高度\n            restr += maskContent(data, wrapObj);\n        }\n    } else {\n        //纯文本文字\n        restr += textContent(data, wrapObj);\n    }\n    return restr;\n};\n\n/**\r\n * 组成HTML结构\r\n * @param  {[type]} argument [description]\r\n * @return {[type]}          [description]\r\n */\nfunction createDom(data, wrapObj) {\n    var restr = '';\n    //创建包装容器\n    restr += createWapper(data, wrapObj);\n    //创建内容\n    restr += createContent(data, wrapObj);\n    restr += \"</div></div>\";\n    return restr;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/dom.js\n ** module id = 136\n ** module chunks = 0\n **/"],"mappingssourceRoot":""}