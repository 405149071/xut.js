{"version":3,"file":"0.67e83048975371ce520c.hot-update.js","sources":["webpack:///./src/lib/toolbar/navbar/index.js?9fd4","webpack:///./src/lib/toolbar/navbar/section.js?60f2"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createNavbar = createNavbar;\nexports.closeNavbar = closeNavbar;\nexports.destroyNavbar = destroyNavbar;\n\nvar _html = require('./html');\n\nvar _html2 = _interopRequireDefault(_html);\n\nvar _section = require('./section');\n\nvar _section2 = _interopRequireDefault(_section);\n\nvar _index = require('../../config/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 动画加锁\r\n */\nvar lockAnimation = void 0;\n\n/**\r\n * 导航对象\r\n * @type {[type]}\r\n */\n/**\r\n * 目录列表\r\n * @param  {[type]} hindex    [description]\r\n * @param  {[type]} pageArray [description]\r\n * @param  {[type]} modules   [description]\r\n * @return {[type]}           [description]\r\n *\r\n */\nvar sectionInstance = null;\n\n/**\r\n * 控制按钮改变\r\n */\nfunction navControl(action, navhandle) {\n    navhandle.css('opacity', action === \"in\" ? 0.5 : 1);\n}\n\n/**\r\n * 执行动画\r\n */\nfunction toAnimation(navControlBar, navhandle, action) {\n\n    var complete = function complete() {\n        //恢复css\n        navControlBar.css(Xut.style.transition, '');\n        Xut.View.HideBusy();\n        lockAnimation = false;\n    };\n    //出现\n    if (action == 'in') {\n        //导航需要重置\n        //不同的页面定位不一定\n        sectionInstance.refresh();\n        sectionInstance.scrollTo();\n        //动画出现\n        navControlBar.animate({\n            'z-index': Xut.zIndexlevel(),\n            'opacity': 1\n        }, 'fast', 'linear', function () {\n            navhandle.attr('fly', 'out');\n            complete();\n        });\n    } else {\n        //隐藏\n        navhandle.attr('fly', 'in');\n        navControlBar.hide();\n        complete();\n    }\n}\n\n/**\r\n * 预处理\r\n */\nvar _preProcess = function _preProcess() {\n\n    //控制按钮\n    var navhandle = $(\"#backDir\");\n    var navControlBar = $(\"#navBar\");\n\n    //判断点击的动作\n    var action = navhandle.attr('fly') || 'in';\n\n    //初始化目录栏的样式\n    //能够显示出来\n    sectionInstance.state = false;\n    if (action == 'in') {\n        sectionInstance.state = true;\n        navControlBar.css({\n            'z-index': 0,\n            'opacity': 0,\n            'display': 'block'\n        });\n    }\n\n    //触发控制条\n    navControl(action, navhandle);\n    //执行动画\n    toAnimation(navControlBar, navhandle, action);\n};\n\n/**\r\n * 初始化\r\n */\nvar _initialize = function _initialize() {\n    if (lockAnimation) {\n        return false;\n    }\n    lockAnimation = true;\n    Xut.View.ShowBusy();\n    _preProcess();\n};\n\n/**\r\n * 预先缓存加载\r\n * @return {[type]} [description]\r\n */\nvar _create = function _create() {\n\n    var $navBar = $(\".xut-navbar\");\n\n    (0, _html2.default)($navBar, function (data) {\n        //目录对象\n        sectionInstance = new _section2.default(data);\n        //初始化滑动\n        // sectionInstance.userIscroll();\n        //初始缩略图\n        //  sectionInstance.createThumb()\n\n        //初始化样式\n        // _initialize()\n    });\n};\n\n/**\r\n * 目录\r\n */\nfunction createNavbar(pageIndex) {\n    if (sectionInstance) {\n        _initialize();\n    } else {\n        _create();\n    }\n}\n\n/**\r\n * 关闭\r\n */\nfunction closeNavbar(callback) {\n    if (sectionInstance && sectionInstance.state) {\n        callback && callback();\n        _initialize();\n    }\n}\n\n/**\r\n * 销毁对象\r\n * @return {[type]} [description]\r\n */\nfunction destroyNavbar() {\n    if (sectionInstance) {\n        sectionInstance.destroy();\n        sectionInstance = null;\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/navbar/index.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../../config/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 下拉章节列表\r\n */\nvar Section = function () {\n    function Section(data) {\n        _classCallCheck(this, Section);\n\n        this._isHorizontal = _index.config.layoutMode === 'horizontal';\n\n        this.pageArray = data;\n        this.$sectionlist = $('#SectionThelist');\n        this.list = this.$sectionlist.find(\"li\");\n    }\n\n    /**\r\n     * 卷滚条\r\n     */\n\n\n    _createClass(Section, [{\n        key: 'userIscroll',\n        value: function userIscroll(pageIndex) {\n            var self = this,\n                hBox = self.hBox,\n                H = !!this._isHorizontal;\n\n            if (hBox) {\n                if (H) {\n                    //hBox.goToPage(pageIndex, 0, 0)\n                } else {\n                    hBox.goToPage(0, pageIndex, 0);\n                }\n            } else {\n                hBox = new iScroll('#SectionWrapper', {\n                    snap: 'li',\n                    tap: true,\n                    scrollX: H,\n                    scrollY: !H,\n                    scrollbars: true,\n                    fadeScrollbars: true,\n                    stopPropagation: true\n                });\n\n                //滑动结束,动态处理缩略图\n                hBox.on('scrollEnd', function (e) {\n                    self.createThumb();\n                    self.removeThumb();\n                });\n\n                this.$sectionlist.on('tap', self.tojump);\n\n                self.hBox = hBox;\n            }\n        }\n\n        /**\r\n         * [ 创建缩略图]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createThumb',\n        value: function createThumb() {\n            var index = this.getPageIndex(),\n                //最左边的索引\n            count = this.getViewLen(),\n                //允许显示的页数\n            createBak = this.createBak || [],\n                //已创建的页码索引\n            createNew = [],\n                //新建的页码索引\n            pageArray = this.pageArray,\n                list = this.list,\n                maxLen = pageArray.length,\n                path = _index.config.pathAddress;\n\n            //确保不会溢出\n            count = count > maxLen ? maxLen : count;\n            //尽可能地填满\n            index = index + count > maxLen ? maxLen - count : index;\n\n            for (var i = 0; i < count; i++) {\n                var j = index + i,\n                    page = pageArray[j];\n\n                createNew.push(j);\n\n                if (_.contains(createBak, j)) continue;\n\n                createBak.push(j);\n\n                //如果是分层母板了,此时用icon代替\n                if (page.iconImage) {\n                    list.eq(j).css({\n                        'background-image': 'url(' + path + page.iconImage + ')'\n                    });\n                } else {\n                    list.eq(j).css({\n                        'background-image': 'url(' + path + page.md5 + ')',\n                        'background-color': 'white'\n                    });\n                }\n            }\n\n            this.createNew = createNew;\n            this.createBak = createBak;\n        }\n\n        /**\r\n         * [ 清理隐藏的缩略图]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'removeThumb',\n        value: function removeThumb() {\n            var list = this.list,\n                createNew = this.createNew,\n                createBak = this.createBak;\n\n            _.each(createBak, function (val, i) {\n                if (!_.contains(createNew, val)) {\n                    //标记要清理的索引\n                    createBak[i] = -1;\n                    list.eq(val).css({\n                        'background': ''\n                    });\n                }\n            });\n\n            //执行清理\n            this.createBak = _.without(createBak, -1);\n        }\n\n        /**\r\n         * [ 得到滑动列表中最左侧的索引]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'getPageIndex',\n        value: function getPageIndex() {\n            if (this.hBox.options.scrollX) {\n                return this.hBox.currentPage.pageX;\n            } else {\n                return this.hBox.currentPage.pageY;\n            }\n        }\n\n        /**\r\n         * [ 获取待创建的缩略图的个数]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'getViewLen',\n        value: function getViewLen() {\n            var hBox = this.hBox,\n                eleSize = 1,\n                //单个li的高度,\n            count = 1,\n                len = this.pageArray.length; //li的总数\n\n            if (this._isHorizontal) {\n                eleSize = hBox.scrollerWidth / len;\n                count = hBox.wrapperWidth / eleSize;\n            } else {\n                eleSize = hBox.scrollerHeight / len;\n                count = hBox.wrapperHeight / eleSize;\n            }\n            //多创建一个\n            return Math.ceil(count) + 1;\n        }\n\n        /**\r\n         * 点击元素跳转\r\n         */\n\n    }, {\n        key: 'tojump',\n        value: function tojump(env) {\n            var target;\n            var xxtlink;\n            if (target = env.target) {\n                // initialize();\n                if (xxtlink = target.getAttribute('data-xxtlink')) {\n                    xxtlink = xxtlink.split('-');\n                    Xut.View.GotoSlide(xxtlink[0], xxtlink[1]);\n                }\n            }\n        }\n\n        /**\r\n         * 滚动指定位置\r\n         */\n\n    }, {\n        key: 'scrollTo',\n        value: function scrollTo() {\n            this.userIscroll();\n        }\n\n        /**\r\n         * 刷新\r\n         */\n\n    }, {\n        key: 'refresh',\n        value: function refresh() {\n            this.hBox && this.hBox.refresh();\n        }\n\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.hBox) {\n                this.$sectionlist.off();\n                this.hBox.destroy();\n                this.hBox = null;\n            }\n            this.pageArray = null;\n        }\n    }]);\n\n    return Section;\n}();\n\nexports.default = Section;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/navbar/section.js\n ** module id = 168\n ** module chunks = 0\n **/"],"mappingssourceRoot":""}