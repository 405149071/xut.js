{"version":3,"file":"0.105b4c6a587cbd35f264.hot-update.js","sources":["webpack:///./src/lib/toolbar/base/base.js?9e7f"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _svgicon = require('./svgicon');\n\nvar _iconconfig = require('./iconconfig');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isIOS = Xut.plat.isIOS;\n\n//获取翻页按钮位置\nvar arrowStyle = function arrowStyle() {\n    var config = Xut.config;\n    var height = config.iconHeight;\n    var settings = config.settings;\n    var styleText = 'height:' + height + 'px;width:' + height + 'px';\n    switch (settings.NavbarPos) {\n        case 0:\n            styleText += ';top:0';\n            break; //顶部\n        case 1:\n            styleText += ';margin-top:' + -height / 2 + 'px';\n            break; //中间\n        case 2:\n            styleText += ';top:auto;bottom:0';\n            break; //底部\n        default:\n            break;\n    }\n\n    return styleText;\n};\n\nvar BaseBar = function () {\n    function BaseBar() {\n        _classCallCheck(this, BaseBar);\n\n        /**\r\n         * 系统状态栏高度\r\n         * @type {[type]}\r\n         */\n        this.barHeight = isIOS ? 20 : 0;\n\n        /**\r\n         * 默认创建左翻页按钮\r\n         * @type {Boolean}\r\n         */\n        this.enableLeft = true;\n\n        /**\r\n         * 默认创建右翻页按钮 \r\n         * @type {Boolean}\r\n         */\n        this.enableRight = true;\n    }\n\n    _createClass(BaseBar, [{\n        key: 'initConfig',\n        value: function initConfig(config) {\n            var propHeight;\n            //获取高度缩放比\n            //自动选择缩放比例\n            this.propHeight = propHeight = function () {\n                var layout = config.layoutMode,\n                    prop = config.proportion;\n                return layout == \"horizontal\" ? prop.width : prop.height;\n            }();\n\n            //获取图标高度\n            //工具栏图标高度\n            this.iconHeight = function () {\n                var height = config.iconHeight;\n                return isIOS ? height : Math.round(propHeight * height);\n            }();\n\n            this.appName = config.shortName; //应用标题\n            this.settings = config.settings; //应用默认配置\n        }\n\n        /**\r\n         * 创建翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createArrows',\n        value: function createArrows() {\n            //是否使用自定义的翻页按钮: true /false\n            //图标名称是客户端指定的：pageforward_'+appId+'.svg\n            var isCustom = this.settings.customButton;\n\n            if (this.enableLeft) {\n                isCustom ? this.createLeftIcon() : this.createLeftArrow();\n            }\n\n            if (this.enableRight) {\n                isCustom ? this.createRightIcon() : this.createRightArrow();\n            }\n        }\n\n        /**\r\n         * 左箭头翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createLeftArrow',\n        value: function createLeftArrow() {\n            var style = arrowStyle(),\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            $dom = $('<div class=\"si-icon xut-flip-control xut-flip-control-left ' + state + '\" data-icon-name=\"prevArrow\" style=\"' + style + '\"></div>');\n\n            this.createSVGIcon($dom[0], function () {\n                Xut.View.GotoPrevSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.prev = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * 右箭头翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createRightArrow',\n        value: function createRightArrow() {\n            var style = arrowStyle(),\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            $dom = $('<div class=\"si-icon xut-flip-control xut-flip-control-right ' + state + '\" data-icon-name=\"nextArrow\" style=\"' + style + '\"></div>');\n\n            this.createSVGIcon($dom[0], function () {\n                Xut.View.GotoNextSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.next = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * 自定义左翻页按钮\r\n         * [createLeftIcon description]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createLeftIcon',\n        value: function createLeftIcon() {\n            var style = arrowStyle(),\n                appId = this.config.appId,\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            style += ';background-image:url(images/icons/pageforward_' + appId + '.svg);background-size:cover';\n            $dom = $('<div name=\"prevArrow\" class=\"xut-flip-control xut-flip-control-left ' + state + '\" style=\"' + style + '\"></div>');\n\n            $dom.on(\"touchend mouseup\", function () {\n                Xut.View.GotoPrevSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.prev = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        //自定义右翻页按钮\n\n    }, {\n        key: 'createRightIcon',\n        value: function createRightIcon() {\n            var style = arrowStyle(),\n                appId = this.config.appId,\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            style += ';background-image:url(images/icons/pageback_' + appId + '.svg);background-size:cover';\n            $dom = $('<div name=\"nextArrow\" class=\"xut-flip-control xut-flip-control-right ' + state + '\" style=\"' + style + '\"></div>');\n\n            $dom.on(\"touchend mouseup\", function () {\n                Xut.View.GotoNextSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.next = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * [ description]\r\n         * @param  {[type]} dir [next,prev]\r\n         * @param  {[type]} status  [true/false]\r\n         * @return {[type]}       [description]\r\n         */\n\n    }, {\n        key: 'toggleArrow',\n        value: function toggleArrow(dir, status) {\n            var arrow = this.arrows[dir];\n            //如果没有创建翻页按钮,则不处理\n            if (!arrow) return;\n            arrow.able = status;\n            //如果人为隐藏了工具栏,则不显示翻页按钮\n            if (this.hasTopBar && !this.barStatus && status) {\n                return;\n            }\n            arrow.el[status ? 'show' : 'hide']();\n        }\n\n        //隐藏下一页按钮\n\n    }, {\n        key: 'hideNext',\n        value: function hideNext() {\n            this.toggleArrow('next', false);\n        }\n\n        //显示下一页按钮\n\n    }, {\n        key: 'showNext',\n        value: function showNext() {\n            this.toggleArrow('next', true);\n        }\n\n        //隐藏上一页按钮\n\n    }, {\n        key: 'hidePrev',\n        value: function hidePrev() {\n            this.toggleArrow('prev', false);\n        }\n\n        //显示上一页按钮\n\n    }, {\n        key: 'showPrev',\n        value: function showPrev() {\n            this.toggleArrow('prev', true);\n        }\n\n        /**\r\n         * [ 显示翻页按钮]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'showPageBar',\n        value: function showPageBar() {\n            var arrows = this.arrows;\n\n            for (var dir in arrows) {\n                var arrow = arrows[dir];\n                arrow.able && arrow.el.show();\n            }\n        }\n\n        /**\r\n         * [ 隐藏翻页按钮]\r\n         * @param  {[type]} unlock [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'hidePageBar',\n        value: function hidePageBar() {\n            var arrows = this.arrows;\n            for (var dir in arrows) {\n                arrows[dir].el.hide();\n            }\n        }\n\n        /**\r\n         * [description]\r\n         * @param  {[type]} state   [description]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'toggle',\n        value: function toggle(state, pointer) {\n            if (this.Lock) return;\n            this.Lock = true;\n\n            switch (state) {\n                case 'show':\n                    this.showToolbar(pointer);\n                    break;\n                case 'hide':\n                    this.hideToolbar(pointer);\n                    break;\n                default:\n                    this.barStatus ? this.hideToolbar(pointer) : this.showToolbar(pointer);\n                    break;\n            }\n        }\n\n        /**\r\n         * [ 显示工具栏]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'showToolbar',\n        value: function showToolbar(pointer) {\n            switch (pointer) {\n                case 'controlBar':\n                    this.showTopBar();\n                    break;\n                case 'button':\n                    this.showPageBar();\n                    this.Lock = false;\n                    break;\n                default:\n                    this.showTopBar();\n                    this.showPageBar();\n            }\n        }\n\n        /**\r\n         * [ 隐藏工具栏]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'hideToolbar',\n        value: function hideToolbar(pointer) {\n            switch (pointer) {\n                case 'controlBar':\n                    this.hideTopBar();\n                    break;\n                case 'button':\n                    this.hidePageBar();\n                    this.Lock = false;\n                    break;\n                default:\n                    this.hideTopBar();\n                    this.hidePageBar();\n            }\n        }\n\n        /**\r\n         * 显示IOS系统工具栏\r\n         *  iOS状态栏0=show,1=hide\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showSystemBar',\n        value: function showSystemBar() {\n            isIOS && Xut.Plugin.statusbarPlugin.setStatus(null, null, 0);\n        }\n\n        /**\r\n         * 隐藏IOS系统工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideSystemBar',\n        value: function hideSystemBar() {\n            isIOS && Xut.Plugin.statusbarPlugin.setStatus(null, null, 1);\n        }\n\n        //创建SVG按钮\n\n    }, {\n        key: 'createSVGIcon',\n        value: function createSVGIcon(el, callback) {\n            var options = {\n                speed: 6000,\n                size: {\n                    w: this.iconHeight,\n                    h: this.iconHeight\n                },\n                onToggle: callback\n            };\n            return new _svgicon.svgIcon(el, _iconconfig.iconConfig, options);\n        }\n\n        //重置翻页按钮,状态以工具栏为标准\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.barStatus ? this.showPageBar() : this.hidePageBar();\n        }\n    }]);\n\n    return BaseBar;\n}();\n\nexports.default = BaseBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/base/base.js\n ** module id = 167\n ** module chunks = 0\n **/"],"mappingssourceRoot":""}