{"version":3,"file":"app.js","sources":["webpack:///webpack/bootstrap fd40b5cb95ac844e89dc","webpack:///./src/lib/config/index.js","webpack:///./src/lib/util/index.js","webpack:///./src/lib/nexttick.js","webpack:///./src/lib/component/video/manager.js","webpack:///./src/lib/tap.js","webpack:///./src/lib/component/audio/manager.js","webpack:///./src/lib/command/index.js","webpack:///./src/lib/swipe/translation.js","webpack:///./src/lib/util/dom.js","webpack:///./src/lib/util/loader.js","webpack:///./src/lib/command/access.js","webpack:///./src/lib/component/activity/event/event.js","webpack:///./src/lib/scenario/controller.js","webpack:///./src/lib/toolbar/navbar/index.js","webpack:///./src/lib/util/option.js","webpack:///./src/lib/util/stroage.js","webpack:///./src/lib/component/audio/fix.js","webpack:///./src/lib/config/default.js","webpack:///./src/lib/database/cache.js","webpack:///./src/lib/database/results.js","webpack:///./src/lib/directive/index.js","webpack:///./src/lib/observer/index.js","webpack:///./src/lib/util/cursor.js","webpack:///./src/lib/component/activity/iscroll.js","webpack:///./src/lib/component/audio/audio.js","webpack:///./src/lib/component/flow/layout.js","webpack:///./src/lib/component/plugin/ppt/support.js","webpack:///./src/lib/component/plugin/sprite.js","webpack:///./src/lib/component/video/video.js","webpack:///./src/lib/component/widget/page/advsprite.js","webpack:///./src/lib/database/query.js","webpack:///./src/lib/global-stop.js","webpack:///./src/lib/main/scene.js","webpack:///./src/lib/main/video.js","webpack:///./src/lib/manager/abstract.js","webpack:///./src/lib/manager/dispatch/depend.js","webpack:///./src/lib/manager/hooks.js","webpack:///./src/lib/manager/parser.js","webpack:///./src/lib/pagebase/depend/multievent.js","webpack:///./src/lib/pagebase/pagebase.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/parsecontent.js","webpack:///./src/lib/scenario/layout.js","webpack:///./src/lib/swipe/depend.js","webpack:///./src/lib/swipe/index.js","webpack:///./src/lib/util/execute.js","webpack:///./src/lib/util/lang.js","webpack:///./src/lib/util/notice.js","webpack:///./~/html-entities/lib/html5-entities.js","webpack:///./~/ansi-html/index.js","webpack:///./~/ansi-regex/index.js","webpack:///./build/dev/client.js","webpack:///./src/lib/backstage.js","webpack:///./src/lib/command/auto.js","webpack:///./src/lib/command/original.js","webpack:///./src/lib/command/recovery.js","webpack:///./src/lib/command/suspend.js","webpack:///./src/lib/command/trigger.js","webpack:///./src/lib/component/action/index.js","webpack:///./src/lib/component/activity/bookmark/bookmark.js","webpack:///./src/lib/component/activity/bookmark/index.js","webpack:///./src/lib/component/activity/content.js","webpack:///./src/lib/component/activity/effects.js","webpack:///./src/lib/component/activity/event/complex.js","webpack:///./src/lib/component/activity/event/drag.js","webpack:///./src/lib/component/activity/event/index.js","webpack:///./src/lib/component/activity/event/simple.js","webpack:///./src/lib/component/activity/extra.js","webpack:///./src/lib/component/activity/filter.js","webpack:///./src/lib/component/activity/index.js","webpack:///./src/lib/component/activity/parallax.js","webpack:///./src/lib/component/activity/searchbar/index.js","webpack:///./src/lib/component/activity/searchbar/searchbar.js","webpack:///./src/lib/component/activity/sprite/auto.js","webpack:///./src/lib/component/activity/sprite/com.js","webpack:///./src/lib/component/activity/task.js","webpack:///./src/lib/component/activity/textbox/htmlbox.js","webpack:///./src/lib/component/activity/textbox/index.js","webpack:///./src/lib/component/audio/action.js","webpack:///./src/lib/component/audio/baseclass.js","webpack:///./src/lib/component/audio/subtitle.js","webpack:///./src/lib/component/flow/index.js","webpack:///./src/lib/component/flow/render.js","webpack:///./src/lib/component/note/index.js","webpack:///./src/lib/component/plugin/css3.js","webpack:///./src/lib/component/plugin/keyframe.js","webpack:///./src/lib/component/plugin/ppt/index.js","webpack:///./src/lib/component/plugin/ppt/internal.js","webpack:///./src/lib/component/plugin/ppt/util.js","webpack:///./src/lib/component/video/support.js","webpack:///./src/lib/component/widget/adapter.js","webpack:///./src/lib/component/widget/iframe.js","webpack:///./src/lib/component/widget/page/data.js","webpack:///./src/lib/component/widget/page/index.js","webpack:///./src/lib/component/widget/page/loader.js","webpack:///./src/lib/config/iframe.js","webpack:///./src/lib/config/judge.js","webpack:///./src/lib/config/native.js","webpack:///./src/lib/database/destroy.js","webpack:///./src/lib/database/index.js","webpack:///./src/lib/database/transform.js","webpack:///./src/lib/directive/action.js","webpack:///./src/lib/directive/content.js","webpack:///./src/lib/directive/media.js","webpack:///./src/lib/directive/shownote.js","webpack:///./src/lib/directive/widget.js","webpack:///./src/lib/dynamic-api.js","webpack:///./src/lib/global-api.js","webpack:///./src/lib/global-destroy.js","webpack:///./src/lib/index.js","webpack:///./src/lib/main/button.js","webpack:///./src/lib/main/data.js","webpack:///./src/lib/main/dynamic.js","webpack:///./src/lib/main/index.js","webpack:///./src/lib/manager/dispatch/index.js","webpack:///./src/lib/manager/dispatch/switch.js","webpack:///./src/lib/manager/filter.js","webpack:///./src/lib/manager/index.js","webpack:///./src/lib/manager/master.js","webpack:///./src/lib/manager/page.js","webpack:///./src/lib/pagebase/depend/collection.js","webpack:///./src/lib/pagebase/depend/factory.js","webpack:///./src/lib/pagebase/internal/data-api.js","webpack:///./src/lib/pagebase/internal/destroy.js","webpack:///./src/lib/pagebase/internal/initstate.js","webpack:///./src/lib/pagebase/internal/thread-api.js","webpack:///./src/lib/pagebase/threadtask/assign.js","webpack:///./src/lib/pagebase/threadtask/background/index.js","webpack:///./src/lib/pagebase/threadtask/cache.js","webpack:///./src/lib/pagebase/threadtask/component/index.js","webpack:///./src/lib/pagebase/threadtask/container/index.js","webpack:///./src/lib/pagebase/threadtask/contents/data.js","webpack:///./src/lib/pagebase/threadtask/contents/index.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/canvas.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/container.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/dom.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/index.js","webpack:///./src/lib/pagebase/threadtask/contents/structure/parsetype.js","webpack:///./src/lib/pagebase/threadtask/flow/index.js","webpack:///./src/lib/pagebase/threadtask/states.js","webpack:///./src/lib/pagebase/threadtask/tasks.js","webpack:///./src/lib/scenario/barconf.js","webpack:///./src/lib/scenario/factory.js","webpack:///./src/lib/swipe/api.js","webpack:///./src/lib/toolbar/base/iconconfig.js","webpack:///./src/lib/toolbar/base/svgicon.js","webpack:///./src/lib/toolbar/fnbar.js","webpack:///./src/lib/toolbar/navbar/dom.js","webpack:///./src/lib/toolbar/sysbar.js","webpack:///./src/lib/util/buffer.js","webpack:///./src/lib/util/edge.js","webpack:///./~/eventsource-polyfill/dist/browserify-eventsource.js","webpack:///./~/eventsource-polyfill/dist/eventsource.js","webpack:///./~/html-entities/index.js","webpack:///./~/html-entities/lib/html4-entities.js","webpack:///./~/html-entities/lib/xml-entities.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/strip-ansi/index.js","webpack:///(webpack)-hot-middleware/client-overlay.js","webpack:///(webpack)-hot-middleware/client.js","webpack:///(webpack)-hot-middleware/process-update.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/lib/toolbar/base/bar.js","webpack:///./src/lib/toolbar/bookbar/index.js","webpack:///./src/lib/toolbar/bookbar/Mark.js"],"sourcesContent":[" \tvar parentHotUpdateCallback = this[\"webpackHotUpdate\"];\n \tthis[\"webpackHotUpdate\"] = \r\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\thotAddUpdateChunk(chunkId, moreModules);\r\n \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\r\n \t}\r\n \t\r\n \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\r\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\r\n \t\tvar script = document.createElement(\"script\");\r\n \t\tscript.type = \"text/javascript\";\r\n \t\tscript.charset = \"utf-8\";\r\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\r\n \t\thead.appendChild(script);\r\n \t}\r\n \t\r\n \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\r\n \t\tif(typeof XMLHttpRequest === \"undefined\")\r\n \t\t\treturn callback(new Error(\"No browser support\"));\r\n \t\ttry {\r\n \t\t\tvar request = new XMLHttpRequest();\r\n \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\r\n \t\t\trequest.open(\"GET\", requestPath, true);\r\n \t\t\trequest.timeout = 10000;\r\n \t\t\trequest.send(null);\r\n \t\t} catch(err) {\r\n \t\t\treturn callback(err);\r\n \t\t}\r\n \t\trequest.onreadystatechange = function() {\r\n \t\t\tif(request.readyState !== 4) return;\r\n \t\t\tif(request.status === 0) {\r\n \t\t\t\t// timeout\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\r\n \t\t\t} else if(request.status === 404) {\r\n \t\t\t\t// no update available\r\n \t\t\t\tcallback();\r\n \t\t\t} else if(request.status !== 200 && request.status !== 304) {\r\n \t\t\t\t// other failure\r\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\r\n \t\t\t} else {\r\n \t\t\t\t// success\r\n \t\t\t\ttry {\r\n \t\t\t\t\tvar update = JSON.parse(request.responseText);\r\n \t\t\t\t} catch(e) {\r\n \t\t\t\t\tcallback(e);\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tcallback(null, update);\r\n \t\t\t}\r\n \t\t};\r\n \t}\r\n\n \t\r\n \t\r\n \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"fd40b5cb95ac844e89dc\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fd40b5cb95ac844e89dc\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.config = undefined;\nexports.resetDataAPI = resetDataAPI;\nexports.fixResourcesPath = fixResourcesPath;\nexports.fixProportion = fixProportion;\n\nvar _native = require('./native');\n\nvar _native2 = _interopRequireDefault(_native);\n\nvar _iframe = require('./iframe');\n\nvar _iframe2 = _interopRequireDefault(_iframe);\n\nvar _default = require('./default');\n\nvar _judge = require('./judge');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 配置文件\r\n * @param  {[type]} require [description]\r\n * @param  {[type]} exports [description]\r\n * @param  {[type]} module  [description]\r\n * @return {[type]}         [description]\r\n */\nvar plat = Xut.plat;\nvar isIphone = Xut.plat.isIphone;\nvar isBrowser = Xut.plat.isBrowser;\nvar GLOBALIFRAME = window.GLOBALIFRAME;\nvar CLIENTCONFIGT = window.CLIENTCONFIGT;\nvar MMXCONFIG = window.MMXCONFIG;\n\nvar config = Object.create(null);\nvar layoutMode = void 0;\nvar proportion = void 0;\n\n/**\r\n * 设置模板分解符\r\n * @type {Object}\r\n */\n_.templateSettings = {\n    interpolate: /\\{\\{(.+?)\\}\\}/g\n};\n\n/**\r\n * 层级关系\r\n * @return {[type]} [description]\r\n */\nXut.zIndexlevel = function () {\n    return ++config.zIndexlevel;\n};\n\n//通过新学堂加载\n//用于处理iframe窗口去全屏\nif (/xinxuetang/.test(window.location.href)) {\n    config.iframeFullScreen = true;\n}\n\n/**\r\n * 是否启动缓存机制\r\n * 第一次默认是关闭\r\n * 必须读取一次后，缓存启动\r\n * 为了支持window.DYNAMICCONFIGT模式\r\n * @type {Boolean}\r\n */\nvar isCacheVideoPath = false;\nvar isCacheAudioPath = false;\nvar isCacheSvgPath = false;\nvar isCacheJsWidgetPath = false;\n\nvar cacheVideoPath = void 0;\nvar cacheAudioPath = void 0;\nvar cacheSvgPath = void 0;\nvar cacheJsWidgetPath = void 0;\n\n/**\r\n * pc端模式\r\n * 而且是客户端模式\r\n * @return {[type]} [description]\r\n */\nvar desktopPlat = function desktopPlat() {\n\n    //2016.9.13\n    //新增动态模式\n    if (window.DYNAMICCONFIGT) {\n        return (0, _default.getSourcePath)();\n    }\n\n    //如果是iframe加载\n    //而且是客户端模式\n    if (GLOBALIFRAME && CLIENTCONFIGT) {\n        return CLIENTCONFIGT.path;\n    }\n\n    if (typeof initGalleryUrl != 'undefined') {\n        return (0, _default.getSourcePath)();\n    } else {\n        //资源存放位置\n        // * storageMode 存放的位置\n        // * 0 APK应用本身\n        // 1 外置SD卡\n        if (Number(config.storageMode)) {\n            return \"sdcard/\" + config.appId + \"/\" + (0, _default.getSourcePath)();\n        } else {\n            return (0, _default.getSourcePath)();\n        }\n    }\n};\n\n/**\r\n * 平台加载用于\r\n * 视频.音频妙妙学处理\r\n * 1 桌面\r\n * 2 移动端\r\n * 3 安卓打包后通过网页访问=>妙妙学\r\n * @return {[type]} [description]\r\n */\nvar runMode = function () {\n    if (MMXCONFIG) {\n        return false;\n    }\n    return isBrowser;\n}();\n\n/**\r\n * 图片资源配置路径\r\n * [resourcesPath description]\r\n * @return {[type]} [description]\r\n */\nvar _rsourcesPath = function _rsourcesPath() {\n    return isBrowser ? desktopPlat() : GLOBALIFRAME ? _iframe2.default.resources(config) : _native2.default.resources(config);\n};\n\n/**\r\n * mp3 mp4 音频文件路径\r\n * 1 音频加载就会自动拷贝到SD卡上\r\n * 2 或者asset上的资源\r\n * @return {[type]} [description]\r\n */\nvar _videoPath = function _videoPath() {\n    return runMode ? desktopPlat() : GLOBALIFRAME ? _iframe2.default.video() : _native2.default.video();\n};\n\n/**\r\n * 音频路径\r\n * @return {[type]} [description]\r\n */\nvar _audioPath = function _audioPath() {\n    return runMode ? desktopPlat() : GLOBALIFRAME ? _iframe2.default.audio() : _native2.default.audio();\n};\n\n/**\r\n * SVG文件路径\r\n * @return {[type]} [description]\r\n */\nvar _svgPath = function _svgPath() {\n    return isBrowser ? desktopPlat() : GLOBALIFRAME ? _iframe2.default.svg() : _native2.default.svg();\n};\n\n/**\r\n * js零件\r\n * 2016.8.3 妙妙学新增\r\n * 只提供相对路径\r\n * @return {[type]} [description]\r\n */\nvar _jsWidgetPath = function _jsWidgetPath() {\n    return isBrowser ? (0, _default.getWidgetPath)() : GLOBALIFRAME ? _iframe2.default.jsWidget() : _native2.default.jsWidget();\n};\n\n/**\r\n * 打印信息\r\n * @param  {[type]} info [description]\r\n * @param  {[type]} name [description]\r\n * @return {[type]}      [description]\r\n */\nXut.log = function (info, name) {\n    if (!config.debugMode) return;\n    switch (info) {\n        case 'error':\n            console.error && console.error(name);\n            break;\n        case 'debug':\n            console.debug && console.debug(name);\n            break;\n        default:\n            console.log(info);\n            break;\n    }\n};\n\n/**\r\n * 全局配置文件\r\n * [debugMode description]\r\n * @type {Boolean}\r\n */\n_.extend(config, {\n\n    //2016.7.26\n    //读酷增加强制插件模式\n    isPlugin: window.DUKUCONFIG && plat.isIOS,\n\n    /**\r\n     * 调试模式\r\n     * 如果启动桌面调试模式,自动打开缓存加载,就是每次都打开都回到最后看到的一页\r\n     * [debugMode description]\r\n     * @type {Boolean}\r\n     */\n    debugMode: false,\n\n    /**\r\n     * 直接通过数据库的历史记录定位到指定的页面\r\n     * Xut.View.LoadScenario({\r\n     *     'scenarioId' : scenarioInfo[0],\r\n     *     'chapterId'  : scenarioInfo[1],\r\n     *     'pageIndex'  : scenarioInfo[2]\r\n     *  })\r\n     *  {\r\n     *     'scenarioId' : 7,\r\n     *     'chapterId'  : 9\r\n     *  }\r\n     * @type {Boolean}\r\n     */\n    deBugHistory: false,\n\n    /**\r\n     * 支持电子在在线阅读,向服务端取数据\r\n     * 自定义配置地址即可'\r\n     * @type {String}\r\n     */\n    onlineModeUrl: 'lib/data/database.php',\n\n    /**\r\n     * 数据库名\r\n     * @type {[type]}\r\n     */\n    dbName: window.xxtmagzinedbname || 'magazine',\n\n    /**\r\n     * 全局翻页模式\r\n     * 0 滑动翻页\r\n     * 1 直接换\r\n     * [pageFlip description]\r\n     * @type {Number}\r\n     */\n    pageFlip: 0,\n\n    /**\r\n     * 存储模式\r\n     * 0 APK应用本身\r\n     * 1 外置SD卡\r\n     */\n    storageMode: 0,\n\n    /**\r\n     * 虚拟模式\r\n     * 采用word排版，如果是横屏的布局放到竖版的手机上\r\n     * 就需要分割排版布局\r\n     * @type {Boolean}\r\n     */\n    virtualMode: false,\n\n    /**\r\n     * 画轴模式\r\n     * 在不同分辨率下，按照正比缩放拼接\r\n     * 在一个可视区中，可以看到3个li拼接后的效果\r\n     * [scrollPaintingMode description]\r\n     * @type {Boolean}\r\n     */\n    scrollPaintingMode: false,\n\n    /**\r\n     * 独立canvas模式处理\r\n     * 为了测试方便\r\n     * 可以直接切换到dom模式\r\n     * @type {Boolean}\r\n     */\n    onlyDomMode: false,\n\n    /**\r\n     *canvas的处理模式\r\n     *合并模式：merge\r\n     *单个模式：single\r\n     */\n    canvasProcessMode: 'merge',\n\n    /**\r\n     * 应用路径唯一标示\r\n     * @type {[type]}\r\n     */\n    appId: null,\n\n    /**\r\n     * 资源路径\r\n     * @type {[type]}\r\n     */\n    pathAddress: null,\n\n    /**\r\n     * 视频文件路径\r\n     * @return {[type]} [description]\r\n     */\n    videoPath: function videoPath() {\n        if (isCacheVideoPath && cacheVideoPath) {\n            return cacheVideoPath;\n        }\n        isCacheVideoPath = true;\n        return cacheVideoPath = _videoPath();\n    },\n\n\n    /**\r\n     * 音频文件路径\r\n     * @return {[type]} [description]\r\n     */\n    audioPath: function audioPath() {\n        if (isCacheAudioPath && cacheAudioPath) {\n            return cacheAudioPath;\n        }\n        isCacheAudioPath = true;\n        return cacheAudioPath = _audioPath();\n    },\n\n\n    /**\r\n     * 配置SVG文件路径\r\n     * @return {[type]} [description]\r\n     */\n    svgPath: function svgPath() {\n        if (isCacheSvgPath && cacheSvgPath) {\n            return cacheSvgPath;\n        }\n        isCacheSvgPath = true;\n        return cacheSvgPath = _svgPath();\n    },\n\n\n    /**\r\n     * 配置js零件文件路径\r\n     * 2016.8.3增加\r\n     * @return {[type]} [description]\r\n     */\n    jsWidgetPath: function jsWidgetPath() {\n        if (isCacheJsWidgetPath && cacheJsWidgetPath) {\n            return cacheJsWidgetPath;\n        }\n        isCacheJsWidgetPath = true;\n        return cacheJsWidgetPath = _jsWidgetPath();\n    },\n\n\n    /**\r\n     * 排版模式\r\n     * @type {[type]}\r\n     */\n    layoutMode: layoutMode,\n\n    /**\r\n     * 缩放比例\r\n     * @type {[type]}\r\n     */\n    proportion: proportion,\n\n    /**\r\n     * 是浏览器\r\n     * @type {Boolean}\r\n     */\n    isBrowser: isBrowser,\n\n    /**\r\n     * 全局层级初始值\r\n     * @type {Number}\r\n     */\n    zIndexlevel: 1000,\n\n    /**\r\n     * 默认图标高度\r\n     * @type {[type]}\r\n     */\n    iconHeight: isIphone ? 32 : 44,\n\n    /**\r\n     * 数据库尺寸\r\n     * @type {Number}\r\n     */\n    dbSize: 1\n});\n\nXut.config = config;\n\nexports.config = config;\nfunction resetDataAPI() {\n    //设备尺寸\n    config.screenSize = (0, _judge._screen)();\n    //可视尺寸\n    config.viewSize = (0, _judge._screen)();\n    layoutMode = config.layoutMode = (0, _judge._layer)(config.screenSize);\n    proportion = config.proportion = (0, _judge._scale)(config);\n}\n\n/**\r\n * 初始化资源路径\r\n * 配置图片路径地址\r\n * @return {[type]} [description]\r\n */\nfunction fixResourcesPath() {\n    //资源缓存关闭\n    isCacheVideoPath = false;\n    isCacheAudioPath = false;\n    isCacheSvgPath = false;\n    isCacheJsWidgetPath = false;\n    config.pathAddress = _rsourcesPath();\n}\n\n/**\r\n * 修正缩放比\r\n * 通过数据库中的设置的模板尺寸与实际尺寸修复\r\n * @type {[type]}\r\n */\nfunction fixProportion(pptWidth, pptHeight) {\n\n    var proportion = (0, _judge._fixProportion)(config, pptWidth, pptHeight);\n    var calculate = proportion.calculateContainer();\n\n    /**\r\n     * 可视区域尺寸\r\n     * @type {Object}\r\n     */\n    config.viewSize = {\n        width: config.virtualMode ? calculate.width / 2 : calculate.width,\n        height: calculate.height\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/config/index.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lang = require('./lang');\n\nObject.keys(_lang).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _lang[key];\n    }\n  });\n});\n\nvar _dom = require('./dom');\n\nObject.keys(_dom).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dom[key];\n    }\n  });\n});\n\nvar _loader = require('./loader');\n\nObject.keys(_loader).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _loader[key];\n    }\n  });\n});\n\nvar _stroage = require('./stroage');\n\nObject.keys(_stroage).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _stroage[key];\n    }\n  });\n});\n\nvar _option = require('./option');\n\nObject.keys(_option).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _option[key];\n    }\n  });\n});\n\nvar _buffer = require('./buffer');\n\nObject.keys(_buffer).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _buffer[key];\n    }\n  });\n});\n\nvar _execute = require('./execute');\n\nObject.keys(_execute).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _execute[key];\n    }\n  });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/index.js\n ** module id = 2\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nexports.default = nextTick;\n/**\r\n * 当监听的节点内容发生变化时,触发指定的回调\r\n * @param opts {\r\n *   container:父容器,dom对象或jQuery对象\r\n *   content  :要加入父容器的内容,字符串或jQuery对象\r\n *   position :内容插入父容器的位置,'first' 表示在前加入,默认在末尾\r\n *   delay    :延时,默认0\r\n *   }\r\n * @version  1.02\r\n * @author [author] bjtqti\r\n * @return {[type]} [description]\r\n */\n\nvar DOC = document;\nvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n\nvar implementation = DOC.implementation.hasFeature(\"MutationEvents\", \"2.0\");\n\nfunction nextTick() {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var container = _ref.container;\n    var content = _ref.content;\n    var position = _ref.position;\n    var _ref$delay = _ref.delay;\n    var delay = _ref$delay === undefined ? 0 : _ref$delay;\n    var callback = arguments[1];\n    var context = arguments[2];\n\n\n    var animatId = 'T' + (Math.random() * 10000 << 1);\n    var tick = DOC.createElement('input');\n    var observer = null;\n\n    if (!container || !content) {\n        return;\n    }\n\n    //检查容器---$(container) 转为dom对象\n    if ((typeof container === \"undefined\" ? \"undefined\" : _typeof(container)) === 'object' && container.selector !== undefined) {\n        container = container[0];\n    }\n\n    if (container.nodeType !== 1) {\n        console.log('container must be HTMLLIElement ');\n        return;\n    }\n\n    //标记任务\n    tick.setAttribute('value', animatId);\n\n    //检查内容\n    if (typeof content === 'string') {\n        var temp = $(content);\n        if (!temp[0]) {\n            //纯文本内容\n            temp = DOC.createTextNode(content);\n            temp = $(temp);\n        }\n        content = temp;\n    }\n\n    /**\r\n     * 组装内容到临时片段\r\n     * @return {[type]} [description]\r\n     */\n    var _createFragment = function _createFragment() {\n        var frag = DOC.createDocumentFragment(),\n            len = content.length;\n        for (var i = 0; i < len; i++) {\n            frag.appendChild(content[i]);\n        }\n        return frag;\n    };\n\n    /**\r\n     * 将内容加入父容器\r\n     * @return {[type]} [description]\r\n     */\n    var _appendChild = function _appendChild() {\n        //拼接内容\n        content = _createFragment();\n        content.appendChild(tick);\n        //判断插入的位置\n        if (position === 'first') {\n            container.insertBefore(content, container.firstChild);\n        } else {\n            container.appendChild(content);\n        }\n        //触发变动事件\n        tick.setAttribute('value', animatId);\n    };\n\n    /**\r\n     * 完成任务后处理&Event\r\n     * @param  {[type]} event [description]\r\n     * @return {[type]}       [description]\r\n     */\n    var _finishTask = function _finishTask(event) {\n        if (event.target.value === animatId) {\n            //container.removeEventListener('DOMNodeRemoved',_finishTask,false);\n            container.removeEventListener('DOMNodeInserted', _finishTask, false);\n            callback.call(context);\n        }\n    };\n\n    /**\r\n     * 完成任务后处理&Observer\r\n     * @return {[type]} [description]\r\n     */\n    var _completeTask = function _completeTask() {\n        container.removeChild(tick);\n        callback.call(context);\n    };\n\n    if (MutationObserver) {\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (record) {\n                if (record.oldValue === animatId) {\n                    _completeTask();\n                    observer = null;\n                }\n            });\n        });\n\n        //设置要监听的属性\n        observer.observe(tick, {\n            attributes: true,\n            //childList: true,\n            attributeOldValue: true,\n            attributeFilter: [\"value\"] //只监听value属性,提高性能\n        });\n\n        _appendChild();\n    } else {\n\n        //检测是否支持DOM变动事件\n        if (implementation) {\n            //container.addEventListener('DOMNodeRemoved',_finishTask,false);\n            container.addEventListener('DOMNodeInserted', _finishTask, false);\n            _appendChild();\n            container.removeChild(tick);\n        } else {\n            //歉容Android2.xx处理\n            _appendChild();\n            setTimeout(function () {\n                _completeTask();\n            }, delay);\n        }\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/nexttick.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.autoVideo = autoVideo;\nexports.triggerVideo = triggerVideo;\nexports.removeVideo = removeVideo;\nexports.clearVideo = clearVideo;\nexports.hangUpVideo = hangUpVideo;\n\nvar _video = require('./video');\n\nvar _index = require('../../config/index');\n\nvar _index2 = require('../../util/index');\n\nvar pageBox = void 0; /*\r\n                          视频和远程网页管理模块\r\n                      */\n\nvar playBox = void 0;\n\nvar initBox = function initBox() {\n    pageBox = (0, _index2.hash)(); //当前页面包含的视频数据\n    playBox = (0, _index2.hash)(); //播放过的视频数据 （播放集合)\n};\n\ninitBox();\n\n/**\r\n * 配置视频结构\r\n * @param  {[type]} data       [description]\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @return {[type]}            [description]\r\n */\nvar deployVideo = function deployVideo(data, pageId, activityId) {\n\n    var proportion = _index.config.proportion;\n    var screenSize = _index.config.screenSize;\n\n    var videoInfo = {\n        'pageId': pageId,\n        'videoId': activityId,\n        'url': data.md5,\n        'pageUrl': data.url,\n        'left': data.left * proportion.left || 0,\n        'top': data.top * proportion.top || 0,\n        'width': data.width * proportion.width || screenSize.width,\n        'height': data.height * proportion.height || screenSize.height,\n        'padding': data.padding * proportion.left || 0,\n        'zIndex': data.zIndex || 2147483647,\n        'background': data.background,\n        'category': data.category,\n        'hyperlink': data.hyperlink\n    };\n\n    if (!_.isObject(pageBox[pageId])) {\n        pageBox[pageId] = {};\n    }\n\n    pageBox[pageId][activityId] = videoInfo;\n};\n\n/**\r\n * 检测数据是否存在\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @return {[type]}            [description]\r\n */\nvar checkRepeat = function checkRepeat(pageId, activityId) {\n    var chapterData = pageBox[pageId];\n    //如果能在pageBox找到对应的数据\n    if (chapterData && chapterData[activityId]) {\n        return true;\n    }\n    return false;\n};\n\n//处理重复数据\n// 1:pageBox能找到对应的 videoId\n// 2:重新查询数据\nvar parseVideo = function parseVideo(pageId, activityId) {\n    //复重\n    if (checkRepeat(pageId, activityId)) {\n        return;\n    }\n    //新的查询\n    var data = Xut.data.query('Video', activityId);\n    deployVideo(data, pageId, activityId);\n};\n\n/**\r\n * 加载视频\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} container  [description]\r\n * @return {[type]}            [description]\r\n */\nvar loadVideo = function loadVideo(pageId, activityId, container) {\n    var data = pageBox[pageId][activityId];\n\n    //search video cache\n    if (playBox[pageId] && playBox[pageId][activityId]) {\n        //console.log('*********cache*********');\n        playBox[pageId][activityId].play();\n    } else {\n        //console.log('=========new=============');\n        if (!_.isObject(playBox[pageId])) {\n            playBox[pageId] = {};\n        }\n        //cache video object\n        playBox[pageId][activityId] = new _video.VideoClass(data, container);\n    }\n};\n\n/**\r\n * 触发视频\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} container  [description]\r\n * @return {[type]}            [description]\r\n */\nvar initVideo = function initVideo(pageId, activityId, container) {\n    //解析数据\n    parseVideo(pageId, activityId);\n    //调用播放\n    loadVideo(pageId, activityId, container);\n};\n\n/**\r\n * 自动播放\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} container  [description]\r\n * @return {[type]}            [description]\r\n */\nfunction autoVideo(pageId, activityId, container) {\n    initVideo(pageId, activityId, container);\n}\n\n/**\r\n * 手动播放\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} container  [description]\r\n * @return {[type]}            [description]\r\n */\nfunction triggerVideo(pageId, activityId, container) {\n    initVideo(pageId, activityId, container);\n}\n\n/**\r\n * 清理移除页的视频\r\n * @param  {[type]} pageId [description]\r\n * @return {[type]}        [description]\r\n */\nfunction removeVideo(pageId) {\n    //清理视频\n    if (playBox && playBox[pageId]) {\n        for (var activityId in playBox[pageId]) {\n            playBox[pageId][activityId].close();\n        }\n        delete playBox[pageId];\n    }\n    //清理数据\n    if (pageBox && pageBox[pageId]) {\n        delete pageBox[pageId];\n    }\n}\n\n/**\r\n * 清理全部视频\r\n * @return {[type]} [description]\r\n */\nfunction clearVideo() {\n    var flag = false; //记录是否处理过销毁状态\n    for (var pageId in playBox) {\n        for (var activityId in playBox[pageId]) {\n            playBox[pageId][activityId].close();\n            flag = true;\n        }\n    }\n    initBox();\n    return flag;\n}\n\n/**\r\n * 挂起视频\r\n * @param  {[type]} pageId [description]\r\n * @return {[type]}        [description]\r\n */\nfunction hangUpVideo(pageId) {\n    for (var _pageId in playBox) {\n        for (var activityId in playBox[_pageId]) {\n            playBox[_pageId][activityId].stop();\n        }\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/video/manager.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.handle = handle;\nexports.bindTap = bindTap;\nexports.offTap = offTap;\n/**\r\n * 2015.3.24\r\n * 1 isBrowser\r\n * 2 isMobile\r\n * 3 isSurface\r\n */\nvar transitionEnd = Xut.style.transitionEnd;\n\n//2015.3.23\n//可以点击与触摸\nvar isSurface = Xut.plat.isSurface;\n\n//触发事件名\nvar touchName = ['touchstart', 'touchmove', 'touchend', transitionEnd];\nvar mouseName = ['mousedown', 'mousemove', 'mouseup', transitionEnd];\n\n//绑定事件名排序\nvar orderName = {\n    start: 0,\n    move: 1,\n    end: 2,\n    transitionend: 3\n};\n\nvar EVENT_NAME = function () {\n    if (isSurface) {\n        return {\n            touch: touchName,\n            mouse: mouseName\n        };\n    }\n    return Xut.plat.hasTouch ? touchName : mouseName;\n}();\n\nvar _apply = function _apply(events, callbacks, processor) {\n    _.each(callbacks, function (hooks, key) {\n        return hooks && processor(events[orderName[key]], hooks);\n    });\n};\n\n/**\r\n * 合并事件绑定处理\r\n * 因为isSurface设备上\r\n * 要同时支持2种方式\r\n * @return {[type]} [description]\r\n */\nvar _bind = function _bind(context, events, callbacks) {\n    _apply(events, callbacks, function (eventName, hook) {\n        return context.addEventListener(eventName, hook, false);\n    });\n};\n\n/**\r\n * 销毁事件绑定处理\r\n * 因为isSurface设备上\r\n * 要同时支持2种方式\r\n * @return {[type]} [description]\r\n */\nvar _off = function _off(context, events, callbacks) {\n    _apply(events, callbacks, function (eventName, hook) {\n        return context.removeEventListener(eventName, hook, false);\n    });\n};\n\n/**\r\n * processor\r\n * @param  {[type]}   processor    [处理器]\r\n * @param  {[type]}   eventContext [上下文]\r\n * @param  {Function} callback     [回调函数]\r\n * @return {[type]}                [description]\r\n */\nvar exec = function exec(processor, eventContext, callback) {\n    //如果两者都支持\n    //鼠标与触摸\n    if (isSurface) {\n        _.each(EVENT_NAME, function (events) {\n            processor(eventContext, events, callback);\n        });\n    } else {\n        processor(eventContext, EVENT_NAME, callback);\n    }\n};\n\n/**\r\n * 如果execEvent的callback绑定的this\r\n *handle(e, {\r\n *     start: function(e) {\r\n *         self.onTouchStart(e);\r\n *     },\r\n *     move: function(e) {\r\n *         self.onTouchMove(e);\r\n *     },\r\n *     end: function(e) {\r\n *         self.onTouchEnd(e);\r\n *     },\r\n *     transitionend: function(e) {\r\n *         self.onAnimComplete(e);\r\n *     }\r\n * })\r\n * @return {[type]}           [description]\r\n */\nfunction handle(callbacks, context, event) {\n    switch (event.type) {\n        case 'touchstart':\n        case 'mousedown':\n            callbacks.start && callbacks.start.call(context, event);\n            break;\n        case 'touchmove':\n        case 'mousemove':\n            callbacks.move && callbacks.move.call(context, event);\n            break;\n        case 'touchend':\n        case 'mouseup':\n            callbacks.end && callbacks.end.call(context, event);\n            break;\n        case transitionEnd:\n            callbacks.transitionend && callbacks.transitionend.call(context, event);\n            break;\n    }\n}\n\n/**\r\n * 合并事件绑定处理\r\n * 因为isSurface设备上\r\n * 要同时支持2种方式\r\n * bindTap(eventContext,{\r\n *     start   : start,\r\n *     move    : move,\r\n *     end     : end\r\n * })\r\n * @return {[type]} [description]\r\n */\nfunction bindTap(context, callbacks) {\n    exec(_bind, context, callbacks);\n}\n\n/**\r\n * 移除tap事件\r\n * @param  {[type]} context [description]\r\n * @param  {[type]} opts    [description]\r\n * @return {[type]}         [description]\r\n */\nfunction offTap(context, callbacks) {\n    exec(_off, context, callbacks);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/tap.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.autoAudio = autoAudio;\nexports.triggerAudio = triggerAudio;\nexports.seasonAudio = seasonAudio;\nexports.hangUpAudio = hangUpAudio;\nexports.createContentAudio = createContentAudio;\nexports.clearContentAudio = clearContentAudio;\nexports.clearAudio = clearAudio;\n\nvar _index = require('../../util/index');\n\nvar _audio = require('./audio');\n\nvar _manager = require('../video/manager');\n\n//动作标示\nvar ACTIVIT = 'hot'; //热点音频\n/**\r\n * 音频说明：\r\n *  一个音频播放有2种情况：\r\n *       1、自动播放该音频（autoPlay == true）\r\n *       2、手动播放该音频（点击触发点）\r\n *\r\n *   一个音频被停止有3种情况：\r\n *       1、手动暂停（点击触发点）\r\n *       2、同轨道的其他音频开始播放\r\n *       3、0轨道的音频开始播放\r\n *   特殊情况：\r\n *       0轨道的音频播放时，可以停止所有其他轨道的音频\r\n *       其他轨道的音频播放时，可以停止0轨道的音频\r\n *\r\n *   基于上面的条件，补充提示：\r\n *       同轨道只允许有一个自动播放的音频\r\n *       如果0轨道音频为自动播放，则其他轨道不允许有自动播放音频\r\n *       反之亦然，其他轨道有自动播放音频，则0轨道不允许有自动播放音频\r\n *\r\n *    ===================================================================================================\r\n *   该版本说明：\r\n *   一个音频被打断之后，就被销毁，不会在后续恢复播放，而只会重头开始播放\r\n *\r\n *  2014.12.1 版本升级\r\n *  原来只有热点音频，现在多了动画音频和节音频，所以音频管理需要调整,\r\n *  有两个要注意的地方：\r\n *  1. 由于在IOS上,new Audio操作会产生新的进程，且不释放，所以同一个音轨只新建一个音频实例\r\n *     为了防止交互点击时音频播放混乱，要先清除同音轨的上一个音频\r\n *  2. 节音频可以跨节共用，如,1,2,3节共用一个音频，那么在这些节之间跳转时不打断\r\n *\r\n */\n\nvar ANIMATE = 'content'; //动画音频\nvar SEASON = 'season'; //节音频\n\n/**\r\n * 容器合集\r\n * 1 pageBox 当前待播放的热点音频\r\n * 2 playBox 播放中的热点音频集合\r\n */\n//[type][pageId][queryId]\nvar pageBox, playBox;\n\nvar initBox = function initBox() {\n    pageBox = (0, _index.hash)();\n\n    //[type][pageId][queryId]\n    playBox = (0, _index.hash)();\n};\n\ninitBox();\n\n/**\r\n * 解析数据\r\n * @param  {[type]} type    [description]\r\n * @param  {[type]} queryId [description]\r\n * @return {[type]}         [description]\r\n */\nvar parseData = function parseData(type, queryId) {\n    var data;\n    switch (type) {\n        case ANIMATE:\n            data = Xut.data.query('Video', queryId, true);\n            break;\n        case SEASON:\n            data = Xut.data.query('Video', queryId, true);\n            break;\n        default:\n            data = Xut.data.query('Video', queryId);\n            break;\n    }\n    return data;\n};\n\n/**\r\n * 获取父容器\r\n * @return {[type]} [description]\r\n */\nvar getParentDom = function getParentDom(subtitles, pageId, queryId) {\n    //字幕数据\n    var parentDoms = (0, _index.hash)();\n    var ancestorDoms = (0, _index.hash)();\n    var contentsFragment;\n    var dom;\n    var pageIndex = pageId - 1;\n    if (subtitles) {\n        //获取文档节点\n        contentsFragment = Xut.Contents.contentsFragment[pageId];\n\n        //如果maskId大于9000默认为处理\n        var isMask = pageId > 9000;\n        if (isMask) {\n            //指定页码编号\n            pageIndex = Xut.Presentation.GetPageIndex();\n        }\n\n        //找到对应的节点\n        _.each(subtitles, function (data) {\n            //'Content_0_1' 规则 类型_页码（0开始）_id\n            if (!parentDoms[data.id]) {\n                dom = contentsFragment['Content_' + pageIndex + '_' + data.id];\n                ancestorDoms[data.id] = dom;\n                var $dom = $(dom);\n                if ($dom.length) {\n                    var _div = $dom.find('div').last();\n                    if (_div.length) {\n                        parentDoms[data.id] = _div[0];\n                    }\n                }\n            }\n        });\n    }\n\n    return {\n        parents: parentDoms,\n        ancestors: ancestorDoms\n    };\n};\n\n/**\r\n * 检测数据是否存在\r\n * @return {[type]}         [description]\r\n */\nvar checkRepeat = function checkRepeat(pageId, queryId, type) {\n    var pBox = pageBox[type];\n    if (pBox && pBox[pageId] && pBox[pageId][queryId]) {\n        return true;\n    }\n    return false;\n};\n\n/**\r\n * 组合热点音频数据结构\r\n * data, pageId, queryId, type\r\n * 数据，页码编号，videoId, 查询的类型\r\n * @return {[type]}         [description]\r\n */\nvar combination = function combination(data, pageId, queryId, type, eleName) {\n    var tempDoms;\n    if (!pageBox[type]) {\n        pageBox[type] = (0, _index.hash)();\n    }\n    if (!pageBox[type][pageId]) {\n        pageBox[type][pageId] = (0, _index.hash)();\n    }\n    //有字幕处理\n    if (data.theTitle) {\n        var subtitles = (0, _index.parseJSON)(data.theTitle);\n    }\n    //配置音频结构\n    return pageBox[type][pageId][queryId] = {\n        'trackId': data.track, //音轨\n        'url': data.md5, //音频名字\n        'subtitles': subtitles,\n        'audioId': queryId,\n        'data': data\n    };\n};\n\n/**\r\n * 装配音频数据\r\n * @param  {int} pageId    页面id或节的分组id\r\n * @param  {int} queryId   查询id,支持activityId,audioId\r\n * @param  {string} type   音频来源类型[动画音频,节音频,热点音频]\r\n */\nvar deployAudio = function deployAudio(pageId, queryId, type, actionData) {\n    //避免复重查询\n    if (checkRepeat(pageId, queryId, type)) {\n        return false;\n    }\n    //解析合集数据\n    var data = parseData(type, queryId);\n    //存在音频文件\n    if (data && data.md5) {\n        //新的查询\n        var ret = combination(data, pageId, queryId, type, actionData);\n        //混入新的动作数据\n        //2015.9.24\n        //音频替换图片\n        //触发动画\n        if (actionData) {\n            _.extend(ret, actionData, {\n                action: true //快速判断存在动作数据\n            });\n        }\n    }\n};\n\n/**\r\n * 检查要打断的音频\r\n * @param  {[type]} type    音频类型\r\n * @param  {[type]} pageId  [description]\r\n * @param  {[type]} queryId [description]\r\n * @param  {[type]} pageBox [description]\r\n * @return {boolen}         不打断返回true,否则返回false\r\n */\nvar checkBreakAudio = function checkBreakAudio(type, pageId, queryId, pageBox) {\n    var playObj = playBox[type][pageId][queryId],\n        trackId = pageBox.trackId,\n        _trackId = playObj.trackId;\n\n    //如果是节音频，且地址相同，则不打断\n    if (type == SEASON && playObj.url == pageBox.url) {\n        return true;\n    }\n\n    //如果要用零音轨||零音轨有音乐在播||两音轨相同\n    //则打断\n    if (trackId == 0 || _trackId == 0 || trackId == _trackId) {\n        playObj.end();\n        delete playBox[type][pageId][queryId];\n    }\n    return false;\n};\n\n/**\r\n * 播放音频之前检查\r\n * @param  {int} pageId    [description]\r\n * @param  {int} queryId    查询id\r\n * @param  {string} type    决定video表按哪个字段查询\r\n * @return {object}         音频对象/不存在为null\r\n */\nvar preCheck = function preCheck(pageId, queryId, type) {\n    var t,\n        p,\n        q,\n        playObj = pageBox[type][pageId][queryId],\n        seasonAudio = null;\n    for (t in playBox) {\n        for (p in playBox[t]) {\n            for (q in playBox[t][p]) {\n                if (checkBreakAudio(t, p, q, playObj)) {\n                    seasonAudio = playBox[t][p][q];\n                }\n            }\n        }\n    }\n    return seasonAudio;\n};\n\n/**\r\n * 加载音频对象\r\n * @return {[type]}         [description]\r\n */\nvar loadAudio = function loadAudio(pageId, queryId, type) {\n\n    //找到页面对应的音频\n    //类型=》页面=》指定音频Id\n    var pageObj = pageBox[type][pageId][queryId];\n    //检测\n    var seAudio = preCheck(pageId, queryId, type);\n\n    //播放音频时关掉视频\n    (0, _manager.clearVideo)();\n\n    //构建播放列表\n    if (!playBox[type]) {\n        playBox[type] = (0, _index.hash)();\n    }\n    if (!playBox[type][pageId]) {\n        playBox[type][pageId] = (0, _index.hash)();\n    }\n    //假如有字幕信息\n    //找到对应的文档对象\n    if (pageObj.subtitles) {\n        var tempDoms = getParentDom(pageObj.subtitles, pageId, queryId);\n    }\n\n    //播放完成处理\n    pageObj.innerCallback = function (audio) {\n        if (playBox[type] && playBox[type][pageId] && playBox[type][pageId][queryId]) {\n            audio.end();\n            delete playBox[type][pageId][queryId];\n        }\n    };\n\n    //存入播放对象池\n    playBox[type][pageId][queryId] = seAudio || new _audio.audioPlayer(pageObj, tempDoms);\n};\n\n/**\r\n * 交互点击\r\n * @param  {int} pageId     [description]\r\n * @param  {int} queryId    [description]\r\n * @param  {string} type    ACTIVIT\r\n * @return {[type]}         [description]\r\n */\nvar loadTiggerAudio = function loadTiggerAudio(pageId, queryId, type) {\n    var playObj, status;\n    if (playBox[type] && playBox[type][pageId] && playBox[type][pageId][queryId]) {\n        playObj = playBox[type][pageId][queryId];\n        status = playObj.audio ? playObj.status : null;\n    }\n    switch (status) {\n        case 'playing':\n            playObj.pause();\n            break;\n        case 'paused':\n            playObj.play();\n            break;\n        default:\n            loadAudio(pageId, queryId, type);\n            break;\n    }\n};\n\n/**\r\n * 清理全部音频\r\n * @return {[type]} [description]\r\n */\nvar removeAudio = function removeAudio() {\n    var t, p, a;\n    for (t in playBox) {\n        for (p in playBox[t]) {\n            for (a in playBox[t][p]) {\n                playBox[t][p][a].end();\n            }\n        }\n    }\n    initBox();\n};\n\n///////////////////\n//1 独立音频处理, 音轨/跨页面 //\n//2 动画音频,跟动画一起播放与销毁\n///////////////////\n\n/**\r\n * 自动播放触发接口\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} actionData [description]\r\n * @return {[type]}            [description]\r\n */\nfunction autoAudio(pageId, activityId, actionData) {\n    deployAudio(pageId, activityId, ACTIVIT, actionData);\n    loadAudio(pageId, activityId, ACTIVIT);\n}\n\n/**\r\n * 手动触发\r\n * @param  {[type]} pageId     [description]\r\n * @param  {[type]} activityId [description]\r\n * @param  {[type]} actionData [description]\r\n * @return {[type]}            [description]\r\n */\nfunction triggerAudio(pageId, activityId, actionData) {\n    deployAudio(pageId, activityId, ACTIVIT, actionData);\n    loadTiggerAudio(pageId, activityId, ACTIVIT);\n}\n\n/**\r\n * 节音频触发接口\r\n * @param  {[type]} seasonAudioId [description]\r\n * @param  {[type]} audioId       [description]\r\n * @return {[type]}               [description]\r\n */\nfunction seasonAudio(seasonAudioId, audioId) {\n    deployAudio(seasonAudioId, audioId, SEASON);\n    loadAudio(seasonAudioId, audioId, SEASON);\n}\n\n/**\r\n * 挂起音频\r\n * @return {[type]} [description]\r\n */\nfunction hangUpAudio() {\n    var t, p, a;\n    for (t in playBox) {\n        for (p in playBox[t]) {\n            for (a in playBox[t][p]) {\n                playBox[t][p][a].pause();\n            }\n        }\n    }\n}\n\n/**\r\n * 动画音频触发接口\r\n * @param  {[type]} pageId  [description]\r\n * @param  {[type]} audioId [description]\r\n * @return {[type]}         [description]\r\n */\nfunction createContentAudio(pageId, audioId) {\n    deployAudio(pageId, audioId, ANIMATE);\n    loadAudio(pageId, audioId, ANIMATE);\n}\n\n/**\r\n * 销毁动画音频\r\n * @param  {[type]} pageId [description]\r\n * @return {[type]}        [description]\r\n */\nfunction clearContentAudio(pageId) {\n    if (!playBox[ANIMATE] || !playBox[ANIMATE][pageId]) {\n        return false;\n    }\n    var playObj = playBox[ANIMATE][pageId];\n    if (playObj) {\n        for (var i in playObj) {\n            playObj[i].end();\n            delete playBox[ANIMATE][pageId][i];\n        }\n    }\n}\n\n/**\r\n * 清理音频\r\n * @param  {[type]} pageId [description]\r\n * @return {[type]}        [description]\r\n */\nfunction clearAudio(pageId) {\n    if (pageId) {\n        //如果只跳槽关闭动画音频\n        clearContentAudio(pageId);\n    } else {\n        removeAudio(); //多场景模式,不处理跨页面\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/manager.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _auto = require('./auto');\n\nObject.keys(_auto).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _auto[key];\n    }\n  });\n});\n\nvar _trigger = require('./trigger');\n\nObject.keys(_trigger).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _trigger[key];\n    }\n  });\n});\n\nvar _suspend = require('./suspend');\n\nObject.keys(_suspend).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _suspend[key];\n    }\n  });\n});\n\nvar _original = require('./original');\n\nObject.keys(_original).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _original[key];\n    }\n  });\n});\n\nvar _recovery = require('./recovery');\n\nObject.keys(_recovery).forEach(function (key) {\n  if (key === \"default\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _recovery[key];\n    }\n  });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.translation = undefined;\nexports.fix = fix;\nexports.createTransform = createTransform;\n\nvar _index = require('../config/index');\n\nvar offsetCut = void 0; /**\r\n                         * 页面切换效果\r\n                         * 平移\r\n                         * @return {[type]} [description]\r\n                         */\n\nvar offsetLeft = void 0;\nvar offsetRight = void 0;\nvar prevEffect = void 0;\nvar currEffect = void 0;\nvar nextEffect = void 0;\n\nvar transitionDuration = Xut.style.transitionDuration;\nvar transform = Xut.style.transform;\nvar translateZ = Xut.style.translateZ;\n\nvar xxtTrans = function xxtTrans(offset) {\n    offset = _index.config.virtualMode ? offset / 2 : offset;\n    return 'translate(' + offset + 'px,0px)' + translateZ;\n};\n\nvar dydTransform = function dydTransform(distance) {\n    distance = _index.config.virtualMode ? distance / 2 : distance;\n    return transform + ':' + 'translate(' + distance + 'px,0px)' + translateZ;\n};\n\n/**\r\n * 设置基本参数\r\n * @return {[type]} [description]\r\n */\nvar initOptions = function initOptions() {\n    if (initOptions.set) return;\n    var calculateContainer = _index.config.proportion.calculateContainer();\n    offsetLeft = -1 * calculateContainer.width;\n    offsetRight = calculateContainer.width;\n    offsetCut = 0;\n    prevEffect = xxtTrans(offsetLeft);\n    currEffect = xxtTrans(offsetCut);\n    nextEffect = xxtTrans(offsetRight);\n    initOptions.set = true;\n};\n\n/**\r\n * 切换坐标\r\n * @param  {[type]} context  [description]\r\n * @param  {[type]} distance [description]\r\n * @param  {[type]} speed    [description]\r\n * @param  {[type]} element  [description]\r\n * @return {[type]}          [description]\r\n */\nvar toTranslate3d = function toTranslate3d(context, distance, speed, element) {\n    distance = _index.config.virtualMode ? distance / 2 : distance;\n    if (element = element || context.element || context.$contentProcess) {\n        element.css(transform, 'translate(' + distance + 'px,0px)' + translateZ);\n        if (_index.config.pageFlip) {\n            //修正pageFlip切换页面的处理\n            //没有翻页效果\n            if (distance === 0) {\n                var cur = Xut.sceneController.containerObj('current');\n                cur.vm.$globalEvent.setAnimComplete(element);\n            }\n        } else {\n            element.css(transitionDuration, speed + \"ms\");\n        }\n    }\n};\n\n/**\r\n * 复位\r\n * @return {[type]} [description]\r\n */\nvar reset = function reset(context) {\n    var element;\n    if (element = context.element || context.$contentProcess) {\n        element.css(transitionDuration, '');\n        element.css(transform, 'translate(0px,0px)' + translateZ);\n    }\n};\n\n/**\r\n * 移动\r\n * @return {[type]} [description]\r\n */\nvar flipMove = function flipMove(context, distance, speed, element) {\n    toTranslate3d(context, distance, speed, element);\n};\n\n/**\r\n * 移动反弹\r\n * @return {[type]} [description]\r\n */\nvar flipRebound = function flipRebound(context, distance, speed, element) {\n    toTranslate3d(context, distance, speed, element);\n};\n\n/**\r\n * 移动结束\r\n * @return {[type]} [description]\r\n */\nvar flipOver = function flipOver(context, distance, speed, element) {\n    //过滤多个动画回调，保证指向始终是当前页面\n    if (context.pageType === 'page') {\n        if (distance === 0) {\n            //目标页面传递属性\n            context.element.attr('data-view', true);\n        }\n    }\n    toTranslate3d(context, distance, speed, element);\n};\n\n/**\r\n * translation滑动接口\r\n * @type {Object}\r\n */\nvar translation = exports.translation = {\n    reset: reset,\n    flipMove: flipMove,\n    flipRebound: flipRebound,\n    flipOver: flipOver\n};\n\n/**\r\n * 修正坐标\r\n * @return {[type]} [description]\r\n */\nfunction fix(element, translate3d) {\n    translate3d = translate3d === 'prevEffect' ? prevEffect : nextEffect;\n    element.css(transform, translate3d);\n}\n\n/**\r\n * 创建起始坐标\r\n * @return {[type]}\r\n */\nfunction createTransform(currPageIndex, createPageIndex) {\n    initOptions();\n    var translate3d, direction, offset;\n    if (createPageIndex < currPageIndex) {\n        translate3d = prevEffect;\n        offset = offsetLeft;\n        direction = 'before';\n    } else if (createPageIndex > currPageIndex) {\n        translate3d = nextEffect;\n        offset = offsetRight;\n        direction = 'after';\n    } else if (currPageIndex == createPageIndex) {\n        translate3d = currEffect;\n        offset = offsetCut;\n        direction = 'original';\n    }\n    return [translate3d, direction, offset, dydTransform];\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/swipe/translation.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseJSON = parseJSON;\nexports.execJson = execJson;\nexports.enterReplace = enterReplace;\n/**\r\n * /解析json字符串\r\n * @param  {[type]} itemArray [description]\r\n * @return {[type]}           [description]\r\n */\nfunction parseJSON(itemArray) {\n    var anminJson;\n    try {\n        anminJson = JSON.parse(itemArray);\n    } catch (error) {\n        console.log('parseJSON失败:' + itemArray);\n    }\n    return anminJson;\n}\n\nfunction execJson(itemArray) {\n    var json;\n    try {\n        json = new Function(\"return \" + itemArray)();\n    } catch (error) {\n        console.log('解析json出错' + itemArray);\n    }\n    return json;\n}\n\n/**\r\n * 回车符处理\r\n */\nfunction enterReplace(str) {\n    return str.replace(/\\r\\n/ig, '').replace(/\\r/ig, '').replace(/\\n/ig, '');\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/dom.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 资源加载\r\n * @return {[type]} [description]\r\n */\nvar loader = function () {\n    return {\n        /**入口函数,动态脚本加载\r\n         * @param fileList:           需要动态加载的资源列表\r\n         * @param callback:           所有资源都加载完后调用的回调函数,通常是页面上需要onload就执行的函数\r\n         * @param scope:              作用范围\r\n         * @param preserveOrder:      是否保持脚本顺序\r\n         */\n        load: function load(fileList, callback, scope, preserveOrder) {\n            //过来数组元素\n            if (fileList.length && preserveOrder) {\n                var temp = [];\n                fileList.forEach(function (val, index) {\n                    if (val) {\n                        temp.push(val);\n                    }\n                });\n                fileList = temp.reverse();\n                temp = null;\n            }\n\n            var scope = scope || this,\n\n            //var scope =this,//默认作用范围是当前页面\n            head = document.getElementsByTagName(\"head\")[0],\n                fragment = document.createDocumentFragment(),\n                numFiles = fileList.length,\n                loadedFiles = 0;\n\n            //加载一个特定的文件从fileList通过索引\n            var loadFileIndex = function loadFileIndex(index) {\n                head.appendChild(scope.buildScriptTag(fileList[index], onFileLoaded));\n            };\n\n            /**\r\n             * 调用回调函数,当所有文件都加载完后调用\r\n             */\n            var onFileLoaded = function onFileLoaded() {\n                loadedFiles++;\n                //如果当前文件是最后一个要加载的文件，则调用回调函数，否则加载下一个文件\n                if (numFiles == loadedFiles && typeof callback == 'function') {\n                    callback.call(scope);\n                } else {\n                    if (preserveOrder === true) {\n                        loadFileIndex(loadedFiles);\n                    }\n                }\n            };\n\n            if (preserveOrder === true) {\n                loadFileIndex.call(this, 0);\n            } else {\n                for (var i = 0, len = fileList.length; i < len; i++) {\n                    fragment.appendChild(this.buildScriptTag(fileList[i], onFileLoaded));\n                }\n                head.appendChild(fragment);\n            }\n        },\n\n        //构造javascript和link 标签\n        buildScriptTag: function buildScriptTag(filename, callback) {\n            var exten = filename.substr(filename.lastIndexOf('.') + 1);\n            if (exten == 'js') {\n                var script = document.createElement('script');\n                script.type = \"text/javascript\";\n                script.src = filename;\n                script.onload = callback;\n                return script;\n            }\n            if (exten == 'css') {\n                var style = document.createElement('link');\n                style.rel = 'stylesheet';\n                style.type = 'text/css';\n                style.href = filename;\n                callback();\n                return style;\n            }\n        }\n    };\n}();\n\nfunction pollCss(node, callback) {\n    var sheet = node.sheet,\n        isLoaded;\n    var isOldWebKit = +navigator.userAgent.replace(/.*AppleWebKit\\/(\\d+)\\..*/, \"$1\") < 536;\n    // for WebKit < 536\n    if (isOldWebKit) {\n        if (sheet) {\n            isLoaded = true;\n        }\n    }\n    // for Firefox < 9.0\n    else if (sheet) {\n            try {\n                if (sheet.cssRules) {\n                    isLoaded = true;\n                }\n            } catch (ex) {\n                // The value of `ex.name` is changed from \"NS_ERROR_DOM_SECURITY_ERR\"\n                // to \"SecurityError\" since Firefox 13.0. But Firefox is less than 9.0\n                // in here, So it is ok to just rely on \"NS_ERROR_DOM_SECURITY_ERR\"\n                if (ex.name === \"NS_ERROR_DOM_SECURITY_ERR\") {\n                    isLoaded = true;\n                }\n            }\n        }\n\n    setTimeout(function () {\n        if (isLoaded) {\n            // Place callback here to give time for style rendering\n            callback();\n        } else {\n            pollCss(node, callback);\n        }\n    }, 20);\n}\n\nfunction addOnload(node, callback, isCSS, url) {\n    var supportOnload = \"onload\" in node;\n    var isOldWebKit = +navigator.userAgent.replace(/.*AppleWebKit\\/(\\d+)\\..*/, \"$1\") < 536;\n    // for Old WebKit and Old Firefox\n    if (isCSS) {\n        setTimeout(function () {\n            pollCss(node, callback);\n        }, 1); // Begin after node insertion\n        return;\n    }\n\n    if (supportOnload) {\n        node.onload = onload;\n        node.onerror = function () {\n            onload();\n        };\n    } else {\n        node.onreadystatechange = function () {\n            if (/loaded|complete/.test(node.readyState)) {\n                onload();\n            }\n        };\n    }\n\n    function onload() {\n        // Ensure only run once and handle memory leak in IE\n        node.onload = node.onerror = node.onreadystatechange = null;\n        // Remove the script to reduce memory leak\n        if (!isCSS) {\n            var head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n            head.removeChild(node);\n        }\n        // Dereference the node\n        node = null;\n        callback();\n    }\n}\n\nfunction request(url, callback, charset) {\n    var IS_CSS_RE = /\\.css(?:\\?|$)/i,\n        isCSS = IS_CSS_RE.test(url),\n        node = document.createElement(isCSS ? \"link\" : \"script\");\n\n    if (charset) {\n        var cs = $.isFunction(charset) ? charset(url) : charset;\n        if (cs) {\n            node.charset = cs;\n        }\n    }\n    addOnload(node, callback, isCSS, url);\n    if (isCSS) {\n        node.rel = \"stylesheet\";\n        node.href = url;\n    } else {\n        node.async = true;\n        node.src = url;\n    }\n    // For some cache cases in IE 6-8, the script executes IMMEDIATELY after\n    // the end of the insert execution, so use `currentlyAddingScript` to\n    // hold current node, for deriving url in `define` call\n    //currentlyAddingScript = node\n    var head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n    var baseElement = head.getElementsByTagName(\"base\")[0];\n    // ref: #185 & http://dev.jquery.com/ticket/2709\n    baseElement ? head.insertBefore(node, baseElement) : head.appendChild(node);\n    //currentlyAddingScript = null\n}\n\nvar imgReady = function () {\n\n    var list = [],\n        intervalId = null,\n\n\n    // 用来执行队列\n    tick = function tick() {\n        var i = 0;\n        for (; i < list.length; i++) {\n            list[i].end ? list.splice(i--, 1) : list[i]();\n        };\n        !list.length && stop();\n    },\n\n\n    // 停止所有定时器队列\n    stop = function stop() {\n        clearInterval(intervalId);\n        intervalId = null;\n    };\n\n    return function (url, ready, load, error) {\n        var _onready,\n            width,\n            height,\n            newWidth,\n            newHeight,\n            img = new Image();\n\n        img.src = url;\n\n        // 如果图片被缓存，则直接返回缓存数据\n        if (img.complete) {\n            ready && ready.call(img);\n            load && load.call(img);\n            return;\n        };\n\n        width = img.width;\n        height = img.height;\n\n        // 加载错误后的事件\n        img.onerror = function () {\n            error && error.call(img);\n            _onready.end = true;\n            img = img.onload = img.onerror = null;\n        };\n\n        // 图片尺寸就绪\n        _onready = function onready() {\n            newWidth = img.width;\n            newHeight = img.height;\n            if (newWidth !== width || newHeight !== height ||\n            // 如果图片已经在其他地方加载可使用面积检测\n            newWidth * newHeight > 1024) {\n                ready && ready.call(img);\n                _onready.end = true;\n            };\n        };\n        _onready();\n        // 完全加载完毕的事件\n        img.onload = function () {\n            // onload在定时器时间差范围内可能比onready快\n            // 这里进行检查并保证onready优先执行\n            !_onready.end && _onready();\n            load && load.call(img);\n            // IE gif动画会循环执行onload，置空onload即可\n            img = img.onload = img.onerror = null;\n        };\n\n        // 加入队列中定期执行\n        if (!_onready.end) {\n            list.push(_onready);\n            // 无论何时只允许出现一个定时器，减少浏览器性能损耗\n            if (intervalId === null) intervalId = setInterval(tick, 40);\n        };\n    };\n}();\n\nvar loadfile = request;\n\nexports.loader = loader;\nexports.request = request;\nexports.loadfile = loadfile;\nexports.imgReady = imgReady;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/loader.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.access = access;\n/**\r\n * 获取访问对象参数\r\n * 如果pageObj 不存在，则取当前页面的\r\n * @return {[type]} [description]\r\n */\nfunction access(pageObj, callback) {\n    var flag = void 0,\n        contents = void 0,\n        components = void 0,\n        pageType = void 0;\n    pageObj = pageObj || Xut.Presentation.GetPageObj();\n    if (pageObj) {\n        contents = pageObj.baseGetContent();\n        components = pageObj.baseGetComponent();\n        pageType = pageObj.pageType || 'page';\n        flag = callback(pageObj, contents.length && contents, components.length && components, pageType);\n    }\n    return flag;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/access.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.bindEvents = bindEvents;\nexports.conversionEventType = conversionEventType;\nexports.defaultBehavior = defaultBehavior;\nexports.destroyEvents = destroyEvents;\n\nvar _drag = require('./drag');\n\nvar _drag2 = _interopRequireDefault(_drag);\n\nvar _simple = require('./simple');\n\nvar _complex = require('./complex');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 事件类型\r\n * @type {Array}\r\n * 0 null\r\n * 1 auto\r\n * 2 tap\r\n * 3 drag\r\n * 4 dragTag\r\n * .........\r\n */\nvar eventName = ['null', 'auto', 'tap', 'drag', 'dragTag', 'swipeleft', 'swiperight', 'swipeup', 'swipedown', 'doubletap', 'press', 'pinchout', 'pinchin', 'rotate', 'assist'];\n\n/**\r\n * 重写默认事件\r\n *\r\n * Content对象默认具有左右翻页的特性\r\n * 根据过滤来选择是否覆盖重写这个特性\r\n * 比如 用户如果遇到 swipeLeft，swipeRight 这种本身与翻页行为冲突的\r\n * 将要覆盖这个行为\r\n * 过滤事件\r\n * 如果用户指定了如下操作行为,将覆盖默认的翻页行为\r\n **/\n/**\r\n * ppt事件接口\r\n *\r\n * 允许用户自定义其行为\r\n *     1 支持14种操作行为\r\n *     2 默认对象都具有滑动翻页的特性\r\n *     3 翻页的特性在遇到特性的情况可以被覆盖\r\n *     比如\r\n *         行为1：用户定义该名字可以支持  click 点击行为， 那么该元素左右滑动能过翻页\r\n *         行为2：用户如果定义swipeLeft 行为，该元素左右滑动将不会翻页，因为默认翻页已经被覆盖\r\n *\r\n * 此接口函数有作用域隔离\r\n */\nvar filterEvent = ['drag', 'dragTag', 'swipeleft', 'swiperight', 'swipeup', 'swipedown'];\n\n/**\r\n * 是否过滤\r\n * @param  {[type]} evtName [description]\r\n * @return {[type]}         [description]\r\n */\nfunction isfilter(eventName) {\n    return filterEvent.indexOf(eventName) === -1 ? true : false;\n}\n\n/**\r\n * 特性摘除\r\n * 1 ：无事件，默认可以翻页，还可以切换工具栏\r\n * 2 ：静态事件，默认可以翻页\r\n * 3 : 冲突事件，默认删除\r\n * 去除默认元素具有的翻页特性\r\n * @param  {[type]} evtName [事件名]\r\n * @return {[type]}         [description]\r\n */\nfunction setDefaultBehavior(supportSwipe, element) {\n    if (supportSwipe) {\n        //静态事件，默认可以翻页，还可以切换工具栏\n        element.attr('data-behavior', 'swipe');\n    } else {\n        //如果事件存在\n        element.attr('data-behavior', 'disable');\n    }\n}\n\n/**\r\n * 针对软件培训的操作行为下光标状态需求\r\n * @param {[type]} element [description]\r\n */\nfunction addCursor(eventName, $element) {\n    if ($element) {\n        if (!$element.prop('setCursor')) {\n            //只设置一次\n            if (eventName === ('drag' || 'dragTag')) {\n                $element.css('cursor', 'Move');\n            } else {\n                $element.css('cursor', 'Pointer');\n            }\n            $element.prop('setCursor', 'true');\n        }\n    }\n}\n\n/**\r\n *  绑定事件\r\n * @param  {[type]} eventDrop [description]\r\n * @param  {[type]} data      [description]\r\n * @return {[type]}           [description]\r\n */\nfunction _bind(eventDrop, data) {\n    var dragObj, eventHandler, eventReference, eventContext, eventName, supportSwipe;\n\n    eventContext = data.eventContext;\n    eventName = data.eventName;\n    supportSwipe = data.supportSwipe;\n\n    switch (eventName) {\n        case 'drag':\n            //拖动\n            dragObj = new _drag2.default(eventContext, null, data.parameter, eventDrop.startRun, eventDrop.stopRun);\n            break;\n        case 'dragTag':\n            //拖拽\n            dragObj = new _drag2.default(eventContext, data.target, 1, eventDrop.startRun, eventDrop.stopRun);\n            break;\n        default:\n\n            //事件句柄\n            eventHandler = function eventHandler() {\n                data.eventRun.call(eventContext);\n            };\n\n            //简单单机\n            if (eventName === 'tap') {\n                eventReference = (0, _simple.simpleEvent)(eventContext, eventHandler, supportSwipe);\n            } else {\n                //复杂用hammer\n                eventReference = (0, _complex.complexEvent)(eventContext, eventName, eventHandler, supportSwipe);\n            }\n            break;\n    }\n\n    return [dragObj, eventReference, eventHandler];\n}\n\n/**\r\n * /匹配事件\r\n * parameter 参数\r\n * 1：对于自由拖动drag，para参数为0，表示松手后，停留在松手的地方\r\n *                      para参数为1，表示松手后，返回原来的位置\r\n * 2: 对于拖拽dragTag， para表示目标对象的target\r\n */\nfunction matchEvent(data) {\n    //针对软件培训的操作行为下光标状态需求\n    Xut.plat.isBrowser && data.domMode && addCursor(data.eventName, data.eventContext);\n\n    //绑定事件\n    var eventDrop = data.eventDrop;\n\n    //拖动,引用,回调\n    var eventObj = _bind(eventDrop, data);\n\n    //拖动,拖拽对象处理\n    //动作初始化\n    if (eventObj[0] && eventDrop.init) {\n        eventDrop.init(eventObj[0]);\n    } else {\n        //传递引用\n        data.eventHandler(eventObj[1], eventObj[2]);\n    }\n}\n\n/**\r\n * 注册自定义事件\r\n * this还是引用的当前实例的上下文\r\n *\r\n *   'element'   : 事件对象\r\n *   'target'    : 目标对象\r\n *   'parameter' : 拖动参数\r\n *   'evtName'   : 事件名,\r\n *\r\n *   callbackHook 回调函数 ,处理具体的事情\r\n */\nfunction bindEvents(data) {\n    //是否支持翻页\n    var supportSwipe = data.supportSwipe = isfilter(data.eventName);\n    //检测是否移除元素的默认行为,因为元素都具有翻页的特性\n    if (data.domMode) {\n        setDefaultBehavior(supportSwipe, data.eventContext);\n    }\n    //执行事件绑定\n    matchEvent(data);\n}\n\n//数据库预定义14个事件接口\n//提供给content文件\n//用于过滤数据库字段指定的行为\n//https://github.com/EightMedia/hammer.js/wiki/Getting-Started\n//2014.3.18 新增assist 辅助对象事件\nfunction conversionEventType(eventType) {\n    return eventName[Number(eventType) - 1] || null;\n}\n\n/**\r\n * 增加默认行为\r\n */\nfunction defaultBehavior(element) {\n    element && element.attr('data-behavior', 'disable');\n}\n\n/**\r\n * 销毁对象事件\r\n */\nfunction destroyEvents(eventData, eventName) {\n    if (eventData.eventReference) {\n        eventData.eventReference.off(eventName || eventData.eventName, eventData.eventHandler);\n        eventData.eventReference = null;\n        eventData.eventHandler = null;\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/event/event.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 场景控制器\r\n * 场景对象之间的顺序处理\r\n * @return {[type]} [description]\r\n */\n\n//场景层级控制\nvar zIndex = 999999;\n\n//去重复标记，可以复用场景\nvar toRepeat = 0;\n\n//场景合集\n//主场景\n//副场景\nvar sceneCollection = {\n    //场景顺序\n    scenarioStack: [],\n    //场景链表\n    scenarioChain: []\n};\n\nvar sceneController = {\n\n    /**\r\n     * 场景层级控制\r\n     * @return {[type]} [description]\r\n     */\n    createIndex: function createIndex() {\n        return --zIndex;\n    },\n\n\n    /**\r\n     * 设置一个新场景\r\n     * @param {[type]} scenarioId [description]\r\n     * @param {[type]} relevant   [description]\r\n     * @param {[type]} sceneObj   [description]\r\n     */\n    add: function add(scenarioId, relevant, sceneObj) {\n        sceneCollection.scenarioStack.push(scenarioId);\n        sceneCollection['scenarioId->' + scenarioId] = sceneObj;\n        //场景链表,拥挤记录场景的加载上一页\n        sceneCollection.scenarioChain.push({\n            'scenarioId': scenarioId,\n            'chapterId': relevant\n        });\n        return sceneObj;\n    },\n\n\n    /**\r\n     * 取出上一个场景链\r\n     * @return {[type]} [description]\r\n     */\n    takeOutPrevChainId: function takeOutPrevChainId() {\n        var pre = sceneCollection.scenarioChain.pop();\n        if (sceneCollection.scenarioChain.length > 1) {\n            return sceneCollection.scenarioChain.pop();\n        } else {\n            return sceneCollection.scenarioChain[0];\n        }\n    },\n\n\n    /**\r\n     * 检测重复\r\n     * @param  {[type]} seasonId [description]\r\n     * @return {[type]}          [description]\r\n     */\n    checkToRepeat: function checkToRepeat(seasonId) {\n        var last,\n            len = sceneCollection.scenarioChain.length;\n        if (len > 1) {\n            last = sceneCollection.scenarioChain[len - 2];\n        } else {\n            last = sceneCollection.scenarioChain[len - 1];\n        }\n\n        //往回跳一级\n        if (last['scenarioId'] == seasonId) {\n            this.takeOutPrevChainId();\n        }\n\n        //直接会跳到主场景\n        if (sceneCollection.scenarioStack[0] == seasonId) {\n            var scenarioChain = sceneCollection.scenarioChain.shift();\n            sceneCollection.scenarioChain.length = 0;\n            sceneCollection.scenarioChain.push(scenarioChain);\n        }\n    },\n\n\n    /**\r\n     * 返回活动对象\r\n     * @return {[type]} [description]\r\n     */\n    containerObj: function containerObj(scenarioId) {\n        if (scenarioId === 'current') {\n            var scenarioStack = sceneCollection.scenarioStack;\n            scenarioId = scenarioStack[scenarioStack.length - 1];\n        }\n        return sceneCollection['scenarioId->' + scenarioId];\n    },\n\n\n    /**\r\n     * 找到索引位置的Id\r\n     * @param  {[type]} scenarioId [description]\r\n     * @return {[type]}            [description]\r\n     */\n    findIndexOfId: function findIndexOfId(scenarioId) {\n        return sceneCollection.scenarioStack.lastIndexOf(scenarioId);\n    },\n\n\n    /**\r\n     * 删除指定场景引用\r\n     * @param  {[type]} scenarioId [description]\r\n     * @return {[type]}            [description]\r\n     */\n    remove: function remove(scenarioId) {\n        var indexOf = this.findIndexOfId(scenarioId);\n        //删除索引\n        sceneCollection.scenarioStack.splice(indexOf, 1);\n        //删除场景对象区域\n        delete sceneCollection['scenarioId->' + scenarioId];\n    },\n\n\n    /**\r\n     * 销毁所有场景\r\n     * @return {[type]} [description]\r\n     */\n    destroyAllScene: function destroyAllScene() {\n        var cache = _.clone(sceneCollection.scenarioStack);\n        _.each(cache, function (scenarioId) {\n            sceneCollection['scenarioId->' + scenarioId].destroy();\n        });\n        sceneCollection.scenarioChain = [];\n    },\n\n\n    /**\r\n     * 重写场景的顺序编号\r\n     * 用于记录最后一次跳转的问题\r\n     * @return {[type]} [description]\r\n     */\n    rewrite: function rewrite(scenarioId, chapterId) {\n        _.each(sceneCollection.scenarioChain, function (scenarioChain) {\n            if (scenarioChain.scenarioId == scenarioId) {\n                scenarioChain.chapterId = chapterId;\n            }\n        });\n    },\n\n\n    /**\r\n     * 暴露接口\r\n     * @return {[type]} [description]\r\n     */\n    expose: function expose() {\n        return sceneCollection;\n    },\n\n\n    /**\r\n     * 解析序列\r\n     * @param  {[type]} scenarioId    [description]\r\n     * @param  {[type]} currPageIndex [description]\r\n     * @return {[type]}               [description]\r\n     */\n    sequence: function sequence(scenarioId, currPageIndex) {\n        var chains = sceneCollection.scenarioChain;\n        //有多个场景关系,需要记录\n        if (chains.length > 1) {\n            var history = [];\n            //只刷新当前场景的页面\n            _.each(chains, function (chain) {\n                if (chain.scenarioId == scenarioId) {\n                    history.push(chain.scenarioId + '-' + chain.chapterId + '-' + currPageIndex);\n                } else {\n                    history.push(chain.scenarioId + '-' + chain.chapterId);\n                }\n            });\n            return history;\n        }\n    },\n\n\n    /**\r\n     * 反解析\r\n     * @param  {[type]} chains [description]\r\n     * @return {[type]}        [description]\r\n     */\n    seqReverse: function seqReverse(chains) {\n        var chains = chains.split(\",\");\n        var chainsNum = chains.length;\n\n        if (chainsNum === 1) {\n            return false;\n        }\n\n        //如果只有2层\n        if (chainsNum === 2) {\n            return chains[1];\n        }\n\n        //拼接作用域链\n        //排除首页(已存在)\n        //尾页(新创建)\n        _.each(chains, function (chain, index) {\n            if (index >= 1 && index < chainsNum - 1) {\n                //从1开始吸入,排除最后一个\n                var chain = chain.split('-');\n                sceneCollection.scenarioChain.push({\n                    'scenarioId': chain[0],\n                    'chapterId': chain[1],\n                    'pageIndex': chain[2]\n                });\n            }\n        });\n        return chains[chainsNum - 1];\n    }\n};\n\nXut.sceneController = sceneController;\n\nexports.sceneController = sceneController;\n\n// Xut.test = function() {\n//     console.log('场景对象', Xut.sceneController.containerObj('current')),\n//         console.log('vm对象', Xut.sceneController.containerObj('current').vm),\n//         console.log('页面对象', Xut.sceneController.containerObj('current').vm.$scheduler)\n// }\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/scenario/controller.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.destroy = exports.close = exports.oepn = exports.load = undefined;\n\nvar _dom = require('./dom');\n\nvar config = void 0; /**\r\n                      * 目录列表\r\n                      * @param  {[type]} hindex    [description]\r\n                      * @param  {[type]} pageArray [description]\r\n                      * @param  {[type]} modules   [description]\r\n                      * @return {[type]}           [description]\r\n                      *\r\n                      */\n\nvar _layoutMode = void 0;\nvar pageIndex = 0;\n\nvar sectionInstance = null;\nvar directory = 'images/icons/directory.png';\nvar directory_act = 'images/icons/directory_act.png';\nvar lockAnimation = void 0; //动画加锁\n\nvar $navbal = void 0;\n\n/**\r\n * 下拉章节列表\r\n */\nfunction SectionList(pageArray) {\n    this.pageArray = pageArray;\n    this.$sectionlist = $('#SectionThelist');\n    this.list = this.$sectionlist.find(\"li\");\n};\n\nSectionList.prototype = {\n\n    /**\r\n     * 卷滚条\r\n     */\n    userIscroll: function userIscroll() {\n        var self = this,\n            hBox = self.hBox,\n            H = !!(_layoutMode === 'horizontal');\n\n        if (hBox) {\n            if (H) {\n                //hBox.goToPage(pageIndex, 0, 0)\n            } else {\n                hBox.goToPage(0, pageIndex, 0);\n            }\n        } else {\n            hBox = new iScroll('#SectionWrapper', {\n                snap: 'li',\n                tap: true,\n                scrollX: H,\n                scrollY: !H,\n                scrollbars: true,\n                fadeScrollbars: true,\n                stopPropagation: true\n            });\n\n            //滑动结束,动态处理缩略图\n            hBox.on('scrollEnd', function (e) {\n                self.createThumb();\n                self.removeThumb();\n            });\n\n            this.$sectionlist.on('tap', self.tojump);\n\n            self.hBox = hBox;\n        }\n    },\n\n    /**\r\n     * [ 创建缩略图]\r\n     * @return {[type]} [description]\r\n     */\n    createThumb: function createThumb() {\n        var index = this.getPageIndex(),\n            //最左边的索引\n        count = this.getViewLen(),\n            //允许显示的页数\n        createBak = this.createBak || [],\n            //已创建的页码索引\n        createNew = [],\n            //新建的页码索引\n        pageArray = this.pageArray,\n            list = this.list,\n            maxLen = pageArray.length,\n            path = config.pathAddress;\n\n        //确保不会溢出\n        count = count > maxLen ? maxLen : count;\n        //尽可能地填满\n        index = index + count > maxLen ? maxLen - count : index;\n\n        for (var i = 0; i < count; i++) {\n            var j = index + i,\n                page = pageArray[j];\n\n            createNew.push(j);\n\n            if (_.contains(createBak, j)) continue;\n\n            createBak.push(j);\n\n            //如果是分层母板了,此时用icon代替\n            if (page.iconImage) {\n                list.eq(j).css({\n                    'background-image': 'url(' + path + page.iconImage + ')'\n                });\n            } else {\n                list.eq(j).css({\n                    'background-image': 'url(' + path + page.md5 + ')',\n                    'background-color': 'white'\n                });\n            }\n        }\n\n        this.createNew = createNew;\n        this.createBak = createBak;\n    },\n\n    /**\r\n     * [ 清理隐藏的缩略图]\r\n     * @return {[type]} [description]\r\n     */\n    removeThumb: function removeThumb() {\n        var list = this.list,\n            createNew = this.createNew,\n            createBak = this.createBak;\n\n        _.each(createBak, function (val, i) {\n            if (!_.contains(createNew, val)) {\n                //标记要清理的索引\n                createBak[i] = -1;\n                list.eq(val).css({\n                    'background': ''\n                });\n            }\n        });\n\n        //执行清理\n        this.createBak = _.without(createBak, -1);\n    },\n\n    /**\r\n     * [ 得到滑动列表中最左侧的索引]\r\n     * @return {[type]} [description]\r\n     */\n    getPageIndex: function getPageIndex() {\n        if (this.hBox.options.scrollX) {\n            return this.hBox.currentPage.pageX;\n        } else {\n            return this.hBox.currentPage.pageY;\n        }\n    },\n\n    /**\r\n     * [ 获取待创建的缩略图的个数]\r\n     * @return {[type]} [description]\r\n     */\n    getViewLen: function getViewLen() {\n        var hBox = this.hBox,\n            eleSize = 1,\n            //单个li的高度,\n        count = 1,\n            len = this.pageArray.length; //li的总数\n\n        if (_layoutMode === 'horizontal') {\n            eleSize = hBox.scrollerWidth / len;\n            count = hBox.wrapperWidth / eleSize;\n        } else {\n            eleSize = hBox.scrollerHeight / len;\n            count = hBox.wrapperHeight / eleSize;\n        }\n        //多创建一个\n        return Math.ceil(count) + 1;\n    },\n\n    /**\r\n     * 点击元素跳转\r\n     */\n    tojump: function tojump(env) {\n        var target;\n        var xxtlink;\n        if (target = env.target) {\n            initialize();\n            if (xxtlink = target.getAttribute('data-xxtlink')) {\n                xxtlink = xxtlink.split('-');\n                Xut.View.GotoSlide(xxtlink[0], xxtlink[1]);\n            }\n        }\n    },\n\n    /**\r\n     * 滚动指定位置\r\n     */\n    scrollTo: function scrollTo() {\n        this.userIscroll();\n    },\n\n    /**\r\n     * 刷新\r\n     */\n    refresh: function refresh() {\n        this.hBox && this.hBox.refresh();\n    },\n\n    /**\r\n     * 销毁\r\n     */\n    destroy: function destroy() {\n        if (this.hBox) {\n            this.$sectionlist.off();\n            this.hBox.destroy();\n            this.hBox = null;\n        }\n        this.pageArray = null;\n    }\n\n};\n\n/**\r\n * 初始化\r\n */\nfunction initialize() {\n    //动画状态\n    if (lockAnimation) {\n        return false;\n    }\n    lockAnimation = true;\n    Xut.View.ShowBusy();\n    startpocess();\n};\n\n/**\r\n * 控制处理\r\n */\nfunction startpocess() {\n    //控制按钮\n    var navhandle = $(\"#backDir\");\n    var navControlBar = $(\"#navBar\");\n    //判断点击的动作\n    var action = navhandle.attr('fly') || 'in';\n\n    /**\r\n     * 初始化目录栏的样式\r\n     * 能够显示出来\r\n     */\n    var initStyle = function initStyle(callback) {\n        sectionInstance.state = false;\n        if (action == 'in') {\n            sectionInstance.state = true;\n            navControlBar.css({\n                'z-index': 0,\n                'opacity': 0,\n                'display': 'block'\n            });\n        }\n        callback();\n    };\n\n    //初始化样式\n    initStyle(function () {\n        //触发控制条\n        navControl(action, navhandle);\n        //执行动画\n        toAnimation(navControlBar, navhandle, action);\n    });\n};\n\n/**\r\n * 控制按钮改变\r\n */\nfunction navControl(action, navhandle) {\n    navhandle.css('opacity', action === \"in\" ? 0.5 : 1);\n}\n\n/**\r\n * 执行动画\r\n */\nfunction toAnimation(navControlBar, navhandle, action) {\n\n    var complete = function complete() {\n        //恢复css\n        navControlBar.css(Xut.style.transition, '');\n        Xut.View.HideBusy();\n        lockAnimation = false;\n    };\n    //出现\n    if (action == 'in') {\n        //导航需要重置\n        //不同的页面定位不一定\n        sectionInstance.refresh();\n        sectionInstance.scrollTo();\n        //动画出现\n        navControlBar.animate({\n            'z-index': Xut.zIndexlevel(),\n            'opacity': 1\n        }, 'fast', 'linear', function () {\n            navhandle.attr('fly', 'out');\n            complete();\n        });\n    } else {\n        //隐藏\n        navhandle.attr('fly', 'in');\n        navControlBar.hide();\n        complete();\n    }\n}\n\n/**\r\n * 预先缓存加载\r\n * @return {[type]} [description]\r\n */\nfunction load() {\n    $navbal = $(\"#navBar\");\n    //创建dom\n    //返回页面数据\n    (0, _dom.createdom)($navbal, function (pageArray) {\n        //目录对象\n        sectionInstance = new SectionList(pageArray);\n        //初始化滑动\n        sectionInstance.userIscroll();\n        //初始缩略图\n        sectionInstance.createThumb();\n        //初始化样式\n        initialize();\n    });\n};\n\n/**\r\n * 配置\r\n */\nfunction initconf(index) {\n    config = Xut.config;\n    _layoutMode = config.layoutMode;\n    pageIndex = index;\n}\n\n/**\r\n * 打开目录\r\n */\nfunction oepn(index) {\n    initconf(index);\n    if (sectionInstance) {\n        initialize();\n    } else {\n        load();\n    }\n}\n\n/**\r\n * 关闭\r\n */\nfunction close(callback) {\n    if (sectionInstance && sectionInstance.state) {\n        callback && callback();\n        initialize();\n    }\n}\n\n/**\r\n * 销毁对象\r\n * @return {[type]} [description]\r\n */\nfunction destroy() {\n    if (sectionInstance) {\n        sectionInstance.destroy();\n        sectionInstance = null;\n    }\n}\n\nexports.load = load;\nexports.oepn = oepn;\nexports.close = close;\nexports.destroy = destroy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/navbar/index.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getResources = getResources;\nexports.injectScript = injectScript;\nexports.messageBox = messageBox;\nexports.setProportion = setProportion;\nexports.reviseSize = reviseSize;\nexports.readFile = readFile;\n\nvar _loader = require('./loader');\n\nvar _dom = require('./dom');\n\nvar _notice = require('./notice');\n\nvar _index = require('../config/index');\n\n/**\r\n * 获取资源\r\n * @param  {[type]} url [description]\r\n * @return {[type]}     [description]\r\n */\nfunction getResources(url) {\n    var option;\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    option = (0, _dom.parseJSON)(xhr.responseText);\n    return option;\n}\n\n/**\r\n * 执行脚本注入\r\n */\nfunction injectScript(code, type) {\n    //过滤回车符号\n    var enterReplace = function enterReplace(str) {\n        return str.replace(/\\r\\n/ig, '').replace(/\\r/ig, '').replace(/\\n/ig, '');\n    };\n    try {\n        new Function(\"return \" + enterReplace(code))();\n    } catch (e) {\n        console.log('加载脚本错误', type);\n    }\n}\n\n/**\r\n * [ 消息框]\r\n * @param  {[type]} message [description]\r\n * @return {[type]}         [description]\r\n */\nfunction messageBox(message) {\n    (0, _notice.messageBox)(message);\n}\n\n//缩放比\nfunction fiexdProportion(width, height, left, top) {\n    var proportion = _index.config.proportion;\n    return {\n        width: width * proportion.width,\n        height: height * proportion.height,\n        left: left * proportion.left,\n        top: top * proportion.top\n    };\n}\n\nfunction setProportion(width, height, left, top) {\n    return fiexdProportion(width, height, left, top);\n}\n\n/*\r\n * 修复元素的尺寸\r\n * @type {[type]}\r\n */\n\nfunction reviseSize(results) {\n    //不同设备下缩放比计算\n    var layerSize = fiexdProportion(results.width, results.height, results.left, results.top);\n    //新的背景图尺寸\n    var backSize = fiexdProportion(results.backwidth, results.backheight, results.backleft, results.backtop);\n\n    //赋值新的坐标\n    results.scaleWidth = Math.ceil(layerSize.width);\n    results.scaleHeight = Math.ceil(layerSize.height);\n    results.scaleLeft = Math.floor(layerSize.left);\n    results.scaleTop = Math.floor(layerSize.top);\n\n    //背景坐标\n    results.scaleBackWidth = Math.ceil(backSize.width);\n    results.scaleBackHeight = Math.ceil(backSize.height);\n    results.scaleBackLeft = Math.floor(backSize.left);\n    results.scaleBackTop = Math.floor(backSize.top);\n\n    return results;\n}\n\n/**\r\n *  读取SVG内容\r\n *  @return {[type]} [string]\r\n */\nfunction readFile(path, callback, type) {\n\n    var paths, name, data;\n\n    /**\r\n     * ibooks模式 单独处理svg转化策划给你js,加载js文件\r\n     * @param  {[type]} window.IBOOKSCONFIG [description]\r\n     * @return {[type]}              [description]\r\n     */\n    if (Xut.IBooks.CONFIG) {\n\n        //如果是.svg结尾\n        //把svg替换成js\n        if (/.svg$/.test(path)) {\n            path = path.replace(\".svg\", '.js');\n        }\n\n        //全路径\n        paths = _index.config.svgPath().replace(\"svg\", 'js') + path;\n        //文件名\n        name = path.replace(\".js\", '');\n\n        //加载脚本\n        (0, _loader.request)(paths, function () {\n            data = window.HTMLCONFIG[name] || window.IBOOKSCONFIG[name];\n            if (data) {\n                callback(data);\n                delete window.HTMLCONFIG[name];\n                delete window.IBOOKSCONFIG[name];\n            } else {\n                callback('编译:脚本加载失败,文件名:' + name);\n            }\n        });\n\n        return;\n    }\n\n    //con str\n    //externalFile使用\n    //如果是js动态文件\n    //content的html结构\n    if (type === \"js\") {\n        paths = _index.config.svgPath() + path;\n        name = path.replace(\".js\", '');\n        (0, _loader.request)(paths, function () {\n            data = window.window.HTMLCONFIG[name];\n            if (data) {\n                callback(data);\n                delete window.window.HTMLCONFIG[name];\n            } else {\n                callback('运行：脚本加载失败,文件名:' + path);\n            }\n        });\n        return;\n    }\n\n    //svg文件\n    //游览器模式 && 非强制插件模式\n    if (Xut.plat.isBrowser && !_index.config.isPlugin) {\n        $.ajax({\n            type: 'get',\n            dataType: 'html',\n            url: _index.config.svgPath().replace(\"www/\", \"\") + path,\n            success: function success(svgContent) {\n                callback(svgContent);\n            },\n            error: function error(xhr, type) {\n                callback('ReadFile数据加载失败');\n                console.log('SVG' + path + '解析出错!');\n            }\n        });\n    } else {\n        Xut.Plugin.ReadAssetsFile.readAssetsFileAction(_index.config.svgPath() + path, function (svgContent) {\n            callback(svgContent);\n        }, function (err) {\n            callback('数据加载失败');\n        });\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/option.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports._key = _key;\nexports._remove = _remove;\nexports._fetch = _fetch;\nexports._save = _save;\nvar dbId,\n    onlyId,\n    storage = window.localStorage;\n\nvar TAG = 'aaron';\n\n//如果数据库为写入appid ,则创建\nvar createAppid = function createAppid() {\n    //添加UUID\n    var appId = 'aaron-' + new Date().getDate();\n    //写入数据库\n    Xut.config.db && Xut.config.db.transaction(function (tx) {\n        tx.executeSql(\"UPDATE Setting SET 'value' = \" + appId + \" WHERE [name] = 'appId'\", function () {}, function () {});\n    }, function () {\n        //  callback && callback();\n    }, function () {\n        //  callback && callback();\n    });\n    return appId;\n};\n\n//过滤\nvar filter = function filter(key) {\n    //添加头部标示\n    if (onlyId) {\n        return key + onlyId;\n    } else {\n        if (!Xut.config.appUUID) {\n            Xut.config.appUUID = createAppid();\n        }\n        //子文档标记\n        if (window.SUbCONFIGT && window.SUbCONFIGT.dbId) {\n            onlyId = \"-\" + Xut.config.appUUID + \"-\" + window.SUbCONFIGT.dbId;\n        } else {\n            onlyId = \"-\" + Xut.config.appUUID;\n        }\n    }\n    return key + onlyId;\n};\n\n/**\r\n * *按索引值获取存储项的key\r\n * @param  {[type]} index [description]\r\n * @return {[type]}       [description]\r\n */\nfunction _key(index) {\n    //本地方法\n    return storage.key(index);\n};\n\nvar set = function name(key, val) {\n    var setkey;\n\n    //ipad ios8.3setItem出问题\n    function set(key, val) {\n        try {\n            storage.setItem(key, val);\n        } catch (e) {\n            console.log('storage.setItem(setkey, key[i]);');\n        }\n    }\n\n    if (_.isObject(key)) {\n        for (var i in key) {\n            if (key.hasOwnProperty(i)) {\n                setkey = filter(i);\n                set(setkey, key[i]);\n            }\n        }\n    } else {\n        key = filter(key);\n        set(key, val);\n    }\n};\n\nvar get = function get(key) {\n    key = filter(key);\n    return storage.getItem(key);\n};\n\n/**\r\n * 设置localStorage\r\n * @param {[type]} key [description]\r\n * @param {[type]} val [description]\r\n */\nexports._set = set;\n\n/**\r\n * 获取localstorage中的值\r\n * @param  {[type]} key [description]\r\n * @return {[type]}     [description]\r\n */\n\nexports._get = get;\n\n/**\r\n * 删除localStorage中指定项\r\n * @param  {[type]} key [description]\r\n * @return {[type]}     [description]\r\n */\n\nfunction _remove(key) {\n    key = filter(key);\n    storage.removeItem(key);\n};\n\n/**\r\n * 序列化\r\n * @return {[type]} [description]\r\n */\nfunction _fetch() {\n    return JSON.parse(get(name || TAG) || '[]');\n}\n\nfunction _save(name, val) {\n    set(name || TAG, JSON.stringify(val));\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/stroage.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fixAudio = fixAudio;\nexports.hasAudioes = hasAudioes;\nexports.getAudio = getAudio;\n\nvar _tap = require('../../tap');\n\n/**\r\n * audio对象下标\r\n * @type {Number}\r\n */\nvar index = 0;\nvar loop = 5;\nvar audioes = [];\n\n/**\r\n * 修复audio\r\n * @param  {[type]} obj    [description]\r\n * @param  {[type]} key    [description]\r\n * @param  {[type]} access [description]\r\n * @return {[type]}        [description]\r\n */\nfunction fixAudio(obj, key, access) {\n    var start = function start() {\n        var audio = void 0,\n            i = void 0;\n        for (i = 0; i < loop; i++) {\n            audio = new Audio();\n            audio.play();\n            audioes.push(audio);\n        }\n        (0, _tap.offTap)(document, {\n            start: start\n        });\n    };\n    (0, _tap.bindTap)(document, {\n        start: start\n    });\n}\n\nfunction hasAudioes() {\n    return audioes.length;\n}\n\nfunction getAudio() {\n    var audio = audioes[index++];\n    if (!audio) {\n        index = 0;\n    }\n    return audio;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/fix.js\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 资源路径\r\n * resource 就是图片音频数据文件\r\n * widget 是零件资源文件\r\n * @type {String}\r\n */\n\nvar defaultSourcePath = \"content/gallery/\";\nvar defaultWidgetPath = \"content/widget/\";\n\n/**\r\n * 资源根路径\r\n * @type {String}\r\n */\nvar getSourcePath = exports.getSourcePath = function getSourcePath() {\n    if (window.DYNAMICCONFIGT) {\n        return window.DYNAMICCONFIGT.resource + '/gallery/';\n    } else {\n        return defaultSourcePath;\n    }\n};\n\n/**\r\n * 零件\r\n * @param  {[type]} 'source' [description]\r\n * @return {[type]}          [description]\r\n */\nvar getWidgetPath = exports.getWidgetPath = function getWidgetPath() {\n    if (window.DYNAMICCONFIGT) {\n        return window.DYNAMICCONFIGT.resource + '/widget/';\n    } else {\n        return defaultWidgetPath;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/config/default.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.removeCache = removeCache;\nexports.errorTable = errorTable;\nexports.saveCache = saveCache;\nexports.convertCache = convertCache;\nexports.setApi = setApi;\n\nvar _transform = require('./transform');\n\nvar _query = require('./query');\n\n/**\r\n * 数据缓存\r\n */\nvar dataCache = void 0;\n\n/**\r\n * 带有场景信息存数\r\n */\nvar sectionRelated = void 0;\n\n/**\r\n * 音频的ActivityId信息\r\n */\nvar videoActivityIdCache = void 0;\n\n/**\r\n * 错误表\r\n */\nvar errortables = void 0;\n\n/**\r\n * 销毁数据\r\n * @return {[type]} [description]\r\n */\nfunction removeCache() {\n    dataCache = null;\n    sectionRelated = null;\n    videoActivityIdCache = null;\n    errortables = null;\n}\n\n/**\r\n * 错误表\r\n * @return {[type]} [description]\r\n */\nfunction errorTable() {\n    return errortables;\n}\n\n/**\r\n * 保存缓存\r\n * @param {[type]} results [description]\r\n */\nfunction saveCache(results, collectError) {\n    //错表\n    errortables = collectError || [];\n\n    //数据结果集\n    Xut.data = dataCache = results;\n}\n\n/**\r\n * 转化缓存\r\n */\nfunction convertCache() {\n\n    /**\r\n     * 计算数据偏移量\r\n     */\n    (0, _transform.dataOffset)(dataCache);\n\n    /**\r\n     * vidoe特殊处理，需要记录chapterId范围\r\n     */\n    if (dataCache.Video) {\n        videoActivityIdCache = (0, _transform.transformVideoActivity)(dataCache);\n    }\n\n    /**\r\n     * 带有场景处理\r\n     * @type {[type]}\r\n     */\n    sectionRelated = (0, _transform.transformSectionRelated)(dataCache);\n}\n\n/**\r\n *  查询数据接口\r\n *  1 video表传递是activityId关联\r\n *  2 其余表都是传递当前表的id\r\n *  type 查询ID的类型, 数据的id或者activityId\r\n *  callback 提供给chapterId使用\r\n * @return {[type]} [description]\r\n */\nfunction setApi(novelId) {\n\n    /**\r\n     * 标记应用ID\r\n     * @type {[type]}\r\n     */\n    dataCache.novelId = novelId;\n\n    /**\r\n     * 针对数据库content为空的处理\r\n     * @return {[type]} [description]\r\n     */\n    dataCache.preventContent = function () {\n        return dataCache.Content.length ? false : true;\n    }();\n\n    /**\r\n     * 通过ID查询方式\r\n     * @param  {[type]}  tableName [description]\r\n     */\n    dataCache.query = function (tableName, id, type, callback) {\n        /**\r\n         * 特殊的字段关联\r\n         * 1 activityId\r\n         * 2 chpaterId\r\n         */\n        switch (type) {\n            /**\r\n             * 通过activityId查询的方式\r\n             *\r\n             * 表名,ID,类型\r\n             * Xut.data.query('Action', id, 'activityId');\r\n             *\r\n             * @type {[type]}\r\n             */\n            case 'activityId':\n                var item;\n                var activityId = id;\n                var data = dataCache[tableName];\n                for (var i = 0, len = data.length; i < len; i++) {\n                    item = data.item(i);\n                    if (item) {\n                        if (item[type] == activityId) {\n                            return item;\n                        }\n                    }\n                }\n                return;\n\n            /**\r\n             * 通过chpaterId查询方式\r\n             * parser中的scanActivity过滤处理\r\n             */\n            case 'chapterId':\n            case 'seasonId':\n                var chapterId = id;\n                var data = dataCache[tableName];\n                if (data) {\n                    var item;\n                    for (var i = 0, len = data.length; i < len; i++) {\n                        item = data.item(i);\n                        if (item) {\n                            if (item[type] == chapterId) {\n                                callback && callback(item);\n                            }\n                        }\n                    }\n                }\n                return;\n        }\n\n        /**\r\n         * 数据信息\r\n         * @return {[type]} [description]\r\n         */\n        var Query = function Query() {\n            var data = dataCache[tableName];\n            if (id) {\n                var index = id - data.start;\n                return data.item(index);\n            } else {\n                return data.length ? data.item(0) : null;\n            }\n        };\n\n        /**\r\n         * 通过id查询的方式\r\n         */\n        switch (tableName) {\n            //获取整个一个用的chapter数据\n            case 'appPage':\n                return dataCache.Chapter;\n            ///获取整个一个用的Section数据 \n            case 'appSection':\n                return dataCache.Season;\n            //如果是是section信息\n            case 'sectionRelated':\n                return sectionRelated['seasonId->' + id];\n            //如果是音频\n            case 'Video':\n                if (type) {\n                    return Query();\n                } else {\n                    //传递的id是activityId\n                    var id = videoActivityIdCache[id];\n                    return dataCache.query('Video', id, true);\n                }\n\n            default:\n                //默认其余所有表\n                return Query();\n        }\n    };\n\n    /**\r\n     * 针对动态表查询\r\n     * 每次需要重新取数据\r\n     * Xut.data.oneQuery('Image',function(){});\r\n     * @return {[type]} [description]\r\n     */\n    dataCache.oneQuery = function (tableName, callback) {\n        (0, _query.oneQuery)(tableName, function (data) {\n            callback && callback(data);\n        });\n    };\n\n    /**\r\n     * 删除数据\r\n     * 表名,表ID\r\n     * @return {[type]} [description]\r\n     */\n    dataCache.remove = function (tableName, id, success, failure) {\n        (0, _query.dataRemove)(tableName, id, success, failure);\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/cache.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.importResults = importResults;\nexports.getResults = getResults;\nexports.removeResults = removeResults;\n\nvar _loader = require('../util/loader');\n\n/**\r\n * 数据库缓存结果集\r\n */\nvar result = void 0;\n\n/**\r\n * 设置数据缓存\r\n * 1 去掉全局挂着\r\n * 2 缓存\r\n */\nfunction importResults(callback) {\n    var path = window.DYNAMICCONFIGT.database;\n    if (path) {\n        //add window.SQLResult database\n        (0, _loader.request)(path, function () {\n            result = window.SQLResult;\n            window.SQLResult = null;\n            callback();\n        });\n    } else if (window.SQLResult) {\n        result = window.SQLResult;\n        window.SQLResult = null;\n        callback();\n    }\n}\n\n/**\r\n * 获取数据缓存\r\n * @return {[type]} [description]\r\n */\nfunction getResults() {\n    return result;\n}\n\n/**\r\n * 移除缓存数据\r\n * @return {[type]} [description]\r\n */\nfunction removeResults() {\n    result = null;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/results.js\n ** module id = 20\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _action = require('./action');\n\nvar _action2 = _interopRequireDefault(_action);\n\nvar _content = require('./content');\n\nvar _content2 = _interopRequireDefault(_content);\n\nvar _media = require('./media');\n\nvar _media2 = _interopRequireDefault(_media);\n\nvar _widget = require('./widget');\n\nvar _widget2 = _interopRequireDefault(_widget);\n\nvar _shownote = require('./shownote');\n\nvar _shownote2 = _interopRequireDefault(_shownote);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n    'Video': _media2.default,\n    'Audio': _media2.default,\n    'Webpage': _media2.default,\n    Action: _action2.default,\n    Content: _content2.default,\n    Widget: _widget2.default,\n    ShowNote: _shownote2.default\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/index.js\n ** module id = 21\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n *\r\n * 基本事件管理\r\n * 1 异步\r\n * 2 同步\r\n *\r\n */\n\nvar ArrayProto = Array.prototype;\nvar nativeIndexOf = ArrayProto.indexOf;\nvar slice = ArrayProto.slice;\nvar _indexOf = function _indexOf(array, needle) {\n    var i, l;\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) {\n        return array.indexOf(needle);\n    }\n    for (i = 0, l = array.length; i < l; i++) {\n        if (array[i] === needle) {\n            return i;\n        }\n    }\n    return -1;\n};\n\nvar Observer = exports.Observer = function () {\n    function Observer() {\n        _classCallCheck(this, Observer);\n\n        this.$watch = this.bind;\n        this.$off = this.unbind;\n        this.$emit = this.trigger;\n        this.$once = this.one;\n\n        //触发列表名称\n        //防止同步触发\n        this._handleName = {};\n    }\n\n    _createClass(Observer, [{\n        key: \"bind\",\n        value: function bind(event, fn) {\n            var i, part;\n            var events = this.events = this.events || {};\n            var parts = event.split(/\\s+/);\n            var num = parts.length;\n\n            for (i = 0; i < num; i++) {\n                events[part = parts[i]] = events[part] || [];\n                if (_indexOf(events[part], fn) === -1) {\n                    events[part].push(fn);\n                }\n            }\n\n            //假如存在同步句柄\n            //执行\n            var data;\n            if (data = this._handleName[event]) {\n                this.$emit(event, data[0]);\n            }\n\n            return this;\n        }\n    }, {\n        key: \"one\",\n        value: function one(event, fn) {\n            // [notice] The value of fn and fn1 is not equivalent in the case of the following MSIE.\n            // var fn = function fn1 () { alert(fn === fn1) } ie.<9 false\n            var fnc = function fnc() {\n                this.unbind(event, fnc);\n                fn.apply(this, slice.call(arguments));\n            };\n            this.bind(event, fnc);\n            return this;\n        }\n    }, {\n        key: \"unbind\",\n        value: function unbind(event, fn) {\n            var eventName, i, index, num, parts;\n            var events = this.events;\n\n            if (!events) return this;\n\n            //指定\n            if (arguments.length) {\n                parts = event.split(/\\s+/);\n                for (i = 0, num = parts.length; i < num; i++) {\n                    if ((eventName = parts[i]) in events !== false) {\n                        index = fn ? _indexOf(events[eventName], fn) : -1;\n                        if (index !== -1) {\n                            events[eventName].splice(index, 1);\n                        }\n                    }\n                }\n            } else {\n                this.events = null;\n            }\n\n            return this;\n        }\n    }, {\n        key: \"trigger\",\n        value: function trigger(event) {\n            var args, i;\n            var events = this.events,\n                handlers;\n\n            //参数\n            args = slice.call(arguments, 1);\n\n            if (!events || event in events === false) {\n                // console.log(event)\n                //同步的情况\n                //如果除非了事件，可能事件句柄还没有加载\n                this._handleName[event] = args;\n                return this;\n            }\n\n            handlers = events[event];\n            for (i = 0; i < handlers.length; i++) {\n                handlers[i].apply(this, args);\n            }\n            return this;\n        }\n    }]);\n\n    return Observer;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/observer/index.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.disable = exports.ShowTextBusy = exports.HideBusy = exports.ShowBusy = undefined;\nexports.createCursor = createCursor;\n\nvar _index = require('../config/index');\n\n/**\r\n * 用css3实现的忙碌光标\r\n * @return {[type]} [description]\r\n */\nvar transform = Xut.style.transform;\nvar animationDelay = Xut.style.animationDelay;\n\n/**\r\n * 延时加载\r\n * @type {Number}\r\n */\nvar delay = 1000;\n\n/**\r\n * 光标对象\r\n * @type {[type]}\r\n */\nvar node = null;\n\n/**\r\n * 是否禁用忙了光标\r\n * @type {Boolean}\r\n */\nvar isDisable = false;\n\n/**\r\n * 光标状态\r\n * 调用隐藏\r\n * @type {Boolean}\r\n */\nvar isCallHide = false;\n\n/**\r\n * setTimouet\r\n * @type {[type]}\r\n */\nvar timer = null;\n\n/**\r\n * create\r\n * @return {[type]} [description]\r\n */\nfunction createCursor() {\n    if (isDisable) return;\n    var sWidth = _index.config.screenSize.width;\n    var sHeight = _index.config.screenSize.height;\n    var width = Math.min(sWidth, sHeight) / 4;\n    var space = Math.round((sHeight - width) / 2);\n    var delay = [0, 0.9167, 0.833, 0.75, 0.667, 0.5833, 0.5, 0.41667, 0.333, 0.25, 0.1667, 0.0833];\n    var deg = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330];\n\n    var count = 12;\n    var html = '';\n    var container = '';\n\n    while (count--) {\n        html = '<div class=\"xut-busy-spinner\" style=\"' + '{{transform}}:rotate({{rotate}}deg) translate(0,-142%);' + '{{animation}}:-{{delay}}s\">' + '</div>';\n        container += _.template(html, {\n            transform: transform,\n            rotate: deg[count],\n            animation: animationDelay,\n            delay: delay[count]\n        });\n    }\n\n    html = '<div style=\"width:{{width}}px;height:{{height}}px;margin:{{margin}}px auto;\">' + ' <div style=\"height:30%;\"></div>' + ' <div class=\"xut-busy-middle\">{{container}}</div>' + ' <div class=\"xut-busy-text\"></div>' + '</div>';\n\n    container = _.template(html, {\n        width: width,\n        height: width,\n        margin: space,\n        container: container\n    });\n\n    node = $('#xut-busyIcon').html(container);\n}\n\nvar clear = function clear() {\n    clearTimeout(timer);\n    timer = null;\n};\n\n/**\r\n * 显示光标\r\n */\nvar ShowBusy = exports.ShowBusy = function ShowBusy() {\n    if (isDisable || Xut.IBooks.Enabled || timer) return;\n    timer = setTimeout(function () {\n        node.show();\n        clear();\n        if (isCallHide) {\n            HideBusy();\n            isCallHide = false;\n        }\n    }, delay);\n};\n\n/**\r\n * 隐藏光标\r\n */\nvar HideBusy = exports.HideBusy = function HideBusy(IsPay) {\n    //显示忙碌加锁，用于不处理hideBusy\n    if (isDisable || Xut.IBooks.Enabled || ShowBusy.lock) return;\n    if (!timer) {\n        node.hide();\n    } else {\n        isCallHide = true;\n    }\n    IsPay && node.css('pointer-events', '').find('.xut-busy-text').html('');\n};\n\n/**\r\n * 显示光标\r\n * @param {[type]} txt [description]\r\n */\nvar ShowTextBusy = exports.ShowTextBusy = function ShowTextBusy(txt) {\n    if (isDisable || Xut.IBooks.Enabled) return;\n    node.css('pointer-events', 'none').find('.xut-busy-text').html(txt);\n    ShowBusy();\n};\n\n/**\r\n * 禁用光标\r\n * isDisable 是否禁用\r\n * @return {[type]} [description]\r\n */\nvar disable = exports.disable = function disable(state) {\n    isDisable = state;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/cursor.js\n ** module id = 24\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n     value: true\n});\nexports.Iscroll = Iscroll;\n// *  iscroll 控制\n// *    传入dom ID\n// *     [onIscroll description]\n// * @param  {[type]} contentWrapperDomId [description]\n// * @return {[type]}                     [description]\n\nfunction Iscroll(element) {\n     //是否移动，中途停止了动画\n     //  var distX = 0,\n     //      distY = 0,\n     //      startX,\n     //      startY,\n     //      absDistY,\n     //      absDistX,\n     //      iscroll,\n     //      that = this,\n     //      screenWidth = Xut.config.screenSize.width,\n     //      useswipeleft = function() {\n     //          Xut.View.GotoPrevSlide()\n     //      },\n     //      useswiperight = function() {\n     //          Xut.View.GotoNextSlide()\n     //      };\n\n     return new iScroll(element, {\n          scrollbars: true,\n          fadeScrollbars: true\n          //click          : true,\n          //tap            : true,\n          //probeType      : 2\n     });\n\n     // this.iscroll.on('scrollStart', function() {\n     //     iscroll.initDirection = false; //初始化一次滑动方向\n     // });\n     // \n     // \n     // this.iscroll.on('scrollEnd', function(e) {\n     //     //如果是Y轴滑动者不作处理跳过\n     //     if (iscroll.initDirection) {\n     //          startY= startX=distX = distY = 0;\n     //         iscroll.startTime = 0;\n     //         iscroll.initDirection = false;\n     //         return;\n     //     }\n\n     //     var duration, deltaX, validSlide, distance;\n     //     //滑动的距离、\n\n     //     deltaX = distX || 0;\n     //     duration = +new Date - iscroll.startTime;\n     //     distance = Math.abs(deltaX);\n     //     //反弹的边界值\n     //     validSlide = Math.ceil(screenWidth / 5);\n     //     if (distance < validSlide) {\n     //         //快速滑动允许翻页\n     //         if (duration < 200 && distance > 20) {\n     //             iscroll.swipe = true;\n     //             deltaX > 0 ? useswipeleft() : useswiperight();\n     //         } else {\n     //             //反弹\n     //             Xut.View.MovePage(0, 300, deltaX > 0 ? 'prev' : 'next', 'flipRebound')\n     //         }\n     //     } else {\n     //         iscroll.swipe = true;\n     //         deltaX > 0 ? useswipeleft() : useswiperight();\n     //     }\n     //    startY= startX=distX = distY = 0;\n     //     iscroll.startTime = 0;\n     //     iscroll.initDirection = false;\n     // });\n     // this.iscroll.on('scroll', function(e) {\n     //     startX=startX||e.pageX;\n     //     startY=startY||e.pageY;\n\n     //     distX =e.pageX-startX;\n     //     distY = e.pageY-startY;\n\n     //     absDistX = Math.abs(distX);\n     //     absDistY = Math.abs(distY);\n\n\n     //     iscroll.startTime = iscroll.startTime || e.timeStamp;\n     //     if (absDistY * 1.5 > absDistX) {\n     //           //如果是Y轴滑动则做标记不作处理\n     //         iscroll.initDirection = true;\n     //     } else {\n     //         Xut.View.MovePage(distX, 0, distX > 0 ? 'prev' : 'next', 'flipMove');\n     //         iscroll.initDirection = false\n     //     }\n     // });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/iscroll.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.audioPlayer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _lang = require('../../util/lang');\n\nvar _index = require('../../config/index');\n\nvar _baseclass = require('./baseclass');\n\nvar _fix = require('./fix');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 音频播放\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @param  {[type]} global [description]\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @return {[type]}        [description]\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar Player = null;\nvar noop = function noop() {};\nvar instance = (0, _lang.hash)(); //存放不同音轨的一个实例\nvar audioPlayer = void 0;\nvar plat = Xut.plat;\n\nvar UUIDcreatePart = function UUIDcreatePart(length) {\n    var uuidpart = \"\";\n    var uuidchar = void 0;\n    for (var i = 0; i < length; i++) {\n        uuidchar = parseInt(Math.random() * 256, 10).toString(16);\n        if (uuidchar.length == 1) {\n            uuidchar = \"0\" + uuidchar;\n        }\n        uuidpart += uuidchar;\n    }\n    return uuidpart;\n};\n\nvar createUUID = function createUUID() {\n    return [4, 2, 2, 2, 6].map(UUIDcreatePart).join('-');\n};\n\n/**\r\n * 检测是否支持HTML5的audio播放\r\n * @param  {[type]} success [description]\r\n * @param  {[type]} fail    [description]\r\n * @return {[type]}         [description]\r\n */\nvar supportAudio = function supportAudio(fail) {\n    try {\n        var audio = new Audio(\"lib/data/support.mp3\");\n        //如果错误\n        audio.addEventListener('error', function (e) {\n            audio = null;\n            fail();\n        }, false);\n    } catch (er) {}\n};\n\n/**\r\n * 使用PhoneGap的Media播放\r\n * @param  {string} url 路径\r\n * @return {[type]}      [description]\r\n */\n\nvar _Media = function (_BaseClass) {\n    _inherits(_Media, _BaseClass);\n\n    function _Media(options, controlDoms) {\n        _classCallCheck(this, _Media);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(_Media).call(this));\n\n        var url = _index.config.audioPath() + options.url,\n            trackId = options.trackId,\n            self = _this,\n            audio;\n\n        //构建之前处理\n        _this.preRelated(trackId, options);\n\n        //音频成功与失败调用\n        audio = new window.GLOBALCONTEXT.Media(url, function () {\n            self.callbackProcess(true);\n        }, function () {\n            self.callbackProcess(true);\n        });\n\n        //autoplay\n        _this.audio = audio;\n        _this.trackId = trackId;\n        _this.options = options;\n\n        //相关数据\n        _this.afterRelated(options, controlDoms);\n\n        _this.play();\n        return _this;\n    }\n\n    /**\r\n     * Compatible with asynchronous\r\n     * for subitile use\r\n     * get audio\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_Media, [{\n        key: 'getAudioTime',\n        value: function getAudioTime(callback) {\n            var _this2 = this;\n\n            this.audio.getCurrentPosition(function (position) {\n                var audioTime = void 0;\n                position = position * 1000;\n                if (!_this2.changeValue) {\n                    _this2.changeValue = position;\n                }\n                position -= _this2.changeValue;\n                if (position > -1) {\n                    audioTime = Math.round(position);\n                }\n                callback(audioTime);\n            }, function (e) {\n                console.log(\"error:\" + e);\n                //出错继续检测\n                callback();\n            });\n        }\n\n        /**\r\n         * 取反\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'end',\n        value: function end() {\n            if (this.audio) {\n                this.audio.release();\n                this.audio = null;\n            }\n            this.status = 'ended';\n            this.destroyRelated();\n        }\n    }]);\n\n    return _Media;\n}(_baseclass.BaseClass);\n\n/**\r\n * 采用Falsh播放\r\n * @type {[type]}\r\n */\n\n\nvar _Flash = function (_BaseClass2) {\n    _inherits(_Flash, _BaseClass2);\n\n    function _Flash(options, controlDoms) {\n        _classCallCheck(this, _Flash);\n\n        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(_Flash).call(this));\n\n        var trackId = options.trackId,\n            url = _index.config.audioPath() + options.url,\n            self = _this3,\n            audio;\n\n        //构建之前处理\n        _this3.preRelated(trackId, options);\n\n        audio = new Audio5js({\n            swf_path: './lib/data/audio5js.swf',\n            throw_errors: true,\n            format_time: true,\n            ready: function ready(player) {\n                this.load(url);\n                //如果调用了播放\n                this.play();\n                self.status = \"playing\";\n            }\n        });\n\n        _this3.audio = audio;\n        _this3.trackId = trackId;\n        _this3.status = 'playing';\n        _this3.options = options;\n\n        _this3.isFlash = true;\n\n        //相关数据\n        _this3.afterRelated(options, controlDoms);\n        return _this3;\n    }\n\n    /**\r\n     * Compatible with asynchronous\r\n     * for subitile use\r\n     * get audio\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_Flash, [{\n        key: 'getAudioTime',\n        value: function getAudioTime(callback) {\n            callback(Math.round(this.audio.audio.audio.currentTime * 1000));\n        }\n    }, {\n        key: 'end',\n        value: function end() {\n            if (this.audio) {\n                this.audio.destroy();\n                this.audio = null;\n            }\n            this.status = 'ended';\n            this.destroyRelated();\n        }\n    }]);\n\n    return _Flash;\n}(_baseclass.BaseClass);\n\n/**\r\n * 采用_Audio5js播放\r\n * @type {[type]}\r\n */\n\n\nvar _Audio5js = function (_BaseClass3) {\n    _inherits(_Audio5js, _BaseClass3);\n\n    function _Audio5js(options, controlDoms) {\n        _classCallCheck(this, _Audio5js);\n\n        var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(_Audio5js).call(this));\n\n        var trackId = options.trackId,\n            url = _index.config.audioPath() + options.url,\n            self = _this4,\n            audio;\n\n        //构建之前处理\n        _this4.preRelated(trackId, options);\n\n        audio = new Audio5js({\n            ready: function ready(player) {\n                this.load(url);\n                //如果调用了播放\n                this.play();\n                self.status = \"playing\";\n            }\n        });\n\n        _this4.audio = audio;\n        _this4.trackId = trackId;\n        _this4.status = 'playing';\n        _this4.options = options;\n\n        //相关数据\n        _this4.afterRelated(options, controlDoms);\n        return _this4;\n    }\n\n    /**\r\n     * Compatible with asynchronous\r\n     * for subitile use\r\n     * get audio\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_Audio5js, [{\n        key: 'getAudioTime',\n        value: function getAudioTime(callback) {\n            callback(Math.round(this.audio.audio.audio.currentTime * 1000));\n        }\n    }, {\n        key: 'end',\n        value: function end() {\n            if (this.audio) {\n                this.audio.destroy();\n                this.audio = null;\n            }\n            this.status = 'ended';\n            this.destroyRelated();\n        }\n    }]);\n\n    return _Audio5js;\n}(_baseclass.BaseClass);\n\n/**\r\n * 使用html5的audio播放\r\n * @param  {string} url    音频路径\r\n * @param  {object} options 可选参数\r\n * @return {object}         [description]\r\n */\n\n\nvar _Audio = function (_BaseClass4) {\n    _inherits(_Audio, _BaseClass4);\n\n    function _Audio(options, controlDoms) {\n        _classCallCheck(this, _Audio);\n\n        var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(_Audio).call(this));\n\n        var trackId = options.trackId;\n        var url = _index.config.audioPath() + options.url;\n        var audio = void 0;\n        var self = _this5;\n\n        var replaceAudio = (0, _fix.hasAudioes)();\n\n        //构建之前处理\n        _this5.preRelated(trackId, options);\n\n        if (instance[trackId]) {\n            audio = replaceAudio ? (0, _fix.getAudio)() : instance[trackId];\n            audio.src = url;\n        } else {\n\n            //create a new Audio instance\n            //如果为ios browser 用Xut.fix.audioes 指定src 初始化见app.js\n            if (replaceAudio) {\n                audio = (0, _fix.getAudio)();\n                audio.src = url;\n            } else {\n                audio = new Audio(url);\n            }\n\n            //更新音轨\n            //妙妙学方式不要音轨处理\n            if (!replaceAudio) {\n                instance[trackId] = audio;\n            }\n        }\n\n        _this5._callback = function () {\n            self.callbackProcess();\n        };\n\n        _this5._throughCallback = function () {\n            self.play();\n        };\n\n        /**\r\n         * safari 自动播放\r\n         * 手机浏览器需要加\r\n         * 2016.8.26\r\n         * @type {Boolean}\r\n         */\n        audio.autoplay = true;\n\n        audio.addEventListener('canplaythrough', _this5._throughCallback, false);\n        audio.addEventListener('ended', _this5._callback, false);\n        audio.addEventListener('error', _this5._callback, false);\n\n        _this5.audio = audio;\n        _this5.trackId = trackId;\n        _this5.status = 'playing';\n        _this5.options = options;\n\n        //相关数据\n        _this5.afterRelated(options, controlDoms);\n        return _this5;\n    }\n\n    /**\r\n     * Compatible with asynchronous\r\n     * for subitile use\r\n     * get audio\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_Audio, [{\n        key: 'getAudioTime',\n        value: function getAudioTime(callback) {\n            callback(Math.round(this.audio.currentTime * 1000));\n        }\n    }, {\n        key: 'end',\n        value: function end() {\n            if (this.audio) {\n                this.audio.pause();\n                this.audio.removeEventListener('canplaythrough', this._throughCallback, false);\n                this.audio.removeEventListener('ended', this._callback, false);\n                this.audio.removeEventListener('error', this._callback, false);\n                this.audio = null;\n            }\n            this.status = 'ended';\n            this.destroyRelated();\n        }\n    }]);\n\n    return _Audio;\n}(_baseclass.BaseClass);\n\n/**\r\n * 使用PhoneGap的 js直接调用 cordova Media播放\r\n * @param  {string} url 路径\r\n * @return {[type]}      [description]\r\n */\n\n\nvar _cordovaMedia = function (_BaseClass5) {\n    _inherits(_cordovaMedia, _BaseClass5);\n\n    function _cordovaMedia(options, controlDoms) {\n        _classCallCheck(this, _cordovaMedia);\n\n        var _this6 = _possibleConstructorReturn(this, Object.getPrototypeOf(_cordovaMedia).call(this));\n\n        var url = _index.config.audioPath() + options.url,\n            trackId = options.trackId,\n            self = _this6,\n            audio;\n\n        _this6.id = createUUID();\n\n        //构建之前处理\n        _this6.preRelated(trackId, options);\n\n        var audio = {\n            startPlayingAudio: function startPlayingAudio() {\n                window.audioHandler.startPlayingAudio(self.id, url);\n            },\n            pausePlayingAudio: function pausePlayingAudio() {\n                window.audioHandler.pausePlayingAudio(self.id);\n            },\n            release: function release() {\n                window.audioHandler.release(self.id);\n            },\n            /**\r\n             * 扩充，获取位置\r\n             * @return {[type]} [description]\r\n             */\n            expansionCurrentPosition: function expansionCurrentPosition() {\n                return window.getCurrentPosition(self.id);\n            }\n        };\n\n        //autoplay\n        _this6.audio = audio;\n        _this6.trackId = trackId;\n        _this6.options = options;\n\n        //相关数据\n        _this6.afterRelated(options, controlDoms);\n\n        _this6.play();\n        return _this6;\n    }\n\n    /**\r\n     * Compatible with asynchronous\r\n     * for subitile use\r\n     * get audio\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_cordovaMedia, [{\n        key: 'getAudioTime',\n        value: function getAudioTime(callback) {\n            callback(Math.round(this.audio.expansionCurrentPosition() * 1000));\n        }\n\n        //播放\n\n    }, {\n        key: 'play',\n        value: function play() {\n            if (this.audio) {\n                this.status = 'playing';\n                this.audio.startPlayingAudio();\n            }\n            this.acitonObj && this.acitonObj.play();\n        }\n\n        //停止\n\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.status = 'paused';\n            this.audio && this.audio.pausePlayingAudio();\n            this.acitonObj && this.acitonObj.pause();\n        }\n\n        //结束\n\n    }, {\n        key: 'end',\n        value: function end() {\n            if (this.audio) {\n                this.audio.release();\n                this.audio = null;\n            }\n            this.status = 'ended';\n            this.destroyRelated();\n        }\n    }]);\n\n    return _cordovaMedia;\n}(_baseclass.BaseClass);\n\n//安卓客户端apk的情况下\n\n\nif (plat.isAndroid && !plat.isBrowser) {\n    exports.audioPlayer = audioPlayer = _Media;\n} else {\n    //妙妙学的 客户端浏览器模式\n    if (window.MMXCONFIG && window.audioHandler) {\n        exports.audioPlayer = audioPlayer = _cordovaMedia;\n    } else {\n\n        //安卓 && ios手机端\n        //用纯video 因为 safari要加autoplay\n        if (plat.noAutoPlayMedia) {\n            exports.audioPlayer = audioPlayer = _Audio;\n        } else {\n            //特殊情况\n            //有客户端的内嵌浏览器模式\n            exports.audioPlayer = audioPlayer = _Audio5js;\n        }\n    }\n    //2015.12.23\n    //如果不支持audio改用flash\n    // supportAudio(function() {\n    //     Xut.Audio = Flash;\n    // });\n}\n\nexports.audioPlayer = audioPlayer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/audio.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getCounts = getCounts;\nexports.initFlows = initFlows;\n\nvar _index = require('../../config/index');\n\nvar COLUMNWIDTH = Xut.style.columnWidth;\nvar COLUMNTAP = Xut.style.columnGap;\n\n/**\r\n * seasonId:{\r\n *    chpaterID:count\r\n * }\r\n * @type {[type]}\r\n */\nvar flowCounts = Object.create(null);\n\n/**\r\n * create dom...\r\n */\nvar createStr = function createStr(chapterId, data, vWidth, vHeight, margin) {\n    var columnWidth = COLUMNWIDTH + ':' + vWidth + 'px';\n    var columnHeight = 'height:' + vHeight + 'px';\n\n    var percentageTop = parseInt(margin[0]);\n    var percentageLeft = parseInt(margin[1]);\n    var percentageBottom = parseInt(margin[2]);\n    var percentageRight = parseInt(margin[3]);\n\n    var marginTop = vHeight / 100 * percentageTop;\n    var marginLeft = vWidth / 100 * percentageLeft;\n    var marginBottom = vHeight / 100 * percentageBottom;\n    var marginRight = vWidth / 100 * percentageRight;\n\n    var containerWidth = vWidth - marginLeft;\n    var containerHeight = vHeight - marginTop - marginBottom;\n    var containerLeft = marginLeft / 2;\n    var containerTop = marginTop;\n    var columnGap = COLUMNTAP + ':' + marginLeft + 'px';\n\n    var container = '\\n            <section data-flow=\"true\">\\n                <div data-role=\"margin\" style=\"width:' + containerWidth + 'px;height:' + containerHeight + 'px;margin-top:' + containerTop + 'px;margin-left:' + containerLeft + 'px;\">\\n                    <div data-role=\"column\" id=\"columns-content\" style=\"columns:' + containerWidth + 'px;height:100%;' + columnGap + '\">\\n                        ' + data + '\\n                    </div>\\n                </div>\\n            </section>';\n\n    return container;\n};\n\nvar resolveCount = function resolveCount($content) {\n    var theChildren = $content.find('#columns-content').children();\n    var paraHeight = 0;\n    for (var i = 0; i < theChildren.length; i++) {\n        paraHeight += $(theChildren[i]).height();\n    }\n    return Math.floor(paraHeight / _index.config.viewSize.height);\n};\n\nvar insertColumn = function insertColumn(seasonNode, seasonsId, vWidth, vHeight, flowCounts) {\n    for (var i = 0; i < seasonNode.childNodes.length; i++) {\n        var chapterNode = seasonNode.childNodes[i];\n        if (chapterNode.nodeType == 1) {\n            var tag = chapterNode.id;\n            var id = tag.match(/\\d/)[0];\n\n            //传递的数据\n            var margin = chapterNode.getAttribute('data-margin');\n            if (margin) {\n                margin = margin.split(\",\");\n            } else {\n                margin = [0, 0, 0, 0];\n            }\n\n            chapterNode.innerHTML = createStr(id, chapterNode.innerHTML, vWidth, vHeight, margin);\n            flowCounts[seasonsId][id] = 0;\n        }\n    }\n};\n\n/**\r\n * reutrn seasonIds\r\n * return chpaterIds\r\n * @param  {[type]} seasonId  [description]\r\n * @param  {[type]} chpaterId [description]\r\n * @return {[type]}           [description]\r\n */\nfunction getCounts(seasonId, chpaterId) {\n    var seasonIds = flowCounts[seasonId];\n    if (seasonIds) {\n        if (seasonIds[chpaterId]) {\n            return seasonIds[chpaterId];\n        } else {\n            var count = 0;\n            for (var key in seasonIds) {\n                count += seasonIds[key];\n            }\n            return count;\n        }\n    } else {\n        console.log('getCounts失败');\n    }\n}\n\n/**\r\n * 构建flow页面代码结构\r\n * @return {[type]} [description]\r\n */\nfunction initFlows() {\n\n    var $container = $(\"#xut-stream-flow\");\n    var $seasons = $container.children();\n    var vWidth = _index.config.viewSize.width;\n    var vHeight = _index.config.viewSize.height;\n\n    $seasons.each(function (index, node) {\n        var tag = node.id;\n        var seasonsId = tag.match(/\\d/)[0];\n        var $chapters = $seasons.children();\n        flowCounts[seasonsId] = Object.create(null);\n        insertColumn(node, seasonsId, vWidth, vHeight, flowCounts);\n    });\n\n    $container.css({\n        width: vWidth,\n        height: vHeight,\n        overflow: 'hidden'\n    }).show();\n\n    $seasons.each(function (index, node) {\n        var tag = node.id;\n        var seasonsId = tag.match(/\\d/)[0];\n        var $chapters = $seasons.children();\n        $chapters.each(function (index, node) {\n            var tag = node.id;\n            var chpaterId = tag.match(/\\d/)[0];\n            var count = resolveCount($(node));\n            flowCounts[seasonsId][chpaterId] = parseInt(count);\n        });\n    });\n\n    $container.hide();\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/flow/layout.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/*基本动画类鼠标响应事件*/\n\n//支持触屏\nvar hasTouch = 'ontouchstart' in window;\nvar isDesktop = !hasTouch;\n//针对win8的处理\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n//移动端仅仅只支持touch\nvar onlyTouch = hasTouch && MOBILE_REGEX.test(navigator.userAgent);\n//可以点击与触摸\nvar isSurface = hasTouch && 'onmousedown' in window && !onlyTouch;\nvar isMacOS = navigator.userAgent.indexOf(\"Mac\") < 0 ? false : true;\nvar startEventType = isSurface ? \"touchstart mousedown\" : hasTouch ? \"touchstart\" : \"mousedown\";\nvar moveEventType = isSurface ? \"touchmove mousemove\" : hasTouch ? \"touchmove\" : \"mousemove\";\nvar endEventType = isSurface ? \"touchend mouseup\" : hasTouch ? \"touchend\" : \"mouseup\";\nvar cancelEventType = isSurface ? \"touchcancel mouseup\" : hasTouch ? 'touchcancel' : 'mouseup';\n\nvar onTouchMove = function onTouchMove(pageType, parentId, objectId, startCallback, moveCallback, endCallback) {\n    this.hasTouch = hasTouch;\n    this.parent = document.getElementById(parentId);\n    this.scroller = document.getElementById(objectId);\n    this.startCallback = startCallback;\n    this.moveCallback = moveCallback;\n    this.endCallback = endCallback;\n    if (this.scroller == null) {\n        console.error(\"The control area of the object is empty.\");\n        return;\n    }\n    if (Xut.Contents.ResetDefaultControl) Xut.Contents.ResetDefaultControl(pageType, parentId); //取消默认翻页行为\n\n    if (this.scroller[\"initTouchMove\"]) this.scroller[\"initTouchMove\"]._unbind(startEventType); //注销重复事件\n    this._bind(startEventType, null);\n    this.scroller[\"initTouchMove\"] = this; //实例化对象绑定到元素，便于后期调用\n};\nonTouchMove.prototype = {\n    handleEvent: function handleEvent(e) {\n        switch (e.type) {\n            case startEventType:\n                this._start(e);\n                break;\n            case moveEventType:\n                this._move(e);\n                break;\n            case endEventType:\n                this._end(e);\n                break;\n            case cancelEventType:\n                this._end(e);\n                break;\n            case 'mouseout':\n                this._end(e);\n                break;\n        }\n    },\n    _start: function _start(e) {\n        e.preventDefault();\n        if (typeof this.startCallback == \"function\") this.startCallback(e);\n        this._bind(moveEventType);\n        this._bind(endEventType);\n        this._bind(cancelEventType);\n        if (!this.hasTouch) this._bind('mouseout', this.parent);\n    },\n    _move: function _move(e) {\n        if (typeof this.moveCallback == \"function\") this.moveCallback(e);\n    },\n    _end: function _end(e) {\n        this._unbind(moveEventType);\n        this._unbind(endEventType);\n        this._unbind(cancelEventType);\n        if (!this.hasTouch) this._unbind('mouseout', this.parent);\n        if (typeof this.endCallback == \"function\") this.endCallback(e);\n    },\n    _bind: function _bind(type, el, bubble) {\n        (el || this.scroller).addEventListener(type, this, !!bubble);\n    },\n    _unbind: function _unbind(type, el, bubble) {\n        (el || this.scroller).removeEventListener(type, this, !!bubble);\n    }\n};\n\nexports.isMacOS = isMacOS;\nexports.hasTouch = hasTouch;\nexports.isDesktop = isDesktop;\nexports.onTouchMove = onTouchMove;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/ppt/support.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\nr\n高级精灵动画\r\n提供给widget使用\r\nr\n复杂精灵动画\r\n提供给普通转化高级使用\r\nn\nvar _loader = require('../../util/loader');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _class = function () {\n    function _class(data, options) {\n        _classCallCheck(this, _class);\n\n        this.data = data;\n\n        //精灵动画类型 默认为高级精灵动画true 简单转复杂为false\n        this.animationType = true;\n\n        //高级精灵动画\n        if (options.type == 'seniorSprite') {\n            this.contentPrefix = options.contentPrefix;\n            this.obj = $(\"#\" + this.contentPrefix + this.data.framId);\n            this.resourcePath = options.resourcePath;\n        }\n        //简单精灵强制转换复杂精灵动画\n        else {\n                this.animationType = false;\n                this.contentId = options.contentId;\n                this.obj = $(options.ele);\n                this.resourcePath = \"content/gallery/\" + options.resourcePath + \"/\";\n            }\n\n        //是否有蒙版图\n        //resType:1没有蒙版 0：有蒙版\n        this.isMask = false;\n\n        this.curFPS = 0;\n        this.loop = 1;\n        this.resetCount = 0;\n\n        var params = this.data.params;\n        var action = this.action = params[\"actList\"].split(\",\")[0];\n        var pa = params[action];\n        this.FPS = parseInt(pa.fps);\n        this.playerType = pa.playerType;\n\n        //isSports:0非运动状态 isSports:1运动状态\n        this.isSports = parseInt(pa.isSports);\n        this.originalImageList = pa.ImageList;\n\n        this.totalFPS = this.originalImageList.length;\n        this._imgArray = [];\n        this.sprObj = null;\n\n        if (this.playerType == \"loop\") {\n            this.loop = 0;\n        }\n\n        this._init();\n    }\n\n    /**\r\n     * 初始化\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_class, [{\n        key: '_init',\n        value: function _init() {\n            this._initImage();\n\n            //判断是否运动状态\n            if (this.isSports) {\n                //初始化位置信息\n                this._initPosition();\n            }\n            //初始化结构\n            this._initStructure();\n        }\n\n        /**\r\n         * 检查是否可以运行\r\n         * 第一次预加载必须先结束\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_checkNextAction',\n        value: function _checkNextAction(task) {\n            if (this._initImageState) {\n                task();\n            } else {\n                this._waitTask = [];\n                this._waitTask.push(task);\n            }\n        }\n\n        /**\r\n         * 初始化qualified张图片\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_initImage',\n        value: function _initImage() {\n            var _this = this;\n\n            var i = 0;\n            var qualified = 10;\n            var count = this.qualified = this.totalFPS >= qualified ? qualified : this.totalFPS;\n            var collect = function () {\n                return function () {\n                    if (count == 1) {\n                        _this._initImageState = true;\n                        if (_this._waitTask && _this._waitTask.length) {\n                            _this._waitTask.pop()();\n                        }\n                    } else {\n                        count--;\n                    }\n                };\n            }();\n\n            for (i; i < this.qualified; i++) {\n                this._preloadImage(i, collect);\n            }\n        }\n\n        /**\r\n         * 初始化位置信息\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_initPosition',\n        value: function _initPosition() {\n            var obj = this.obj;\n            var params = this.data.params;\n            var action = this.action;\n            this.startPoint = {\n                x: this.originalImageList[0].X,\n                y: this.originalImageList[0].Y,\n                w: parseInt(params[action].width),\n                h: parseInt(params[action].height)\n            };\n            this.xRote = parseInt(obj.css(\"width\")) / this.startPoint.w;\n            this.yRote = parseInt(obj.css(\"height\")) / this.startPoint.h;\n            this.startLeft = parseInt(obj.css(\"left\"));\n            this.startTop = parseInt(obj.css(\"top\"));\n        }\n\n        /**\r\n         * 初始化结构\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_initStructure',\n        value: function _initStructure() {\n            var obj = this.obj;\n            var framId = void 0;\n            var resourcePath = this.resourcePath;\n            var ret = \"\";\n\n            if (this.animationType) {\n                framId = this.data.framId;\n            } else {\n                var contentId = this.contentId;\n                framId = contentId + '_' + this.data.framId;\n            }\n\n            if (this.isMask) {\n                var filename = this._getFilename(this.originalImageList[0].name);\n                ret += String.Foramt(\"<div\" + \" id='spImg_{0}'\" + \" style='width:100%;height:100%;position:absolute;background: url({1}.jpg) no-repeat;background-size: 100% 100%;-webkit-mask: url({2}.png) no-repeat;-webkit-mask-size: 100% 100%;'></div>\", framId, resourcePath + filename, resourcePath + filename);\n                this.sprObj = $(ret);\n                obj.append(this.sprObj);\n            } else {\n                ret += String.format(\"<img\" + \" id='spImg_{0}'\" + \" src='{1}'\" + \" style='width:100%;height:100%;position:absolute;' />\", framId, resourcePath + this.originalImageList[0].name);\n                this.sprObj = $(ret);\n                obj.html(this.sprObj);\n            }\n        }\n\n        /**\r\n         * 获取文件名\r\n         * @param  {[type]} name [description]\r\n         * @return {[type]}      [description]\r\n         */\n\n    }, {\n        key: '_getFilename',\n        value: function _getFilename(name) {\n            return name.substr(0, name.indexOf('.'));\n        }\n\n        /**\r\n         * 图片预加载\r\n         * 1 png\r\n         * 2 jpg mask\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_preloadImage',\n        value: function _preloadImage(index, callback) {\n            if (index >= this.totalFPS) {\n                return;\n            }\n            var self = this;\n            var collect = function collect() {\n                self._imgArray && self._imgArray.push(this);\n                callback && callback();\n            };\n\n            var imageList = this.originalImageList;\n            var resourcePath = this.resourcePath;\n            if (this.isMask) {\n                var filename = this._getFilename(imageList[index].name);\n                (0, _loader.imgReady)(resourcePath + filename + \".png\", collect);\n                (0, _loader.imgReady)(resourcePath + filename + \".jpg\", collect);\n            } else {\n                (0, _loader.imgReady)(resourcePath + imageList[index].name, collect);\n            }\n        }\n\n        /**\r\n         * 改变图片url\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_changeImageUrl',\n        value: function _changeImageUrl() {\n            var imageList = this.originalImageList;\n            var curFPS = imageList[this.curFPS];\n            var resourcePath = this.resourcePath;\n\n            //第一次循环才加载图片\n            if (this.resetCount === 0) {\n                this._preloadImage(this.curFPS + this.qualified);\n            }\n\n            if (this.isMask) {\n                var filename = this._getFilename(curFPS.name);\n                this.sprObj.css(\"background-image\", \"url(\" + resourcePath + filename + \".jpg)\");\n                this.sprObj.css(\"-webkit-mask-image\", \"url(\" + resourcePath + filename + \".png)\");\n            } else {\n                var str = resourcePath + curFPS.name;\n                this.sprObj.attr(\"src\", str);\n            }\n        }\n\n        /**\r\n         * 改变图片位置\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_changePosition',\n        value: function _changePosition() {\n            var imageList = void 0,\n                curFPS = void 0,\n                x = void 0,\n                y = void 0;\n            imageList = this.originalImageList;\n            curFPS = imageList[this.curFPS];\n            x = curFPS.X - this.startPoint.x;\n            y = curFPS.Y - this.startPoint.y;\n            this.obj.css({\n                left: this.startLeft + x * this.xRote,\n                top: this.startTop + y * this.yRote\n            });\n        }\n\n        /**\r\n         * 运行动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_change',\n        value: function _change() {\n            this._changeImageUrl();\n            if (this.isSports) {\n                this._changePosition();\n            }\n        }\n    }, {\n        key: '_time',\n        value: function _time() {\n            var _this2 = this;\n\n            this.timer = setTimeout(function () {\n                _this2._change();\n                _this2.curFPS++;\n                _this2._set();\n            }, 1000 / this.FPS);\n        }\n\n        /**\r\n         * 设置动画运行状态\r\n         * look 0  循环\r\n         * lokk 1~n 指定次数\r\n         */\n\n    }, {\n        key: '_set',\n        value: function _set() {\n            var _this3 = this;\n\n            //循环复位\n            if (this.curFPS >= this.totalFPS - 1) {\n                this.curFPS = 0;\n                this.resetCount++;\n            }\n\n            //指定次数\n            if (this.loop && this.loop == this.resetCount) {\n                this._stop();\n                return;\n            }\n            this._checkNextAction(function () {\n                _this3._time();\n            });\n        }\n    }, {\n        key: '_stop',\n        value: function _stop() {\n            if (this.timer) {\n                clearTimeout(this.timer);\n                this.timer = null;\n                this.curFPS = 0;\n                this.resetCount = 0;\n            }\n        }\n\n        /**\r\n         * 开始运行动画\r\n         * @param  {[type]} action [description]\r\n         * @param  {[type]} loop   [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'play',\n        value: function play(action, loop) {\n            this.action = action;\n            if (!this.data.params[action]) {\n                console.log(\" Function changeSwitchAni  parameters \" + action + \" error\");\n                return;\n            }\n            this.loop = loop;\n            this._stop();\n            this._set();\n        }\n\n        /**\r\n         * 停止\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop() {\n            this._stop();\n        }\n\n        /**\r\n         * 销毁\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this._stop();\n            this.data.params = null;\n            this.data = null;\n            this._imgArray.forEach(function (img) {\n                img = null;\n            });\n            this._imgArray = null;\n        }\n    }]);\n\n    return _class;\n}();\n\nexports.default = _class;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/sprite.js\n ** module id = 29\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.VideoClass = exports.Video5 = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n视频和网页模块（统一整合到VideoClass里面了）\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * 这里有四种播放器:\r\n：基于html5原生实现的video标签 for ios\r\n：基于phoneGap插件实现的media  for android\r\n基于videoJS用flash实现的播放 for pc\r\n用于插入一个网页的webview\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\n\nvar _manager = require('./manager');\n\nvar _support = require('./support');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar pixelRatio = window.devicePixelRatio;\nvar resolution = window.screen;\n\nvar VideoPlayer = null;\n\n/**\r\n * 网页\r\n * @param {[type]} options [description]\r\n */\nvar _WebPage = function _WebPage(options) {\n\n    var pageUrl = options.pageUrl;\n\n    //跳转app市场\n    //普通网页是1\n    //跳转app市场就是2\n    if (options.hyperlink == 2) {\n        //跳转到app市场\n        window.open(pageUrl);\n        //数据统计\n        $.get('http://www.appcarrier.cn/index.php/adplugin/recordads?aid=16&esbId=ios');\n    } else {\n\n        var padding = options.padding || 0,\n            width = options.width,\n            height = options.height,\n            videoId = options.videoId,\n            left = options.left,\n            top = options.top,\n            $videoNode,\n            eleWidth,\n            eleHeight;\n\n        if (padding) {\n            eleWidth = width - 2 * padding;\n            eleHeight = height - 2 * padding;\n        } else {\n            eleWidth = width;\n            eleHeight = height;\n        }\n\n        $videoNode = $('<div id=\"videoWrap_' + videoId + '\" style=\"position:absolute;left:' + left + 'px;top:' + top + 'px;width:' + width + 'px;height:' + height + 'px;z-index:' + Xut.zIndexlevel() + '\">' + '<div style=\"position:absolute;left:' + padding + 'px;top:' + padding + 'px;width:' + eleWidth + 'px;height:' + eleHeight + 'px;\">' + '<iframe src=\"' + pageUrl + '\" style=\"position:absolute;left:0;top:0;width:100%;height:100%;\"></iframe>' + '</div>' + '</div>');\n\n        options.container.append($videoNode);\n    }\n\n    function play() {\n        $videoNode && $videoNode.show();\n    }\n\n    function stop() {\n        $videoNode && $videoNode.hide();\n    }\n\n    function close() {\n        if ($videoNode) {\n            $videoNode.remove();\n            $videoNode = null;\n        }\n    }\n\n    play();\n\n    return {\n        play: play,\n        stop: stop,\n        close: close\n    };\n};\n\n/**\r\n * webView弹出框\r\n * @param  {[type]} options [description]\r\n * @return {[type]}         [description]\r\n */\nvar webView = function webView(options) {\n    var width = options.width,\n        height = options.height,\n        pageUrl = options.pageUrl,\n        left = options.left,\n        top = options.top;\n\n    function play() {\n        //打开一个网页的时候，需要关闭其他已经打开过的网页\n        Xut.Plugin.WebView.close();\n        Xut.openWebView = false;\n        setTimeout(function () {\n            Xut.Plugin.WebView.open(pageUrl, left, top, height, width, 1);\n            Xut.openWebView = true;\n        }, 500);\n    }\n\n    function close() {\n        Xut.Plugin.WebView.close();\n        Xut.openWebView = false;\n    }\n\n    play();\n\n    return {\n        play: play,\n        stop: close,\n        close: close\n    };\n};\n\n/**\r\n * 安卓phonegap播放器\r\n * @param  {[type]} options [description]\r\n * @return {[type]}         [description]\r\n */\nvar _Media = function _Media(options) {\n\n    var width = void 0;\n    var height = void 0;\n    var left = void 0;\n    var top = void 0;\n    var url = void 0;\n\n    //如果是读库或者妙妙学\n    url = window.MMXCONFIG || window.DUKUCONFIG ? options.url\n    //如果是纯apk模式\n    : options.url.substring(0, options.url.lastIndexOf('.'));\n\n    //如果是安卓平台，视频插件去的分辨率\n    //所以这里要把 可以区尺寸，转成分辨率\n    //读库强制全屏\n    if (window.DUKUCONFIG) {\n        width = resolution.width;\n        height = resolution.height;\n        top = 0;\n        left = 0;\n    } else {\n        //正常的是按照屏幕尺寸的\n        //这是安卓插件问题,按照分辨率计算\n        width = options.width * pixelRatio;\n        height = options.height * pixelRatio;\n        left = options.left * pixelRatio || 0;\n        top = options.top * pixelRatio || 0;\n    }\n\n    var play = function play() {\n        Xut.Plugin.VideoPlayer.play(function () {\n            //成功回调\n        }, function () {\n            //失败回调\n        }, Xut.config.videoPath() + url, 1, left, top, height, width);\n    };\n\n    var close = function close() {\n        Xut.Plugin.VideoPlayer.close();\n    };\n\n    play();\n\n    return {\n        play: play,\n        stop: close,\n        close: close\n    };\n};\n\n/**\r\n *   html5的video播放器\r\n *   API :\r\n *   play();播放\r\n *   stop();    //停止播放并隐藏界面\r\n *   destroy(); //清除元素节点及事件绑定\r\n *  demo :\r\n *  var video = new Video({url:'1.mp4',width:'320',...});\r\n *  video.play();\r\n */\nvar _Video5 = function _Video5(options) {\n\n    var container = options.container || $('body');\n    var url = Xut.config.videoPath() + options.url;\n    var width = options.width;\n    var height = options.height;\n    var top = options.top;\n    var left = options.left;\n    var zIndex = options.zIndex;\n\n    var $videoWrap = $('<div></div>');\n    var $video = $(document.createElement('video'));\n    var video = $video[0];\n\n    //video节点\n    $video.css({\n        width: width,\n        height: height\n    }).attr({\n        'src': url,\n        'controls': 'controls',\n        'autoplay': 'autoplay'\n    });\n\n    //父容器\n    $videoWrap.append($video).css({\n        position: 'absolute',\n        'z-index': -1,\n        top: top,\n        left: left,\n        width: 0,\n        height: 0\n    });\n\n    /**\r\n     * 播放视频\r\n     * @return {[type]} [description]\r\n     */\n    var _paly = function _paly() {\n        $videoWrap.show();\n        video.play();\n    };\n\n    //////////////////////////\n    ///2016.6.23\n    //安卓ios需要直接调用play开始\n    ////////////////////////\n    if (Xut.plat.isIOS || Xut.plat.isAndroid) {\n        _paly();\n    }\n\n    /**\r\n     * 停止\r\n     * @return {[type]} [description]\r\n     */\n    var stop = function stop() {\n\n        video.pause();\n\n        //妙妙学只需要停止\n        if (!window.MMXCONFIG) {\n            //复位视频\n            if (video.duration) {\n                video.currentTime = 0.01;\n            }\n\n            $videoWrap.hide();\n\n            //用于启动视频\n            if (options.startBoot) {\n                options.startBoot();\n                destroy();\n            }\n        }\n    };\n\n    /**\r\n     * 错误\r\n     * @return {[type]} [description]\r\n     */\n    var error = function error() {\n        //用于启动视频\n        if (options.startBoot) {\n            options.startBoot();\n            destroy();\n        }\n    };\n\n    /**\r\n     * 防止播放错误时播放界面闪现\r\n     * @return {[type]} [description]\r\n     */\n    var start = function start() {\n        $videoWrap.css({\n            width: width + 'px',\n            height: height + 'px',\n            zIndex: zIndex\n        });\n\n        //加完后播放视频\n        _paly();\n    };\n\n    /**\r\n     * 销毁\r\n     * @return {[type]} [description]\r\n     */\n    var destroy = function destroy() {\n        video.removeEventListener('ended', stop, false);\n        video.removeEventListener('error', error, false);\n        video.removeEventListener('loadeddata', start, false);\n        video.removeEventListener('webkitendfullscreen', stop, false);\n        $videoWrap.hide().remove();\n    };\n\n    container.append($videoWrap);\n\n    video.addEventListener('ended', stop, false);\n    video.addEventListener('error', error, false);\n    video.addEventListener('loadeddata', start, false);\n    video.addEventListener('webkitendfullscreen', stop, false);\n\n    return {\n        play: _paly,\n        stop: stop,\n        close: destroy\n    };\n};\n\n/**\r\n * https://github.com/videojs/video.js/blob/master/docs/guides/setup.md\r\n * 基于video.js的web播放器,在pc端flash优先\r\n * @param {[type]} options [description]\r\n */\nvar _VideoJS = function _VideoJS(options) {\n    var container = options.container || $('body'),\n        videoId = options.videoId,\n        url = Xut.config.videoPath() + options.url,\n        width = options.width,\n        height = options.height,\n        zIndex = options.zIndex,\n        top = options.top,\n        left = options.left,\n        video,\n        source,\n        player;\n\n    video = document.createElement('video');\n    source = document.createElement('source');\n    source.setAttribute('src', url);\n    source.setAttribute('type', 'video/mp4');\n    video.id = 'video_' + videoId;\n    video.className = \"video-js vjs-sublime-skin\";\n    video.appendChild(source);\n    container.append(video);\n    //指定本地的swf地址取代网络地址\n    videojs.options.flash.swf = \"lib/data/video-js.swf\";\n\n    var clear = function clear() {\n        //结束后清理自己\n        (0, _manager.removeVideo)(options.pageId);\n    };\n\n    //videojs是videojs定义的全局函数\n    player = videojs(video, {\n        //视频引擎顺序,位置排前面的优先级越高\n        \"techOrder\": [\"html5\", \"flash\"],\n        //预加载\n        \"preload\": \"auto\",\n        //是否有控制条\n        \"controls\": true,\n        \"autoplay\": true,\n        \"width\": width,\n        \"height\": height,\n        //播放元素相关设置\n        children: {\n            //暂停时是否显示大大的播放按钮\n            bigPlayButton: false,\n            //是否显示错误提示\n            errorDisplay: false,\n            //是否显示视频快照\n            posterImage: false,\n            //是否显示字幕\n            textTrackDisplay: false,\n            volumeMenuButton: false\n        },\n        //控制条相关设置\n        controlBar: {\n            //是否显示字幕按钮\n            captionsButton: false,\n            chaptersButton: false,\n\n            liveDisplay: false,\n            //是否显示剩余时间\n            remainingTimeDisplay: true,\n            //是否显示子标题按钮\n            subtitlesButton: false,\n            //是否显示回放菜单按钮\n            playbackRateMenuButton: false,\n            //是否显示时间分隔符\"/\"\n            timeDivider: false,\n            //是否显示当前视频的当前时间值\n            currentTimeDisplay: false,\n            //是否显示视频时长\n            durationDisplay: false\n        }\n    }, function () {\n        //可以播放时提升层级，防止闪现\n        this.on('canplay', function () {\n            wrap.style.zIndex = zIndex;\n        });\n\n        //播放完毕后自动关闭\n        this.on('ended', function () {\n            //结束后清理自己\n            clear();\n        });\n\n        this.on('error', function () {\n            clear();\n        });\n\n        //因为没有关闭按钮,又不想自己做,就把全屏变成关闭好了.\n        this.on(\"touchend mouseup\", function (e) {\n            var className = e.target.className.toLowerCase();\n            if (-1 != className.indexOf('vjs-fullscreen-control')) {\n                clear();\n            }\n        });\n    });\n\n    //修正视频样式\n    var wrap = player.el();\n    var videoElement = wrap.children[0];\n    wrap.style.left = left + 'px';\n    wrap.style.top = top + 'px';\n    wrap.style.zIndex = -1;\n\n    return {\n\n        play: function play() {\n            console.log(111);\n        },\n\n        stop: function stop() {\n            player.pause();\n        },\n\n        close: function close() {\n            player.dispose();\n            player = null;\n        }\n    };\n};\n\n//浏览器平台\nif (Xut.plat.isBrowser) {\n    VideoPlayer = _Video5;\n} else {\n    //检测平台\n    if (Xut.plat.isIOS || top.EduStoreClient) {\n        //如果是ibooks模式\n        if (Xut.IBooks.Enabled) {\n            VideoPlayer = _VideoJS;\n        } else {\n            //如果是ios或读酷pc版则使用html5播放\n            VideoPlayer = _Video5;\n        }\n    } else if (Xut.plat.isAndroid) {\n        if (window.MMXCONFIG) {\n            // 安卓妙妙学强制走h5\n            VideoPlayer = _Video5;\n        } else {\n            //android平台\n            VideoPlayer = _Media;\n        }\n    }\n}\n\nvar VideoClass = function () {\n    function VideoClass(options, container) {\n        _classCallCheck(this, VideoClass);\n\n        options.container = container;\n        if ('video' == options.category) {\n            this.video = VideoPlayer(options);\n        } else if ('webpage' == options.category) {\n            this.video = _WebPage(options);\n        } else {\n            console.log('options.category must be video or webPage ');\n        }\n        Xut.View.Toolbar(\"hide\");\n    }\n\n    _createClass(VideoClass, [{\n        key: 'play',\n        value: function play() {\n            //隐藏工具栏\n            Xut.View.Toolbar(\"hide\");\n            this.video.play();\n        }\n    }, {\n        key: 'stop',\n        value: function stop() {\n            //显示工具栏\n            Xut.View.Toolbar(\"show\");\n            this.video.stop();\n        }\n    }, {\n        key: 'close',\n        value: function close() {\n            this.video.close();\n        }\n    }]);\n\n    return VideoClass;\n}();\n\nexports.Video5 = _Video5;\nexports.VideoClass = VideoClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/video/video.js\n ** module id = 30\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.updateAction = updateAction;\n\nexports.default = function (inputPara, contents) {\n    var option = getData(inputPara, contents);\n    var ResourcePath = \"content/widget/gallery/\" + inputPara.id + \"/\";\n    var contentPrefix = inputPara.contentPrefix;\n    var ids = [];\n    var options = {};\n    options.contentPrefix = contentPrefix;\n    options.resourcePath = ResourcePath;\n    options.type = 'seniorSprite';\n\n    for (var i = 0; i < option.spiritList.length; i++) {\n        var spiritList = option.spiritList[i];\n        var id = getId(spiritList, contentPrefix);\n        var framId = spiritList.framId;\n        var parentId = spiritList.parentId;\n        if (_.isObject(inputPara)) {\n            if (parentId != \"0\") {\n                moveContent(contentPrefix, framId, parentId);\n            }\n            spiritObjs[id] = new _sprite2.default(spiritList, options);\n            ids.push(id);\n        } else {\n            console.log(\"inputPara undefine Spirit\");\n        }\n    }\n\n    return {\n        stop: function stop() {\n            ids.forEach(function (key) {\n                spiritObjs[key].stop();\n            });\n        },\n        destroy: function destroy() {\n            ids.forEach(function (key) {\n                spiritObjs[key].destroy();\n                spiritObjs[key] = null;\n                delete spiritObjs[key];\n            });\n        }\n    };\n};\n\nvar _sprite = require('../../plugin/sprite');\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nvar _dom = require('../../../util/dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar spiritObjs = {};\n\n// $(\"body\").on(\"dblclick\",function(){\n//   console.log(spiritObjs)\n// })\n\n/**\r\n * get data\r\n * @param  {[type]} inputPara [description]\r\n * @param  {[type]} contents  [description]\r\n * @return {[type]}           [description]\r\n */\nvar getData = function getData(inputPara, contents) {\n    var option = void 0;\n    var resourcePath = \"content/widget/gallery/\" + inputPara.id + \"/\";\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', resourcePath + 'app.json', false);\n    xhr.send(null);\n    try {\n        option = (0, _dom.parseJSON)(xhr.responseText);\n    } catch (e) {\n        console.log(\"app.json get error:\" + e);\n    }\n    return option;\n};\n\nvar moveContent = function moveContent(contentPrefix, id, parentId) {\n    var obj = $(\"#\" + contentPrefix + id);\n    var parentObj = $(\"#\" + contentPrefix + parentId);\n    var $parent = $(\"#spirit_parent_\" + parentId);\n    if ($parent.length == 0) {\n        parentObj.append(\"<div style='position:absolute; width:100%; height:100%'  id='spirit_parent_\" + parentId + \"'></div>\");\n    }\n    $parent.append(obj);\n};\n\nvar getId = function getId(inputPara, contentPrefix) {\n    var id = '';\n    if (_.isObject(inputPara)) {\n        id = contentPrefix + inputPara.framId;\n    } else {\n        id = inputPara;\n    }\n    return id;\n};\n\nfunction updateAction(id, params) {\n\n    var loop = 1;\n    var obj = void 0;\n    if (params.playerType == \"loop\") {\n        loop = 0;\n    }\n\n    if (obj = spiritObjs[id]) {\n        obj.play(params.actList, loop);\n    } else {\n        console.log('error');\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/page/advsprite.js\n ** module id = 31\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.oneQuery = oneQuery;\nexports.dataQuery = dataQuery;\nexports.dataRemove = dataRemove;\n\nvar _execute = require('../util/execute');\n\nvar statement = {};\n\n'Setting,Parallax,Master,Activity,Content,Video,Image,Action,Animation,Widget,Novel,Season,Chapter'.replace(/[^, ]+/g, function (name) {\n    statement[name] = 'select * FROM ' + name + ' order by _id ASC';\n});\n\n/**\r\n * 查询单一的数据\r\n * @return {[type]} [description]\r\n */\nfunction oneQuery(tableName, callback) {\n    (0, _execute.execute)('select * FROM ' + tableName + ' order by _id ASC', function (successRet, collectError) {\n        callback(successRet, collectError);\n    });\n}\n\n/**\r\n * 查询总数据\r\n */\nfunction dataQuery(callback) {\n    //ibook模式，数据库外部注入的\n    if (Xut.IBooks.CONFIG) {\n        callback(Xut.IBooks.CONFIG.data);\n    } else {\n        //查询所有数据\n        (0, _execute.execute)(statement, function (successRet, collectError) {\n            callback(successRet, collectError);\n        });\n    }\n}\n\n/**\r\n * 删除数据\r\n * @type {[type]}\r\n */\nfunction dataRemove(tableName, id, success, fail) {\n    var sql = 'delete from ' + tableName + ' where _id = ' + id;\n    //查询所有数据\n    (0, _execute.execute)(sql, function (success, failure) {\n        if (success) {\n            //成功回调\n            success();\n        } else if (failure) {\n            //失败回调\n            fail();\n        }\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/query.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.promptMessage = promptMessage;\nexports.suspendHandles = suspendHandles;\n\nvar _index = require('./command/index');\n\nvar _notice = require('./util/notice');\n\nvar _index2 = require('./toolbar/navbar/index');\n\nvar _manager = require('./component/audio/manager');\n\nvar _manager2 = require('./component/video/manager');\n\n/**\r\n * [checkWidgets description]\r\n * @param  {[type]} context   [description]\r\n * @param  {[type]} pageIndex [description]\r\n * @return {[type]}           [description]\r\n */\nvar checkWidgets = function checkWidgets(context, pageIndex) {\n    return (0, _index.recovery)();\n};\n\n/**\r\n * 检测媒体的播放状态\r\n *   1 视频\r\n *   2 音频\r\n * @param  {[type]} pageId [description]\r\n * @return {[type]}        [description]\r\n */\n/**\r\n * 热点动作控制器模块\r\n * 1 所有content热点停止\r\n * 2 所有content热点销毁\r\n * 3 app应用销毁\r\n */\nvar checkMedia = function checkMedia(pageId) {\n    //音频 视频 是否有处理\n    var flag = false;\n\n    if ((0, _manager.clearAudio)(pageId)) {\n        flag = true;\n    }\n\n    if ((0, _manager2.clearVideo)()) {\n        flag = true;\n    }\n\n    return flag;\n};\n\n/**\r\n * 消息提示框\r\n * @param  {[type]} info [description]\r\n * @return {[type]}      [description]\r\n */\nfunction promptMessage(info) {\n    (0, _notice.show)({\n        hindex: Xut.Presentation.GetPageIndex(),\n        content: info || \"再按一次将退回到主页\",\n        time: 3000\n    });\n}\n\n/**\r\n * 停止所有热点动作,并返回状态\r\n * 1 content\r\n * 2 widget\r\n * 动画,视频,音频...........................\r\n * 增加场景模式判断\r\n */\nfunction suspendHandles(context, pageIndex, skipMedia) {\n\n    //是否存在运行中\n    var stateRun = false;\n\n    //处理音频\n    if (checkMedia(skipMedia)) {\n        stateRun = true;\n    }\n\n    //正在运行的热点\n    ///content,Action', 'Widget', 'ShowNote'\n    if (checkWidgets(context, pageIndex)) {\n        stateRun = true;\n    }\n\n    //处理导航\n    (0, _index2.close)(function () {\n        stateRun = true;\n    });\n\n    return stateRun;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/global-stop.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (options) {\n\n    //获取默认参数\n    var parameter = initDefaultValues(options || {});\n\n    //设置缓存\n    setDataToStorage(parameter);\n\n    //应用脚本注入\n    checkInjectScript();\n\n    //检测下scenarioId的正确性\n    //scenarioId = 1 找不到chapter数据\n    //通过sectionRelated递归检测下一条数据\n    var scenarioId, seasondata, i;\n    for (i = 0; i < Xut.data.Season.length; i++) {\n        seasondata = Xut.data.Season.item(i);\n        if (Xut.data.query('sectionRelated', seasondata._id)) {\n            scenarioId = seasondata._id;\n            break;\n        }\n    }\n\n    //加载新的场景\n    Xut.View.LoadScenario({\n        'main': true, //主场景入口\n        'scenarioId': scenarioId,\n        'pageIndex': parameter.pageIndex,\n        'history': parameter.history\n    });\n};\n\nvar _index = require('../util/index');\n\nvar _index2 = require('../config/index');\n\n/**\r\n * 设置缓存\r\n * @param {[type]} parameter [description]\r\n */\nvar setDataToStorage = function setDataToStorage(parameter) {\n    _index2.config.pageIndex = parameter.pageIndex;\n    _index2.config.novelId = parameter.novelId;\n    (0, _index._set)({\n        \"pageIndex\": parameter.pageIndex,\n        \"novelId\": parameter.novelId\n    });\n};\n\n/**\r\n * 初始化值\r\n * @param {[type]} options [description]\r\n */\nvar initDefaultValues = function initDefaultValues(options) {\n    var pageFlip = options.pageFlip;\n    //配置全局翻页模式\n    //pageflip可以为0\n    //兼容pageFlip错误,强制转化成数字类型\n    if (pageFlip !== undefined) {\n        _index2.config.pageFlip = (0, _index.toEmpty)(pageFlip);\n    }\n    return {\n        'novelId': (0, _index.toEmpty)(options.novelId),\n        'pageIndex': (0, _index.toEmpty)(options.pageIndex),\n        'history': options.history\n    };\n};\n\n/**\r\n * 检测脚本注入\r\n * @return {[type]} [description]\r\n */\nvar checkInjectScript = function checkInjectScript() {\n    var preCode,\n        novels = Xut.data.query('Novel');\n    if (preCode = novels.preCode) {\n        (0, _index.injectScript)(preCode, 'novelpre脚本');\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/scene.js\n ** module id = 34\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getPlugVideoState = getPlugVideoState;\nexports.closePlugVideo = closePlugVideo;\nexports.plugVideo = plugVideo;\nexports.html5Video = html5Video;\n\nvar _video = require('../component/video/video');\n\nvar preloadVideo = {\n\n    //播放状态\n    state: false,\n\n    //地址\n    path: window.DUKUCONFIG ? window.DUKUCONFIG.path + \"duku.mp4\" : 'android.resource://#packagename#/raw/duku',\n\n    //加载视频\n    load: function load() {\n        // if (window.localStorage.getItem(\"videoPlayer\") == 'error') {\n        //       alert(\"error\")\n        //     return preloadVideo.launchApp();\n        // }\n        this.play();\n        this.state = true;\n    },\n\n\n    //播放视频\n    play: function play() {\n        //延时应用加载\n        Xut.Application.delayAppRun();\n        Xut.Plugin.VideoPlayer.play(function () {\n            preloadVideo.launchApp();\n        }, function () {\n            //捕获出错,下次不进入了,,暂无ID号\n            // window.localStorage.setItem(\"videoPlayer\", \"error\")\n            preloadVideo.launchApp();\n        }, preloadVideo.path, 1, 0, 0, window.innerHeight, window.innerWidth);\n    },\n\n\n    //清理视频\n    closeVideo: function closeVideo() {\n        Xut.Plugin.VideoPlayer.close(function () {\n            preloadVideo.launchApp();\n        });\n    },\n\n\n    //加载应用\n    launchApp: function launchApp() {\n        this.state = false;\n        Xut.Application.LaunchApp();\n    }\n};\n\n/**\r\n * 获取插件视频状态\r\n */\nfunction getPlugVideoState() {\n    return preloadVideo.state;\n}\n\n/**\r\n * 关闭插件视频\r\n */\nfunction closePlugVideo() {\n    preloadVideo.closeVideo();\n}\n\n/**\r\n * 播放视频插件\r\n */\nfunction plugVideo() {\n    preloadVideo.load();\n}\n\n/**\r\n *  创建播放器\r\n *  IOS，PC端执行\r\n */\nfunction html5Video() {\n    //延时应用开始\n    Xut.Application.delayAppRun();\n    (0, _video.Video5)({\n        url: 'duku.mp4',\n        startBoot: function startBoot() {\n            Xut.Application.LaunchApp();\n        }\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/video.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 抽象管理接口\r\n * @return {[type]} [description]\r\n */\n\nvar Abstract = exports.Abstract = function () {\n    function Abstract() {\n        _classCallCheck(this, Abstract);\n    }\n\n    _createClass(Abstract, [{\n        key: 'abstractCreateCollection',\n\n\n        /**\r\n         * 创建页面合集\r\n         * @return {[type]} [description]\r\n         */\n        value: function abstractCreateCollection() {\n            this.Collections = {};\n        }\n\n        /**\r\n         * 增加合集管理\r\n         */\n\n    }, {\n        key: 'abstractAddCollection',\n        value: function abstractAddCollection(pageIndex, pageObj) {\n            this.Collections[pageIndex] = pageObj;\n        }\n\n        /**\r\n         * 得到页面合集\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractGetCollection',\n        value: function abstractGetCollection() {\n            return this.Collections;\n        }\n\n        /**\r\n         * 删除合集管理\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractRemoveCollection',\n        value: function abstractRemoveCollection(pageIndex) {\n            delete this.Collections[pageIndex];\n        }\n\n        /**\r\n         * 销毁合集\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractDestroyCollection',\n        value: function abstractDestroyCollection() {\n            var k,\n                Collections = this.Collections;\n            for (k in Collections) {\n                Collections[k].baseDestroy();\n            }\n            this.Collections = null;\n        }\n\n        /**\r\n         * 找到页面对象\r\n         * 1.页面直接pageIndex索引\r\n         * 2.母版通过母版Id索引\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractGetPageObj',\n        value: function abstractGetPageObj(pageIndex, pageType) {\n            pageType = pageType || this.pageType;\n            //模板传递的可能不是页码\n            if (pageType === 'master') {\n                if (!/-/.test(pageIndex)) {\n                    //如果不是母版ID，只是页码\n                    pageIndex = this.conversionMasterId(pageIndex); //转化成母版id\n                }\n            }\n            return this.Collections[pageIndex];\n        }\n\n        /**\r\n         * 合并处理\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractAssistPocess',\n        value: function abstractAssistPocess(pageIndex, callback) {\n            var pageObj;\n            if (pageObj = this.abstractGetPageObj(pageIndex, this.pageType)) {\n                if (callback) {\n                    callback(pageObj);\n                } else {\n                    return pageObj;\n                }\n            }\n        }\n\n        /**\r\n         * 获取页面容器ID\r\n         * chpaterID\r\n         * masterID\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'abstractGetPageId',\n        value: function abstractGetPageId(pageIndex, pageType) {\n            var key = pageType === 'page' ? '_id' : 'pptMaster';\n            return this.abstractGetPageData(pageIndex, key, pageType);\n        }\n\n        /**\r\n         * 获取页面数据\r\n         */\n\n    }, {\n        key: 'abstractGetPageData',\n        value: function abstractGetPageData(pageIndex, key, pageType) {\n            var pageObj;\n            //如果传递key是 pageType\n            if (!pageType && key == 'page' || key == 'master') {\n                pageType = key;\n                key = null;\n            }\n            if (pageObj = this.abstractGetPageObj(pageIndex, pageType)) {\n                return key ? pageObj.chapterDas[key] : pageObj.chapterDas;\n            }\n        }\n\n        /**\r\n         * 得到页面的nodes数据\r\n         * @param  {[type]} pageIndex [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: 'abstractGetPageNode',\n        value: function abstractGetPageNode(pageIndex, pageType) {\n            return this.abstractGetPageData(pageIndex, 'nodes', pageType);\n        }\n\n        /**\r\n         * 执行辅助对象事件\r\n         * @param  {[type]} activityId  [description]\r\n         * @param  {[type]} currIndex   [description]\r\n         * @param  {[type]} outCallBack [description]\r\n         * @param  {[type]} actionName  [description]\r\n         * @return {[type]}             [description]\r\n         */\n\n    }, {\n        key: 'abstractAssistAppoint',\n        value: function abstractAssistAppoint(activityId, currIndex, outCallBack, actionName) {\n            var pageObj;\n            if (pageObj = this.abstractGetPageObj(currIndex)) {\n                return pageObj.baseAssistRun(activityId, outCallBack, actionName);\n            }\n        }\n    }]);\n\n    return Abstract;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/abstract.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.offsetPage = offsetPage;\nexports.conversionPageOpts = conversionPageOpts;\nexports.calculateDistance = calculateDistance;\nexports.initPointer = initPointer;\nexports.conversionCid = conversionCid;\nexports.conversionPids = conversionPids;\nexports.checkMasterCreate = checkMasterCreate;\n\nvar _cache = require('../../database/cache');\n\nvar _parser = require('../parser');\n\n/**\r\n * 判断是否能整除2\r\n * @param  {[type]} num [description]\r\n * @return {[type]}     [description]\r\n */\nfunction offsetPage(num) {\n    return num % 2 == 0 ? 'left' : 'right';\n}\n\n//如果是场景加载，转化页码数\n//转化按0开始\n//pageIndex 页码\n//visiblePid 可见页面chpaterId\nfunction conversionPageOpts(pageIndex, visiblePid) {\n    var sectionRang;\n    //转化可视区域值viewPageIndex\n    if (this.options.multiScenario) {\n        sectionRang = this.options.sectionRang;\n        //如果传入的是数据\n        if (!visiblePid && _.isArray(pageIndex)) {\n            pageIndex.forEach(function (ele, index) {\n                pageIndex.splice(index, 1, ele - sectionRang.start);\n            });\n            return pageIndex;\n        }\n        pageIndex -= sectionRang.start;\n        visiblePid += sectionRang.start;\n    } else {\n        //pageIndex是数组，并且realPage为空\n        if (_.isArray(pageIndex)) {\n            return pageIndex;\n        }\n    }\n\n    return {\n        'pageIndex': pageIndex,\n        'visiblePid': visiblePid\n    };\n}\n\n/**\r\n * 计算翻页距离\r\n */\nfunction calculateDistance(action, distance, direction) {\n    var leftOffset = void 0;\n    var currOffset = void 0;\n    var rightOffset = void 0;\n\n    //保持缩放比,计算缩放比情况下的转化\n    var calculateContainer = Xut.config.proportion.calculateContainer();\n    var containerWidth = calculateContainer.width;\n\n    switch (direction) {\n        //前翻\n        case 'prev':\n            switch (action) {\n                case 'flipMove':\n                    leftOffset = distance - containerWidth;\n                    currOffset = distance;\n                    rightOffset = distance + containerWidth;\n                    break;\n                case 'flipRebound':\n                    leftOffset = -containerWidth;\n                    currOffset = distance;\n                    rightOffset = containerWidth;\n                    break;\n                case 'flipOver':\n                    leftOffset = 0;\n                    currOffset = containerWidth;\n                    rightOffset = 2 * containerWidth;\n                    break;\n            }\n            break;\n        //后翻\n        case 'next':\n            switch (action) {\n                case 'flipMove':\n                    leftOffset = distance - containerWidth;\n                    rightOffset = distance + containerWidth;\n                    currOffset = distance;\n                    break;\n                case 'flipRebound':\n                    leftOffset = -containerWidth;\n                    rightOffset = containerWidth;\n                    currOffset = distance;\n                    break;\n                case 'flipOver':\n                    leftOffset = -2 * containerWidth;\n                    rightOffset = distance;\n                    currOffset = -containerWidth;\n                    break;\n            }\n            break;\n    }\n\n    return [leftOffset, currOffset, rightOffset];\n}\n\n/**\r\n * 计算初始化页码\r\n */\nfunction initPointer(targetIndex, pageTotal, multiplePages) {\n\n    var leftscope = 0,\n        initPointer = {},\n        createPointer = [];\n\n    function setValue(index) {\n        if (index.leftIndex !== undefined) {\n            initPointer.leftIndex = index.leftIndex;\n            createPointer.push(index.leftIndex);\n        }\n        if (index.currIndex !== undefined) {\n            initPointer.currIndex = index.currIndex;\n            createPointer.push(index.currIndex);\n        }\n        if (index.rightIndex !== undefined) {\n            initPointer.rightIndex = index.rightIndex;\n            createPointer.push(index.rightIndex);\n        }\n    }\n\n    //如果只有一页 or  非线性,只创建一个页面\n    if (pageTotal === 1 || !multiplePages) {\n        setValue({\n            'currIndex': targetIndex\n        });\n    } else {\n        //多页情况\n        if (targetIndex === leftscope) {\n            //首页\n            setValue({\n                'currIndex': targetIndex,\n                'rightIndex': targetIndex + 1\n            });\n        } else if (targetIndex === pageTotal - 1) {\n            //尾页\n            setValue({\n                'currIndex': targetIndex,\n                'leftIndex': targetIndex - 1\n            });\n        } else {\n            //中间页\n            setValue({\n                'currIndex': targetIndex,\n                'leftIndex': targetIndex - 1,\n                'rightIndex': targetIndex + 1\n            });\n        }\n    }\n\n    return {\n        createPointer: createPointer,\n        initPointer: initPointer\n    };\n}\n\n//保证可视页面第一个分解\n//createPage 需要创建的页面 [0,1,2]\n//visualPage 可视区页面       [1]\nfunction conversionCid(createPage, visualPage) {\n\n    var indexOf, start, less;\n\n    //如果第一个不是可视区域\n    //切换位置\n    //加快创建速度\n    if (createPage[0] !== visualPage) {\n        indexOf = createPage.indexOf(visualPage);\n        less = createPage.splice(indexOf, 1);\n        createPage = less.concat(createPage);\n    }\n\n    //场景加载模式,计算正确的chapter顺序\n    //多场景的模式chpater分段后\n    //叠加起始段落\n    if (this.options.multiScenario) {\n        //需要提前解析数据库的排列方式\n        //chpater的开始位置\n        start = this.options.sectionRang.start;\n        //拼接位置\n        createPage.forEach(function (page, index) {\n            createPage.splice(index, 1, page + start);\n        });\n    }\n\n    // [0,1,2] => [73,74,75]\n    return createPage;\n}\n\n/**\r\n * 页码转化成相对应的chpater表数据\r\n * @param  {[type]} createPage [description]\r\n * @return {[type]}            [description]\r\n */\nfunction conversionPids(createPage) {\n    return (0, _parser.query)('chapter', createPage);\n}\n\n/**\r\n * 检测是否构建母板模块处理\r\n * @return {[type]} [description]\r\n */\nfunction checkMasterCreate() {\n    var table = (0, _cache.errorTable)();\n    //如果没有Master数据,直接过滤\n    if (-1 !== table.indexOf('Master') || !Xut.data['Master'] || !Xut.data['Master'].length) {\n        return false;\n    }\n    return true;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/dispatch/depend.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.delegateHooks = undefined;\n\nvar _index = require('../command/index');\n\n//委托事件处理钩子\nvar delegateHooks = exports.delegateHooks = {\n\n    /**\r\n     * 超连接,跳转\r\n     * svg内嵌跳转标记处理\r\n     */\n    'data-xxtlink': function dataXxtlink(target, attribute, rootNode, pageIndex) {\n        try {\n            var para = attribute.split('-');\n            if (para.length > 1) {\n                //如果有多个就是多场景的组合\n                Xut.View.GotoSlide(para[0], para[1]);\n            } else {\n                Xut.View.GotoSlide(para[0]);\n            }\n        } catch (err) {\n            console.log('跳转错误');\n        }\n    },\n\n\n    /**\r\n     * Action', 'Widget', 'Video', 'ShowNote', 'SubDoc'委托\r\n     */\n    'data-delegate': function dataDelegate(target, attribute, rootNode, pageIndex) {\n        _index.trigger.apply(null, arguments);\n    },\n\n\n    /**\r\n     * 有效,可滑动\r\n     */\n    'data-flow': function dataFlow() {},\n\n\n    /**\r\n     * 如果是canvas节点\r\n     */\n    'data-canvas': function dataCanvas(cur) {\n        // alert(1)\n    }\n}; //调度器\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/hooks.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.query = query;\n/**\r\n * 根据指定的chpaterId解析\r\n * @return {[type]} [description]\r\n */\nfunction scenarioChapter(chapterId) {\n    var chapterSection = Xut.data.chapterSection;\n    var rang = chapterSection['seasonId->' + chapterId];\n    return rang;\n}\n\n/**\r\n * 1 解析chapter页面数据\r\n * 2 解析对应的Activity数据\r\n * 3 解析出自动widget数据结构\r\n * @param  {[type]}   data     [description]\r\n * @param  {Function} callback [description]\r\n * @return {[type]}            [description]\r\n */\nfunction getPageData(data, callback) {\n    var parsePointer = data['pageIndex'],\n        pageData = data['pageData'];\n\n    if (pageData) {\n        getActivity(pageData, callback);\n    } else {\n        //解析章节数据\n        parseChapter(parsePointer, function (pageData) {\n            //生成chapter数据\n            getActivity(pageData.length ? pageData[0] : pageData, callback);\n        });\n    }\n};\n\n/**\r\n * 解析关联的Activity表数据\r\n * @param  {[type]}   pageData [description]\r\n * @param  {Function} callback [description]\r\n * @return {[type]}            [description]\r\n */\nfunction getActivity(pageData, callback) {\n    parseActivity(pageData, function (activitys, autoData) {\n        callback(pageData, activitys, autoData);\n    });\n}\n\n/**\r\n * 递归分解\r\n * chpater直接对应页面的ID编码，直接去下标即可\r\n * waitCreatePointer     需要分解的页面\r\n */\nfunction parseChapter(waitCreatePointer) {\n    var chapters = [],\n        chapter,\n        dataChpater = Xut.data.Chapter,\n        points = waitCreatePointer.length,\n        key;\n\n    while (points--) {\n        key = waitCreatePointer[points];\n        if (chapter = dataChpater.item(key)) {\n            chapters.unshift(chapter);\n        }\n    }\n\n    return chapters;\n};\n\n/**\r\n * 解析视觉差的数据\r\n * @param  {[type]}   data     [description]\r\n * @param  {Function} callback [description]\r\n * @return {[type]}            [description]\r\n */\nfunction getMasterData(data, callback) {\n    var pptMaster = data['pptMaster'];\n    var masterDas = Xut.data.query('Master', pptMaster);\n    parseActivity(masterDas, function (activitys, autoData) {\n        callback(masterDas, activitys, autoData);\n    });\n}\n\n/**\r\n *  解析activity表的数据\r\n * chpaters = {\r\n *     pageIndex-12: Object\r\n *     pageIndex-13: Object\r\n *     pageIndex-14: Object\r\n *  }\r\n **/\nfunction parseActivity(data, callback) {\n    if (!data) callback();\n    var activitys = [];\n    var chapterId = data['_id'];\n\n    Xut.data.query('Activity', chapterId, 'chapterId', function (item) {\n        activitys.push(item);\n    });\n\n    //混入文本提示框\n    mixShowNote(data, activitys);\n\n    //自动运行的数据\n    //解析出每一页自动运行的 Widget,Action,Video数据\n    var autoData = filterAutoRun(activitys);\n\n    callback(activitys, autoData);\n};\n\n/**\r\n * 混入shownote\r\n * 组合showNote数据,弹出信息框,也看作一个热点\r\n * shownote是chater的信息，混入到activity列表中当作每页的对象处理\r\n * @return {[type]} [description]\r\n */\nfunction mixShowNote(onechapter, activitydata) {\n    if (onechapter.note) {\n        activitydata.push(onechapter);\n    }\n};\n\n/**\r\n * 解析出页面自动运行的数据\r\n * @param  {[type]} activitys [description]\r\n * @return {[type]}           [description]\r\n */\nfunction filterAutoRun(activitys) {\n\n    var collectAutoBuffers, key, id, key, sub;\n\n    if (!activitys || !activitys.length) return;\n\n    collectAutoBuffers = []; //自动热点\n\n    activitys.forEach(function (target, b) {\n        //如果是自动播放,并且满足自定义条件\n        //并且不是content类型\n        if (target.autoPlay && target.actType !== 'Content') {\n            //增加note提示信息数据\n            id = target['_id'];\n            key = target.actType ? target.actType + \"_\" + id : 'showNote_' + id;\n            sub = {\n                'id': id,\n                'type': target.actType,\n                'animation': target.animation,\n                'key': key,\n                'category': target.category,\n                'autoPlay': target.autoPlay\n            };\n            collectAutoBuffers.push(sub);\n        }\n    });\n\n    if (collectAutoBuffers.length) {\n        return collectAutoBuffers;\n    }\n}\n\n/**\r\n * 查询接口\r\n * @param  {[type]}   tableName [description]\r\n * @param  {[type]}   options   [description]\r\n * @param  {Function} callback  [description]\r\n * @return {[type]}             [description]\r\n */\nfunction query(tableName, options, callback) {\n    switch (tableName) {\n        case 'page':\n            //得到页面关联的数据\n            return getPageData(options, callback);\n        case 'master':\n            //得到母版关联的数据\n            return getMasterData(options, callback);\n        case 'chapter':\n            //得到chapter表数据\n            return parseChapter(options);\n        case 'scenarioChapter':\n            return scenarioChapter(options);\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/parser.js\n ** module id = 39\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.create = create;\nexports.destroy = destroy;\n\nvar _event = require('../../component/activity/event/event');\n\n/**\r\n * 获取对应的activity对象\r\n * @param  {[type]}   activityId [description]\r\n * @param  {Function} callback   [description]\r\n * @return {[type]}              [description]\r\n */\nvar getActivity = function getActivity(activityId, callback) {\n    var activity;\n    if (activity = this._abActivitys) {\n        _.each(activity.get(), function (contentObj, index) {\n            if (activityId == contentObj.activityId) {\n                callback(contentObj);\n                return;\n            }\n        }, this);\n    }\n};\n\n/**\r\n * 制作一个处理绑定函数\r\n * @param  {[type]} pagebase [description]\r\n * @return {[type]}          [description]\r\n */\n/**\r\n * 多事件模块\r\n */\nvar makeRunBinding = function makeRunBinding(pagebase) {\n    var registers = this.registers;\n    var shift;\n    return function () {\n        var activityId = registers[0];\n        getActivity.call(pagebase, activityId, function (activityObj) {\n            activityObj.runEffects(function () {\n                shift = registers.shift();\n                registers.push(shift);\n            });\n        });\n    };\n};\n\n/**\r\n * 多事件处理\r\n * 每次通过同一个热点,触发不同的对象操作\r\n * @return {[type]} [description]\r\n */\nvar combineEvents = function combineEvents(pagebase, eventRelated) {\n\n    var contentObj, element, eventName;\n\n    //多条activty数据,一个对象上多事件\n    _.each(eventRelated, function (edata) {\n\n        _.each(edata, function (scope) {\n\n            contentObj = pagebase.baseGetContentObject(scope.eventContentId);\n\n            if (!contentObj) {\n                Xut.log('error', 'pagebase.js第' + pagebase.pageIndex + '页多事件处理出错!!!!');\n                return;\n            }\n\n            element = contentObj.$contentProcess;\n            eventName = (0, _event.conversionEventType)(scope.eventType);\n\n            //制动运行动作\n            scope.runEffects = makeRunBinding.call(scope, pagebase);\n\n            //销毁方法\n            scope.destroy = function () {\n                (0, _event.destroyEvents)(scope, eventName);\n                scope.registers = null;\n                scope.runEffects = null;\n            };\n\n            //事件绑定\n            (0, _event.bindEvents)({\n                'eventRun': function eventRun() {\n                    scope.runEffects();\n                },\n                'eventHandler': function eventHandler(eventReference, _eventHandler) {\n                    scope.eventReference = eventReference;\n                    scope.eventHandler = _eventHandler;\n                },\n                'eventContext': element,\n                'eventName': eventName,\n                'parameter': scope.dragdropPara,\n                'target': null,\n                'domMode': true\n            });\n        });\n\n        //暴露引用\n        pagebase.listenerHooks.registerEvents = eventRelated;\n    });\n};\n\nfunction create(pagebase, eventRelated) {\n    combineEvents(pagebase, eventRelated);\n}\n\nfunction destroy(pagebase) {\n    var registerEvents;\n    if (registerEvents = pagebase.listenerHooks.registerEvents) {\n        _.each(registerEvents, function (edata) {\n            _.each(edata, function (obj) {\n                obj.destroy && obj.destroy();\n            });\n        });\n    }\n    pagebase.listenerHooks.registerEvents = null;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/depend/multievent.js\n ** module id = 40\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Pagebase = undefined;\n\nvar _initstate = require('./internal/initstate');\n\nvar _initstate2 = _interopRequireDefault(_initstate);\n\nvar _threadApi = require('./internal/thread-api');\n\nvar _threadApi2 = _interopRequireDefault(_threadApi);\n\nvar _dataApi = require('./internal/data-api');\n\nvar _dataApi2 = _interopRequireDefault(_dataApi);\n\nvar _destroy = require('./internal/destroy');\n\nvar _destroy2 = _interopRequireDefault(_destroy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*********************************************************************\r\n                                                                                                                                                           *                 构建页面对象\r\n                                                                                                                                                           *             实现目标：\r\n                                                                                                                                                           *                快速翻页\r\n                                                                                                                                                           *                最快中断任务\r\n                                                                                                                                                           *                提高优先级\r\n                                                                                                                                                           *\r\n                                                                                                                                                           *             1 构建四个大任务，每个大人物附属一堆小任务\r\n                                                                                                                                                           *             2 每次触发一个新的任务，都会去检测是否允许创建的条件\r\n                                                                                                                                                           *\r\n                                                                                                                                                           *  2014.11.18\r\n                                                                                                                                                           *  新增canvan模式\r\n                                                                                                                                                           *    contentMode 分为  0 或者 1\r\n                                                                                                                                                           *    0 是dom模式\r\n                                                                                                                                                           *    1 是canvas模式\r\n                                                                                                                                                           *    以后如果其余的在增加\r\n                                                                                                                                                           *    针对页面chapter中的parameter写入 contentMode   值为 1\r\n                                                                                                                                                           *    如果是canvas模式的时候，同时也是能够存在dom模式是\r\n                                                                                                                                                           *\r\n                                                                                                                                                           *                                                         *\r\n                                                                                                                                                           **********************************************************************/\n\nvar Pagebase = exports.Pagebase = function Pagebase(options) {\n    _classCallCheck(this, Pagebase);\n\n    this.initState(options);\n};\n\nvar baseProto = Pagebase.prototype;\n\n(0, _initstate2.default)(baseProto);\n(0, _threadApi2.default)(baseProto);\n(0, _dataApi2.default)(baseProto);\n(0, _destroy2.default)(baseProto);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/pagebase.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseContentDas = parseContentDas;\n/**\r\n * 解析序列中需要的数据\r\n * @param  {[type]}   contentIds [description]\r\n * @param  {Function} callback   [description]\r\n * @return {[type]}              [description]\r\n */\nfunction parseContentDas(contentIds, callback) {\n    var data,\n        temp = [];\n    contentIds.forEach(function (contentId, index) {\n        data = Xut.data.query('Content', contentId);\n        temp.unshift(data);\n        callback && callback(data, contentId);\n    });\n    return temp;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/parsecontent.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.home = home;\nexports.scene = scene;\nexports.nav = nav;\n\nvar _index = require('../config/index');\n\nvar round = Math.round; /**\r\n                         * 布局文件\r\n                         * 1 控制条\r\n                         * 2 导航栏\r\n                         * @param  {[type]} config [description]\r\n                         * @return {[type]}        [description]\r\n                         */\n\nvar ratio = 6;\nvar isIOS = Xut.plat.isIOS;\nvar TOP = isIOS ? 20 : 0;\n\nvar getOptions = function getOptions() {\n    var iconHeight = _index.config.iconHeight;\n    var proportion = _index.config.proportion;\n    var calculate = proportion.calculateContainer();\n\n    //横版模式\n    var isHorizontal = _index.config.layoutMode == 'horizontal';\n\n    proportion = isHorizontal ? proportion.width : proportion.height;\n    iconHeight = isIOS ? iconHeight : round(proportion * iconHeight);\n\n    return {\n        isHorizontal: isHorizontal,\n        iconHeight: iconHeight,\n        sWidth: calculate.width,\n        sHeight: calculate.height,\n        sTop: calculate.top,\n        sLeft: calculate.left,\n        calculate: calculate,\n        proportion: proportion\n    };\n};\n\n/**\r\n * 首页布局\r\n * @return {[type]} [description]\r\n */\nfunction home() {\n\n    var options = getOptions();\n    var sWidth = options.sWidth;\n    var sHeight = options.sHeight;\n    var iconHeight = options.iconHeight;\n    var calculate = options.calculate;\n    var isHorizontal = options.isHorizontal;\n\n    var html = '';\n    var template = void 0;\n    var navBar = void 0;\n    var container = void 0;\n\n    //导航\n    html = '<div id=\"navBar\" class=\"xut-navBar\" style=\"' + 'width:{{width}};' + 'height:{{height}}px;' + 'top:{{top}};' + 'left:{{left}};' + 'bottom:{{bottom}};' + 'background-color:white;' + 'border-top:1px solid rgba(0,0,0,0.1);' + 'overflow:{{overflow}};' + '\"></div>';\n\n    navBar = _.template(html, {\n        width: isHorizontal ? '100%' : Math.min(sWidth, sHeight) / (isIOS ? 8 : 3) + 'px',\n        height: isHorizontal ? round(sHeight / ratio) : round((sHeight - iconHeight - TOP) * 0.96),\n        top: isHorizontal ? '' : iconHeight + TOP + 2 + 'px',\n        left: isHorizontal ? '' : iconHeight + 'px',\n        overflow: isHorizontal ? 'hidden' : 'visible',\n        bottom: isHorizontal ? '4px' : ''\n    });\n\n    //主体\n    html = '<div id=\"sceneHome\" class=\"xut-chapter\" style=\"' + 'width:{{width}}px;' + 'height:{{height}}px;' + 'top:{{top}}px;' + 'left:{{left}}px;' + 'overflow:hidden;' + 'z-index:{{index}};' + 'overflow:{{overflow}};\" >' + ' <div id=\"controlBar\" class=\"xut-controlBar hide\"></div>' +\n    //页面节点\n    ' <ul id=\"pageContainer\" class=\"xut-flip\"></ul>' +\n    //视觉差包装容器\n    ' <ul id=\"masterContainer\" class=\"xut-master xut-flip\"></ul>' +\n    //滑动菜单\n    ' {{navBar}}' +\n    //消息提示框\n    ' <div id=\"toolTip\"></div>' + '</div>';\n\n    return _.template(html, {\n        width: _index.config.viewSize.width,\n        height: _index.config.viewSize.height,\n        top: calculate.top,\n        left: calculate.left,\n        index: Xut.sceneController.createIndex(),\n        overflow: _index.config.scrollPaintingMode ? 'visible' : 'hidden',\n        navBar: navBar\n    });\n}\n\n/**\r\n * [scene 创建场景]\r\n * @param  {[type]} options [description]\r\n * @return {[type]}         [description]\r\n */\nfunction scene(id) {\n\n    var options = getOptions();\n\n    var sWidth = options.sWidth;\n    var sHeight = options.sHeight;\n    var calculate = options.calculate;\n\n    var html = '<div id=\"{{id}}\" style=\"' + 'width:{{width}}px;' + 'height:{{height}}px;' + 'top:{{top}}px;' + 'left:{{left}}px;' + 'position:absolute;' + 'z-index:{{zIndex}};' + 'overflow:{{overflow}};' + '\">' + ' <ul id=\"{{pageId}}\" class=\"xut-flip\" style=\"z-index:{{zIndexPage}}\"></ul>' + ' <ul id=\"{{masterId}}\" class=\"xut-flip\" style=\"z-index:{{zIndexMaster}}\"></ul>' + '</div>';\n\n    return _.template(html, {\n        id: 'scenario-' + id,\n        width: _index.config.viewSize.width,\n        height: _index.config.viewSize.height,\n        top: calculate.top,\n        left: calculate.left,\n        zIndex: Xut.sceneController.createIndex(),\n        overflow: _index.config.scrollPaintingMode ? 'visible' : 'hidden',\n        pageId: 'scenarioPage-' + id,\n        zIndexPage: 2,\n        masterId: 'scenarioMaster-' + id,\n        zIndexMaster: 1\n    });\n}\n\nvar getNavOptions = function getNavOptions() {\n\n    //导航菜单宽高\n    var navHeight = void 0,\n        navWidth = void 0;\n    var options = getOptions();\n    var sWidth = options.sWidth;\n    var sHeight = options.sHeight;\n    var proportion = options.proportion;\n    var isHorizontal = options.isHorizontal;\n\n    //横版模版\n    if (isHorizontal) {\n        navHeight = round(sHeight / ratio);\n    } else {\n        navWidth = Math.min(sWidth, sHeight) / (isIOS ? 8 : 3);\n        navHeight = round((sHeight - options.iconHeight - TOP) * 0.96);\n    }\n\n    return {\n        sWidth: sWidth,\n        sHeight: sHeight,\n        navHeight: navHeight,\n        navWidth: navWidth,\n        proportion: proportion\n    };\n};\n\n//获得css配置数据\nvar getWrapper = function getWrapper(seasonlist) {\n\n    var width = void 0,\n        height = void 0,\n        blank = void 0,\n        scroller = void 0,\n        contentstyle = void 0,\n        containerstyle = void 0,\n        overwidth = void 0,\n        overHeigth = void 0;\n\n    //获得css配置数据\n    var options = getNavOptions();\n    var font = round(options.proportion * 2);\n\n    var navWidth = options.navWidth;\n    var navHeight = options.navHeight;\n    var sWidth = options.sWidth;\n    var sHeight = options.sHeight;\n\n    if (_index.config.layoutMode == 'horizontal') {\n        height = round(navHeight * 0.9);\n        width = round(height * sWidth / sHeight); //保持缩略图的宽高比\n        blank = round(navHeight * 0.05); //缩略图之间的间距\n        scroller = 'width:' + seasonlist * (width + blank) + 'px>';\n        contentstyle = 'float:left;width:' + width + 'px;height:' + height + 'px;margin-left:' + blank + 'px';\n        containerstyle = 'width:96%;height:' + height + 'px;margin:' + blank + 'px auto;font-size:' + font + 'em';\n        //横版左右滑动\n        //溢出长度+上偏移量\n        overwidth = width * seasonlist + seasonlist * blank;\n    } else {\n        width = round(navWidth * 0.9);\n        height = round(navWidth * 1.1);\n        blank = round(navWidth * 0.05);\n        contentstyle = 'width:' + width + 'px;height:' + height + 'px;margin:' + blank + 'px auto;border-bottom:1px solid rgba(0,0,0,0.3)';\n        containerstyle = 'height:' + (navHeight - 4) + 'px;overflow:hidden;margin:2px auto;font-size:' + font + 'em';\n        //竖版上下滑动\n        overHeigth = height * seasonlist + seasonlist * blank;\n    }\n\n    return {\n        contentstyle: contentstyle,\n        containerstyle: containerstyle,\n        overwidth: overwidth,\n        overHeigth: overHeigth,\n        scroller: scroller\n    };\n};\n\n/**\r\n * [nav 导航菜单]\r\n * @param  {[type]} seasonSqlRet [description]\r\n * @return {[type]}              [description]\r\n */\nfunction nav(seasonSqlRet) {\n\n    var seasonId = void 0,\n        chapterId = void 0,\n        data = void 0,\n        xxtlink = void 0;\n    var seasonlist = seasonSqlRet.length;\n    var options = getWrapper(seasonlist);\n\n    var list = '';\n    var i = 0;\n\n    for (i; i < seasonlist; i++) {\n        data = seasonSqlRet[i];\n        seasonId = data.seasonId;\n        chapterId = data._id;\n        xxtlink = seasonId + '-' + chapterId;\n        list += '<li style=\"' + options.contentstyle + '\">';\n        list += '  <div class=\"xut-navBar-box\" data-xxtlink = \"' + xxtlink + '\">' + (i + 1) + '</div>';\n        list += '</li>';\n    }\n\n    //导航\n    var html = '<div id=\"SectionWrapper\" style=\"{{style}}\">' + '  <div id=\"Sectionscroller\" style=\"width:{{width}}px;height:{{height}}px;{{scroller}}\">' + '    <ul id=\"SectionThelist\">' + '       {{list}}' + '    </ul>' + '  </div>' + '</div>';\n\n    return _.template(html, {\n        style: options.containerstyle,\n        width: options.overwidth,\n        height: options.overHeigth,\n        scroller: options.scroller,\n        list: list\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/scenario/layout.js\n ** module id = 43\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/**\r\n * 初始化首次范围\r\n * @return {[type]} [description]\r\n */\nvar initPointer = exports.initPointer = function initPointer(init, pagetotal) {\n    var leftscope = 0,\n        pagePointer = {};\n\n    if (init === leftscope) {\n        //首页\n        pagePointer['currIndex'] = init;\n        pagePointer['rightIndex'] = init + 1;\n    } else if (init === pagetotal - 1) {\n        //首页\n        pagePointer['currIndex'] = init;\n        pagePointer['leftIndex'] = init - 1;\n    } else {\n        //中间页\n        pagePointer['leftIndex'] = init - 1;\n        pagePointer['currIndex'] = init;\n        pagePointer['rightIndex'] = init + 1;\n    }\n    return pagePointer;\n};\n\n/**\r\n * 兼容事件对象\r\n * @return {[type]}   [description]\r\n */\nvar compatibilityEvent = exports.compatibilityEvent = function compatibilityEvent(e) {\n    var point;\n    if (e.touches && e.touches[0]) {\n        point = e.touches[0];\n    } else {\n        point = e;\n    }\n    return point;\n};\n\n/**\r\n * 计算当前已经创建的页面索引\r\n */\nvar calculationIndex = exports.calculationIndex = function calculationIndex(currIndex, targetIndex, pagetotal) {\n    var i = 0,\n        existpage,\n        createpage,\n        pageIndex,\n        ruleOut = [],\n        create = [],\n        destroy,\n        viewFlip;\n\n    //存在的页面\n    if (currIndex === 0) {\n        existpage = [currIndex, currIndex + 1];\n    } else if (currIndex === pagetotal - 1) {\n        existpage = [currIndex - 1, currIndex];\n    } else {\n        existpage = [currIndex - 1, currIndex, currIndex + 1];\n    }\n\n    //需要创建的新页面\n    if (targetIndex === 0) {\n        createpage = [targetIndex, targetIndex + 1];\n    } else if (targetIndex === pagetotal - 1) {\n        createpage = [targetIndex - 1, targetIndex];\n    } else {\n        createpage = [targetIndex - 1, targetIndex, targetIndex + 1];\n    }\n\n    for (; i < createpage.length; i++) {\n        pageIndex = createpage[i];\n        //跳过存在的页面\n        if (-1 === existpage.indexOf(pageIndex)) {\n            //创建目标的页面\n            create.push(pageIndex);\n        } else {\n            //排除已存在的页面\n            ruleOut.push(pageIndex);\n        }\n    }\n\n    _.each(ruleOut, function (ruleOutIndex) {\n        existpage.splice(existpage.indexOf(ruleOutIndex), 1);\n    });\n\n    destroy = existpage;\n\n    viewFlip = [].concat(create).concat(ruleOut).sort(function (a, b) {\n        return a - b;\n    });\n\n    return {\n        'create': create,\n        'ruleOut': ruleOut,\n        'destroy': destroy,\n        'viewFlip': viewFlip,\n        'targetIndex': targetIndex,\n        'currIndex': currIndex\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/swipe/depend.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../observer/index');\n\nvar _index2 = require('../config/index');\n\nvar _api = require('./api');\n\nvar _api2 = _interopRequireDefault(_api);\n\nvar _tap = require('../tap');\n\nvar _depend = require('./depend');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 翻页速率\r\n * @type {Number}\r\n */\nvar SPEED = 600;\n\n/**\r\n * 默认翻页时间\r\n * @type {Object}\r\n */\nvar DEFAULTTIME = {\n    min: 0,\n    mix: 500\n};\n\nvar getDate = function getDate() {\n    return +new Date();\n};\n\nvar LINEARTAG = 'data-viewlinear';\n\n/**\r\n * 自定义事件类型\r\n * onSwipeDown 触屏点击\r\n * onSwipeMove 触屏移动\r\n * onSwipeUp   触屏松手\r\n * onSwipeUpSlider触屏松手 滑动处理\r\n * onFlipSliding 松手动画（反弹）\r\n * onFlipRebound 执行反弹\r\n * _onAnimComplete 动画完成\r\n * onDropApp 退出应用\r\n */\n\nvar Swipe = function (_Observer) {\n    _inherits(Swipe, _Observer);\n\n    function Swipe() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var initIndex = _ref.initIndex;\n        var container = _ref.container;\n        var pageFlip = _ref.pageFlip;\n        var pagetotal = _ref.pagetotal;\n        var multiplePages = _ref.multiplePages;\n        var _ref$stopPropagation = _ref.stopPropagation;\n        var stopPropagation = _ref$stopPropagation === undefined ? false : _ref$stopPropagation;\n        var preventDefault = _ref.preventDefault;\n        var _ref$linear = _ref.linear;\n        var linear = _ref$linear === undefined ? false : _ref$linear;\n        var _ref$borderBounce = _ref.borderBounce;\n        var borderBounce = _ref$borderBounce === undefined ? false : _ref$borderBounce;\n        var _ref$extraGap = _ref.extraGap;\n        var extraGap = _ref$extraGap === undefined ? 0 : _ref$extraGap;\n\n        _classCallCheck(this, Swipe);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Swipe).call(this));\n\n        _this._hindex = initIndex;\n        _this._extraGap = extraGap;\n        _this.pagetotal = pagetotal;\n        _this.multiplePages = multiplePages;\n        _this.element = container;\n\n        _this._viewWidth = _index2.config.viewSize.width;\n\n        //翻页时间\n        _this._pageTime = pageFlip ? DEFAULTTIME.min : DEFAULTTIME.mix;\n\n        //翻页速率\n        _this._speedRate = _this._originalRate = _this._pageTime / _this._viewWidth;\n\n        //计算初始化页码\n        _this._pagePointer = (0, _depend.initPointer)(initIndex, pagetotal);\n\n        _this.options = {\n\n            stopPropagation: stopPropagation,\n\n            preventDefault: preventDefault !== undefined ? preventDefault : true,\n\n            /**\r\n             * 是否分段处理\r\n             * 默认是\r\n             * @type {[type]}\r\n             */\n            linear: linear,\n\n            /**\r\n             * 启动边界反弹\r\n             * @type {[type]}\r\n             */\n            borderBounce: borderBounce\n        };\n\n        //增加回到标记\n        if (linear) {\n            container.setAttribute(LINEARTAG, true);\n        }\n\n        _this._initTransform();\n\n        //绑定行为\n        _this._initEvents();\n\n        //用于查找跟元素\n        var li = _this.element.children;\n        _this._bubbleNode = {\n            page: li[0],\n            master: li[1]\n        };\n        return _this;\n    }\n\n    _createClass(Swipe, [{\n        key: '_initTransform',\n        value: function _initTransform(distance) {\n            if (this.options.linear) {\n                this._initDistance = -this._hindex * (this._viewWidth + this._extraGap);\n                this.element.style[Xut.style.transform] = 'translate(' + this._initDistance + 'px,0px)' + Xut.style.translateZ;\n            }\n        }\n\n        /**\r\n         * 处理松手后滑动\r\n         * pageIndex 页面\r\n         * distance  移动距离\r\n         * speed     时间\r\n         * viewTag   可使区标记\r\n         * follow    是否为跟随滑动\r\n         * @return {[type]} [description]\r\n         * pageIndex: 0, distance: -2, speed: 0, direction: \"next\", action: \"flipMove\"\r\n         */\n\n    }, {\n        key: '_distributeMove',\n        value: function _distributeMove(data) {\n            var pointer = this._pagePointer;\n            data.leftIndex = pointer.leftIndex;\n            data.rightIndex = pointer.rightIndex;\n            this.$emit('onMove', data);\n        }\n\n        /**\r\n         * 绑定事件\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_initEvents',\n        value: function _initEvents() {\n\n            var callback = {\n                start: this,\n                end: this\n            };\n\n            //pageFlip启动，没有滑动处理\n            if (this.pageFlip) {\n                callback.transitionend = this;\n            } else if (this.multiplePages) {\n                callback.move = this;\n                callback.transitionend = this;\n            }\n\n            (0, _tap.bindTap)(this.element, callback);\n        }\n\n        /**\r\n         * 触发\r\n         * @param  {[type]} e [description]\r\n         * @return {[type]}   [description]\r\n         */\n\n    }, {\n        key: '_onStart',\n        value: function _onStart(e) {\n\n            //判断双击速度\n            //必须要大于350\n            var currtTime = getDate();\n            if (this._clickTime) {\n                if (currtTime - this._clickTime < 350) {\n                    return;\n                }\n            }\n            this._clickTime = currtTime;\n\n            var interrupt = void 0;\n            var point = (0, _depend.compatibilityEvent)(e);\n\n            if (!point) {\n                return interrupt = this._preventSwipe = true;\n            }\n\n            /**\r\n             * 获取观察对象\r\n             * 钩子函数\r\n             * point 事件对象\r\n             * @return {[type]} [description]\r\n             */\n            this.$emit('onFilter', function () {\n                interrupt = true;\n            }, point, e);\n\n            //打断动作\n            if (interrupt) return;\n\n            this._deltaX = 0;\n            this._deltaY = 0;\n\n            this._preventSwipe = false; //是否滑动事件受限\n            this._isBounce = false; //是否反弹\n            this._isRollX = false; //是否为X轴滑动\n            this._isRollY = false; //是否为Y轴滑动\n            this._isTap = true; //点击了屏幕\n\n            this._start = {\n                pageX: point.pageX,\n                pageY: point.pageY,\n                time: getDate()\n            };\n        }\n\n        /**\r\n         * 前尾边界反弹判断\r\n         * @param  {[type]} deltaX [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: '_borderBounce',\n        value: function _borderBounce(deltaX) {\n            //首页,并且是左滑动\n            if (this._hindex === 0 && deltaX > 0) {\n                return true;\n                //尾页\n            } else if (this._hindex === this.pagetotal - 1 && deltaX < 0) {\n                return true;\n            }\n        }\n\n        /**\r\n         * 移动\r\n         * @param  {[type]} e [description]\r\n         * @return {[type]}   [description]\r\n         */\n\n    }, {\n        key: '_onMove',\n        value: function _onMove(e) {\n\n            //如果没有点击\n            //或是Y轴滑动\n            //或者是阻止滑动\n            if (!this._isTap || this._isRollY || this._preventSwipe) return;\n\n            var point = (0, _depend.compatibilityEvent)(e);\n            var deltaX = point.pageX - this._start.pageX;\n            var deltaY = point.pageY - this._start.pageY;\n            var absDeltaX = Math.abs(deltaX);\n            var absDeltaY = Math.abs(deltaY);\n\n            //=========Y轴滑动=========\n            if (!this._isRollY) {\n                //Y>X => 为Y轴滑动\n                if (absDeltaY > absDeltaX) {\n                    this._isRollY = true;\n                    return;\n                }\n            }\n\n            //=========X轴滑动=========\n\n            //前尾是否允许反弹\n            if (!this.options.borderBounce) {\n                if (this._isBounce = this._borderBounce(deltaX)) return;\n            }\n\n            if (this.options.preventDefault) {\n                e.preventDefault();\n            }\n\n            //滑动方向\n            //left => 负\n            //rigth => 正\n            this._deltaX = deltaX / (!this._hindex && deltaX > 0 // 在首页\n            || this._hindex == this.pagetotal - 1 // 尾页\n            && deltaX < 0 // 中间\n            ? absDeltaX / this._viewWidth + 1 : 1);\n\n            if (!this._isRollX && this._deltaX) {\n                this._isRollX = true;\n            }\n\n            this.direction = this._deltaX > 0 ? 'prev' : 'next';\n\n            //减少抖动\n            //算一次有效的滑动\n            //移动距离必须20px才开始移动\n            var xWait = 20;\n            if (absDeltaX <= xWait) return;\n\n            //需要叠加排除值\n            if (this._deltaX > 0) {\n                xWait = -xWait;\n            }\n\n            !this._fliplock && this._distributeMove({\n                'pageIndex': this._hindex,\n                'distance': this._deltaX + xWait,\n                'speed': 0,\n                'direction': this.direction,\n                'action': 'flipMove'\n            });\n        }\n\n        /**\r\n         * 松手\r\n         * @param  {[type]} e [description]\r\n         * @return {[type]}   [description]\r\n         */\n\n    }, {\n        key: '_onEnd',\n        value: function _onEnd(e) {\n\n            this._isTap = false;\n\n            if (this._isBounce || this._preventSwipe) return;\n\n            //点击\n            if (!this._isRollX && !this._isRollY) {\n                var isReturn = false;\n                this.$emit('onTap', this._hindex, function () {\n                    return isReturn = true;\n                });\n                if (isReturn) return;\n            }\n\n            //如果是左右滑动\n            if (this._isRollX) {\n\n                var duration = getDate() - this._start.time;\n                var deltaX = Math.abs(this._deltaX);\n\n                //如果是首尾\n                //如果是liner模式排除\n                var isPastBounds = this.options.linear ? false : !this._hindex && this._deltaX > 0 || this._hindex == this.pagetotal - 1 && this._deltaX < 0;\n\n                //_slideTo的最低值要求\n                //1 fast: time < 200 && x >30\n                //2 common: x > veiwWidth/6\n                var isValidSlide = Number(duration) < 200 && Math.abs(deltaX) > 30 || Math.abs(deltaX) > this._viewWidth / 6;\n\n                //跟随移动\n                if (!this._fliplock && isValidSlide && !isPastBounds) {\n                    //true:right, false:left\n                    this._slideTo(this._deltaX < 0 ? 'next' : 'prev');\n                } else {\n                    //反弹\n                    this._distributeMove({\n                        'pageIndex': this._hindex,\n                        'direction': this._deltaX > 0 ? 'prev' : 'next',\n                        'distance': 0,\n                        'speed': 300,\n                        'action': 'flipRebound'\n                    });\n                }\n            }\n        }\n\n        /**\r\n         * 边界控制\r\n         * @param  {[type]} direction [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: '_isBorder',\n        value: function _isBorder(direction) {\n            var overflow = void 0;\n            var pointer = this._pagePointer;\n            var fillength = Object.keys(pointer).length;\n\n            switch (direction) {\n                case 'prev':\n                    //前翻页\n                    overflow = pointer.currIndex === 0 && fillength === 2 ? true : false;\n                    break;\n                case 'next':\n                    //后翻页\n                    overflow = pointer.currIndex === this.pagetotal - 1 && fillength === 2 ? true : false;\n                    break;\n            }\n\n            return overflow;\n        }\n\n        /**\r\n         * 复位速率\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_resetRate',\n        value: function _resetRate() {\n            this._speedRate = this._originalRate;\n            this._isQuickTurn = false;\n        }\n\n        /**\r\n         * 快速翻页时间计算\r\n         */\n\n    }, {\n        key: '_setRate',\n        value: function _setRate() {\n            this._speedRate = 50 / this._viewWidth;\n            this._isQuickTurn = true;\n        }\n\n        /**\r\n         * 判断是否快速翻页\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_quickTurn',\n        value: function _quickTurn() {\n            var startDate = getDate();\n            if (this._preTapTime) {\n                if (startDate - this._preTapTime < SPEED) {\n                    this._setRate();\n                }\n            }\n            this._preTapTime = getDate();\n        }\n\n        /**\r\n         * 翻页加锁\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_lock',\n        value: function _lock() {\n            this._fliplock = true;\n        }\n\n        //转换页码索引\n        //direction 方向\n        //pointer 当前页码标示\n        //[17 18 19]  _pagePointer\n        //[18 19 20]  转换后\n        // 17 销毁\n        // 20 创建\n\n    }, {\n        key: '_tanrsfromPointer',\n        value: function _tanrsfromPointer(pointer) {\n            var createPointer = void 0; //创建的页\n            var destroyPointer = void 0; //销毁的页\n            switch (this.direction) {\n                case 'prev':\n                    //前处理\n                    createPointer = pointer.leftIndex - 1;\n                    destroyPointer = pointer.rightIndex;\n                    break;\n                case 'next':\n                    //后处理\n                    createPointer = pointer.rightIndex + 1;\n                    destroyPointer = pointer.leftIndex;\n                    break;\n            }\n            pointer.createPointer = createPointer;\n            pointer.destroyPointer = destroyPointer;\n            return pointer;\n        }\n\n        /**\r\n         * 修正页面索引\r\n         */\n\n    }, {\n        key: '_fixHindex',\n        value: function _fixHindex(currIndex) {\n            this._hindex = currIndex; //翻页索引\n        }\n\n        /**\r\n         * 更新页码标示\r\n         */\n\n    }, {\n        key: '_updataPointer',\n        value: function _updataPointer(leftIndex, currIndex, rightIndex) {\n            if (arguments.length === 3) {\n                this._pagePointer = {\n                    'leftIndex': leftIndex,\n                    'currIndex': currIndex,\n                    'rightIndex': rightIndex\n                };\n                return;\n            }\n            if (arguments.length === 1) {\n                var data = leftIndex;\n                var viewFlip = data['viewFlip'];\n                this._fixHindex(data.targetIndex);\n                if (viewFlip.length === 3) {\n                    this._updataPointer(viewFlip[0], viewFlip[1], viewFlip[2]);\n                }\n                if (viewFlip.length === 2) {\n                    if (viewFlip[0] === 0) {\n                        //首页\n                        this._pagePointer['rightIndex'] = viewFlip[1];\n                        this._pagePointer['currIndex'] = viewFlip[0];\n                        delete this._pagePointer['leftIndex'];\n                    } else {\n                        //尾页\n                        this._pagePointer['leftIndex'] = viewFlip[0];\n                        this._pagePointer['currIndex'] = viewFlip[1];\n                        delete this._pagePointer['rightIndex'];\n                    }\n                }\n                return;\n            }\n        }\n\n        /**\r\n         * 修正页码指示\r\n         */\n\n    }, {\n        key: '_fixPointer',\n        value: function _fixPointer(pointer) {\n            //需要停止动作的页面索引\n            var stopPointer = pointer.currIndex;\n            switch (this.direction) {\n                case 'prev':\n                    if (-1 < pointer.createPointer) {\n                        //首页情况\n                        this._updataPointer(pointer.createPointer, pointer.leftIndex, pointer.currIndex);\n                    }\n                    if (-1 === pointer.createPointer) {\n                        this._pagePointer['rightIndex'] = pointer.currIndex;\n                        this._pagePointer['currIndex'] = pointer.leftIndex;\n                        delete this._pagePointer['leftIndex'];\n                    }\n                    break;\n                case 'next':\n                    if (this.pagetotal > pointer.createPointer) {\n                        this._updataPointer(pointer.currIndex, pointer.rightIndex, pointer.createPointer);\n                    }\n                    if (this.pagetotal === pointer.createPointer) {\n                        //如果是尾页\n                        this._pagePointer['leftIndex'] = pointer.currIndex;\n                        this._pagePointer['currIndex'] = pointer.rightIndex;\n                        delete this._pagePointer['rightIndex'];\n                    }\n                    break;\n            }\n            this._pagePointer['createPointer'] = pointer.createPointer;\n            this._pagePointer['destroyPointer'] = pointer.destroyPointer;\n            this._pagePointer['stopPointer'] = stopPointer;\n            return this._pagePointer;\n        }\n\n        /**\r\n         * 滑动到上下页面\r\n         * direction\r\n         *     \"perv\" / \"next\"\r\n         * @param  {[type]} direction [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: '_slideTo',\n        value: function _slideTo(direction) {\n            var _this2 = this;\n\n            //如果在忙碌状态,如果翻页还没完毕\n            if (this._fliplock) {\n                return;\n            }\n\n            //前后边界\n            if (!this.options.linear) {\n                if (this._isBorder(direction)) return;\n            }\n\n            this._lock();\n            this.direction = direction;\n            this._quickTurn();\n\n            /**\r\n             * 计算滑动速度\r\n             * @return {[type]} [description]\r\n             */\n            var calculatespeed = function calculatespeed() {\n                return (_this2._viewWidth - Math.abs(_this2._deltaX)) * _this2._speedRate || _this2._pageTime;\n            };\n\n            this._distributeMove({\n                'pageIndex': this._hindex,\n                'speed': calculatespeed(),\n                'distance': 0,\n                'direction': this.direction,\n                'action': 'flipOver'\n            });\n\n            setTimeout(function () {\n                var newPointer = _this2._tanrsfromPointer(_this2._pagePointer);\n                newPointer = _this2._fixPointer(newPointer);\n                _this2.$emit('onUpSlider', newPointer);\n                _this2._fixHindex(newPointer.currIndex);\n            });\n        }\n\n        /**\r\n         * 动画结束后处理\r\n         * @param  {[type]} e [description]\r\n         * @return {[type]}   [description]\r\n         */\n\n    }, {\n        key: '_onAnimComplete',\n        value: function _onAnimComplete(e) {\n            var element = e.target;\n            var pageType = element.getAttribute('data-pageType');\n            var view = element.getAttribute('data-view'); //操作的可视窗口\n            var linearView = element.getAttribute(LINEARTAG); //流式布局\n\n            //流式布局处理\n            if (linearView && !view) {\n                this._distributed(element, view);\n                return;\n            }\n\n            //反弹效果,未翻页\n            if (!view) {\n                if (!pageType) {\n                    //只针对母板处理\n                    this.$emit('onMasterMove', this._hindex, element);\n                }\n                return;\n            }\n\n            this._distributed(element, view);\n        }\n    }, {\n        key: '_distributed',\n        value: function _distributed(element, view) {\n            var _this3 = this;\n\n            //针对拖拽翻页阻止\n            this._preventSwipe = true;\n            this._isTap = false;\n            //恢复速率\n            this._resetRate();\n            view && element.removeAttribute('data-view', 'false');\n            setTimeout(function () {\n                _this3.$emit('onComplete', _this3.direction, _this3._pagePointer, _this3._unlock.bind(_this3), _this3._isQuickTurn);\n            }, 100);\n        }\n\n        /**\r\n         * 解锁翻页\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_unlock',\n        value: function _unlock() {\n            this._fliplock = false;\n        }\n\n        /**\r\n         * 销毁事件\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_evtDestroy',\n        value: function _evtDestroy() {\n            (0, _tap.offTap)(this.element, {\n                start: this,\n                move: this,\n                end: this,\n                transitionend: this\n            });\n        }\n\n        /**\r\n         * 事件处理\r\n         * @param  {[type]} e [description]\r\n         * @return {[type]}   [description]\r\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(e) {\n            (0, _tap.handle)({\n                start: function start(e) {\n                    this.options.stopPropagation && e.stopPropagation();\n                    this._onStart(e);\n                },\n                move: function move(e) {\n                    this.options.stopPropagation && e.stopPropagation();\n                    this._onMove(e);\n                },\n                end: function end(e) {\n                    this.options.stopPropagation && e.stopPropagation();\n                    this._onEnd(e);\n                },\n                transitionend: function transitionend(e) {\n                    this.options.stopPropagation && e.stopPropagation();\n                    this._onAnimComplete(e);\n                }\n            }, this, e);\n        }\n    }]);\n\n    return Swipe;\n}(_index.Observer);\n\nexports.default = Swipe;\n\n\n(0, _api2.default)(Swipe);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/swipe/index.js\n ** module id = 45\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.execute = execute;\n\nvar _results = require('../database/results');\n\n/**\r\n * 创建执行方法\r\n * @return {[type]} [description]\r\n */\nfunction createfactory(sql, fn) {\n    var key;\n    if (typeof sql === 'string') {\n        fn(key, sql);\n    } else {\n        for (key in sql) {\n            fn(key, sql[key]);\n        }\n    }\n}\n\n/**\r\n * 模拟database获取数据\r\n * @return {[type]}            [description]\r\n */\nfunction executeDB(sql, callback, errorCB, tName) {\n    var SQLResult = (0, _results.getResults)();\n    if (SQLResult) {\n        if (SQLResult[tName]) {\n            (function () {\n                var data = SQLResult[tName];\n                var SQLResultSetRowList = {};\n                SQLResultSetRowList = {\n                    length: Object.keys(data).length,\n                    item: function item(num) {\n                        return data[num];\n                    }\n                };\n                callback(SQLResultSetRowList);\n            })();\n        } else {\n            errorCB({\n                tName: ':table not exist!!'\n            });\n        }\n    } else {\n        //否则分次查询数据\n        $.ajax({\n            url: Xut.config.onlineModeUrl,\n            dataType: 'json',\n            data: {\n                xxtsql: sql\n            },\n            success: function success(rs) {\n                var data = rs,\n                    SQLResultSetRowList = {};\n                SQLResultSetRowList = {\n                    length: rs.length,\n                    item: function item(num) {\n                        return data[num];\n                    }\n                };\n                callback(SQLResultSetRowList);\n            },\n            error: errorCB\n        });\n    }\n}\n\n//建立sql查询,\nfunction execute(selectSql, callback) {\n\n    var database = Xut.config.db,\n        tableName,\n        //表名\n    successResults = {},\n        //成功的数据\n    tempClosure = [],\n        //临时收集器\n    collectError = [],\n        //收集错误查询\n    buildTotal = function () {\n        //如果只有一条\n        if (typeof selectSql === 'string') {\n            return 1;\n        } else {\n            return Object.keys(selectSql).length;\n        }\n    }();\n\n    createfactory(selectSql, function (key, value) {\n        //开始执行查询\n        createSelect(key || 'results', value);\n    });\n\n    /**\r\n     * 创建查询\r\n     */\n    function createSelect(key, value) {\n        buildTotal--;\n        tempClosure.push(executeTemplate(key, value));\n        0 === buildTotal && executeBuild();\n    }\n\n    /**\r\n     * 执行查询\r\n     * @return {[type]} [description]\r\n     */\n    function executeBuild() {\n        if (tempClosure.length) {\n            var temp = tempClosure.shift();\n            tableName = temp.tableName;\n            temp.execute();\n        } else {\n            //successResults['results'] 成功表数据\n            //collectError 失败表\n            callback(successResults['results'] ? successResults['results'] : successResults, collectError);\n        }\n    }\n\n    //成功后方法\n    function success() {\n        executeBuild();\n    }\n\n    //失败\n    function errorCB(error) {\n        collectError.push(tableName);\n        console.log(\"数据查询错误 \" + error.message, '类型', tableName);\n        executeBuild();\n    }\n\n    /**\r\n     * 构建执行作用域\r\n     */\n    function executeTemplate(tName, sql) {\n        return {\n            tableName: tName,\n            execute: function execute() {\n                //查询\n                if (database) {\n                    database.transaction(function (tx) {\n                        tx.executeSql(sql, [], function (tx, result) {\n                            successResults[tName] = result.rows;\n                        });\n                    }, errorCB, success);\n                } else {\n                    executeDB(sql, function (result) {\n                        successResults[tName] = result;\n                        success();\n                    }, errorCB, tName);\n                }\n            }\n        };\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/execute.js\n ** module id = 46\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.defProtected = defProtected;\nexports.defAccess = defAccess;\nexports.toNumber = toNumber;\nexports.toEmpty = toEmpty;\nexports.hash = hash;\nexports.extend = extend;\nexports.revisesize = revisesize;\nexports.setRootfont = setRootfont;\nexports._extend = _extend;\nexports.arrayUnique = arrayUnique;\nexports.joinPaths = joinPaths;\n//定义属性\nvar def = Object.defineProperty;\n\n/**\r\n * 定义一个新的对象\r\n * 重写属性\r\n */\nfunction defProtected(obj, key, val, enumerable, writable) {\n    def(obj, key, {\n        value: val,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: true\n    });\n}\n\n/**\r\n * 定义访问控制器\r\n * @return {[type]} [description]\r\n */\nfunction defAccess(obj, key, access) {\n    def(obj, key, {\n        get: access.get,\n        set: access.set\n    });\n}\n\n/**\r\n * 转化数组\r\n * @param  {[type]} o [description]\r\n * @return {[type]}   [description]\r\n */\nfunction toNumber(o) {\n    return Number(o) || null;\n};\n\n/**\r\n * 保证有效值\r\n * @return {[type]} [description]\r\n */\nfunction toEmpty(val) {\n    return Number(val);\n}\n\n/**\r\n * 创建一个纯存的hash对象\r\n */\nfunction hash() {\n    return Object.create(null);\n}\n\n/**\r\n * 简单继承\r\n * @return {[type]} [description]\r\n */\nfunction extend(subClass, superClass) {\n    var F = function F() {};\n    F.prototype = superClass.prototype;\n    var fProto = new F();\n    for (var k in fProto) {\n        if (subClass.prototype[k]) {\n            console.log('子类与超类的方法名重叠了！');\n        } else {\n            subClass.prototype[k] = fProto[k];\n        }\n    }\n    subClass.prototype.constructor = subClass;\n    superClass = null;\n}\n\n/**\r\n * 缩放比\r\n * @param  {[type]} width  [description]\r\n * @param  {[type]} height [description]\r\n * @param  {[type]} left   [description]\r\n * @param  {[type]} top    [description]\r\n * @return {[type]}        [description]\r\n */\nfunction fiexdProportion(width, height, left, top) {\n    var proportion = Xut.config.proportion;\n    return {\n        width: width * proportion.width,\n        height: height * proportion.height,\n        left: left * proportion.left,\n        top: top * proportion.top\n    };\n}\n\n/**\r\n * 修正元素尺寸\r\n * @param  {[type]} results [description]\r\n * @return {[type]}         [description]\r\n */\nfunction revisesize(results) {\n    //不同设备下缩放比计算\n    var layerSize = fiexdProportion(results.width, results.height, results.left, results.top);\n    //新的背景图尺寸\n    var backSize = fiexdProportion(results.backwidth, results.backheight, results.backleft, results.backtop);\n\n    //赋值新的坐标\n    results.scaleWidth = Math.ceil(layerSize.width);\n    results.scaleHeight = Math.ceil(layerSize.height);\n    results.scaleLeft = Math.floor(layerSize.left);\n    results.scaleTop = Math.floor(layerSize.top);\n\n    //背景坐标\n    results.scaleBackWidth = Math.ceil(backSize.width);\n    results.scaleBackHeight = Math.ceil(backSize.height);\n    results.scaleBackLeft = Math.floor(backSize.left);\n    results.scaleBackTop = Math.floor(backSize.top);\n\n    return results;\n}\n\n/**\r\n * 全局字体修复\r\n * @return {[type]} [description]\r\n */\nfunction setRootfont() {\n    var rootSize = 16;\n    switch (window.innerWidth + window.innerHeight) {\n        case 3000:\n            //1920+1080\n            //samsumg galaxy s4\n            rootSize = 32;\n            break;\n        case 2000:\n            //1280+720\n            //HD Android phone\n            rootSize = 26;\n            break;\n        case 2048:\n            //1280+768\n            rootSize = Xut.plat.isIpad ? 16 : 26;\n            break;\n        case 1624:\n            //1024+600\n            rootSize = 18;\n            break;\n        case 888:\n            //568+320\n            rootSize = 12;\n            break;\n        case 800:\n            //480+320\n            rootSize = 14;\n            break;\n        case 560:\n            //320+240\n            rootSize = 12;\n            break;\n        default:\n            //其他分辨率 取默认值\n            break;\n    }\n    16 != rootSize && $(\"html\").css(\"font-size\", rootSize + \"px\");\n}\n\nfunction _extend(object, config) {\n    for (var i in config) {\n        if (i) {\n            if (object[i]) {\n                console.log('接口方法重复', 'Key->' + i, 'Value->' + object[i]);\n            } else {\n                object[i] = config[i];\n            }\n        }\n    }\n};\n\n/**\r\n * 修正判断是否存在处理\r\n * @param  {[type]} arr [description]\r\n * @return {[type]}     [description]\r\n */\nfunction arrayUnique(arr) {\n    //去重\n    if (arr && arr.length) {\n        var length = arr.length;\n        while (--length) {\n            //如果在前面已经出现，则将该位置的元素删除\n            if (arr.lastIndexOf(arr[length], length - 1) > -1) {\n                arr.splice(length, 1);\n            }\n        }\n        return arr;\n    } else {\n        return arr;\n    }\n}\n\n/**\r\n * 标准化文件路径，主要解决 '.'和'..'相对路径问题。\r\n * @param  {[type]} path [description]\r\n * @return {[type]}      [description]\r\n */\nfunction normalize(path) {\n    // 利用帮助函数获取文件路径的信息\n    var result = statPath(path),\n\n    // 盘符\n    device = result.device,\n\n    // 是否为windows的UNC路径\n    isUnc = result.isUnc,\n\n    // 是否为绝对路径\n    isAbsolute = result.isAbsolute,\n\n    // 文件路径结尾\n    tail = result.tail,\n\n    // 尾部是否为'\\' 或者 '/' 结尾。\n    trailingSlash = /[\\\\\\/]$/.test(tail);\n\n    // Normalize the tail path\n    //标准化tail路径，处理掉'.' '..' 以 '\\' 连接 \n    tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\n    // 处理tail为空的情况\n    if (!tail && !isAbsolute) {\n        tail = '.';\n    }\n    // 当原始路径中有slash时候，需要加上\n    if (tail && trailingSlash) {\n        tail += '\\\\';\n    }\n\n    // Convert slashes to backslashes when `device` points to an UNC root.\n    // Also squash multiple slashes into a single one where appropriate.\n    // 处理windows UNC的情况。\n    if (isUnc) {\n        // 获取具体的路径，如果是UNC的情况\n        device = normalizeUNCRoot(device);\n    }\n    // 返回具体的路径\n    return device + (isAbsolute ? '\\\\' : '') + tail;\n}\n\n/**\r\n * 获取文件路径详细信息\r\n * @param  {[type]} path [description]\r\n * @return {[type]}      [description]\r\n */\nfunction statPath(path) {\n    var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n    // 和上述的函数一样，解析路径中的信息。\n    var result = splitDeviceRe.exec(path),\n        device = result[1] || '',\n\n    // 判断是否 为UNC path\n    isUnc = !!device && device[1] !== ':';\n    // 返回具体的对象，盘符，是否为统一路径，绝对路径， 以及结尾\n    return {\n        device: device,\n        isUnc: isUnc,\n        isAbsolute: isUnc || !!result[2], // UNC paths are always absolute\n        tail: result[3]\n    };\n}\n\n/**\r\n * 解决文件目录中的相对路径\r\n * @param  {[type]} parts          文件目录数组，从0- 高位分别代表一级目录\r\n * @param  {[type]} allowAboveRoot 布尔值，代表是否可以超过根目录\r\n * @return {[type]}                解决掉相对路径后的数组，比如说数组 \r\n                                   ['/test'， '/re'， '..']将会返回 ['/test']\r\n */\nfunction normalizeArray(parts, allowAboveRoot) {\n    // 返回值\n    var res = [];\n    // 遍历数组，处理数组中的相对路径字符 '.' 或者'..'\n    for (var i = 0; i < parts.length; i++) {\n        // 取得当前的数组的字符\n        var p = parts[i];\n\n        // ignore empty parts\n        // 对空或者'.'不处理\n        if (!p || p === '.') continue;\n        // 处理相对路径中的'..'\n        if (p === '..') {\n            if (res.length && res[res.length - 1] !== '..') {\n                // 直接弹出返回队列，当没有到达根目录时\n                res.pop();\n            } else if (allowAboveRoot) {\n                //allowAboveRoot 为真时，插入'..'\n                res.push('..');\n            }\n        } else {\n            // 非 '.' 和'..'直接插入返回队列。 \n            res.push(p);\n        }\n    }\n    // 返回路径数组\n    return res;\n}\n\n/**\r\n *帮助函数，将路径UNC路径标准化成\\\\pathname\\\\\r\n * @param  {[type]} device [description]\r\n * @return {[type]}        [description]\r\n */\nfunction normalizeUNCRoot(device) {\n    return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\n}\n\n/**\r\n *  文件路径拼接\r\n * @return {[type]} [description]\r\n */\nfunction joinPaths() {\n    var paths = [];\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        // 确保函数参数为字符串\n        try {\n            if (Object.prototype.toString.call(arg) != \"[object String]\") {\n                throw new Error('Arguments to path.join must be strings');\n            }\n            if (arg) {\n                // 放入参数数组\n                paths.push(arg);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    var joined = paths.join(\"/\");\n\n    if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\n        joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\n    }\n    // 利用标准化接口 获取具体的文件路径\n    return normalize(joined);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/lang.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.destroy = exports.show = exports.messageBox = undefined;\n\nvar _nexttick = require('../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar msgBox = void 0; /**\r\n                      * 提示信息\r\n                      * @param  {[type]} require [description]\r\n                      * @param  {[type]} exports [description]\r\n                      * @param  {[type]} module  [description]\r\n                      * @return {[type]}         [description]\r\n                      */\n\nvar toolTip = void 0;\nvar config = void 0;\n\n/**\r\n * 显示提示信息\r\n */\nfunction show(opts) {\n\n    var prop = config.proportion,\n        fontsize = (prop.width + prop.height) * 0.5 + 'em',\n        content = opts.content,\n        time = opts.time || 3000,\n        css = {\n        'font-size': fontsize,\n        'background-image': 'url(images/icons/nodeBig.png)',\n        'z-index': 99999,\n        'bottom': '1%',\n        'left': '5%',\n        'padding': '0.2em 0.5em',\n        'color': 'white',\n        'position': 'absolute'\n    };\n\n    if (!toolTip) {\n        toolTip = $('#toolTip');\n        toolTip.css(css);\n        toolTip.css(Xut.style.borderRadius, '5px');\n    } else {\n        toolTip.empty().show();\n    }\n\n    (0, _nexttick2.default)({\n        'container': toolTip,\n        'content': content\n    }, hide);\n}\n\n/**\r\n * [模拟alert提示框]\r\n * @param  {[type]} message [description]\r\n * @return {[type]}         [description]\r\n */\nfunction messageBox(message) {\n\n    config = Xut.config;\n\n    var size = config.screenSize,\n        width = size.width * 0.25,\n        Box = msgBox || $('#xut-message'),\n        html = '<div class=\"messageBox\" style=\"width:' + width + 'px;\">' + '<div class=\"messageTex\" style=\"line-height:2\">' + message + '</div>' + '<div class=\"messageBtn\" style=\"line-height:1.5\">OK</div>' + '</div>';\n\n    //remove the node when user click\n    Box.html(html).show().on(\"touchend mouseup\", function (e) {\n        if (e.target.className === 'messageBtn') {\n            this.innerHTML = '';\n            this.style.display = 'none';\n        }\n    });\n}\n\nfunction hide() {\n    setTimeout(function () {\n        toolTip.hide(1000);\n    }, 1500);\n}\n\nfunction destroy() {\n    msgBox = null;\n}\n\nexports.messageBox = messageBox;\nexports.show = show;\nexports.destroy = destroy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/notice.js\n ** module id = 48\n ** module chunks = 0\n **/","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['CloseCurlyDoubleQuote', [8221]], ['CloseCurlyQuote', [8217]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-entities/lib/html5-entities.js\n ** module id = 49\n ** module chunks = 0\n **/","module.exports = ansiHTML;\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar re_ansi = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/;\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n};\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n};\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.8', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>', // delete\n};\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n};\n[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>';\n});\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML(text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!re_ansi.test(text)) {\n    return text;\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = [];\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq];\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) {\n        ansiCodes.pop();\n        return '</span>';\n      }\n      // Open tag.\n      ansiCodes.push(seq);\n      return ot[0] == '<' ? ot : '<span style=\"' + ot + ';\">';\n    }\n\n    var ct = _closeTags[seq];\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop();\n      return ct;\n    }\n    return '';\n  });\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length;\n  (l > 0) && (ret += Array(l + 1).join('</span>'));\n\n  return ret;\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors != 'object') {\n    throw new Error('`colors` parameter must be an Object.');\n  }\n\n  var _finalColors = {};\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null;\n    if (!hex) {\n      _finalColors[key] = _defColors[key];\n      continue;\n    }\n    if ('reset' == key) {\n    \tif(typeof hex == 'string'){\n    \t\thex = [hex];\n    \t}\n      if (!Array.isArray(hex) || hex.length == 0 || hex.some(function (h) {\n          return typeof h != 'string';\n        })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');\n      }\n      var defHexColor = _defColors[key];\n      if(!hex[0]){\n      \thex[0] = defHexColor[0];\n      }\n      if (hex.length == 1 || !hex[1]) {\n      \thex = [hex[0]];\n        hex.push(defHexColor[1]);\n      }\n\n      hex = hex.slice(0, 2);\n    } else if (typeof hex != 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');\n    }\n    _finalColors[key] = hex;\n  }\n  _setTags(_finalColors);\n};\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function(){\n\t_setTags(_defColors);\n};\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {\n  get open() {\n    return _openTags;\n  },\n  get close() {\n    return _closeTags;\n  }\n};\n\nfunction _setTags(colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey;\n\n  for (var code in _styles) {\n    var color = _styles[code];\n    var oriColor = colors[color] || '000';\n    _openTags[code] = 'color:#' + oriColor;\n    code = parseInt(code);\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor;\n  }\n}\n\nansiHTML.reset();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-html/index.js\n ** module id = 50\n ** module chunks = 0\n **/","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-regex/index.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\n\nrequire('eventsource-polyfill');\nvar hotClient = require('webpack-hot-middleware/client?noInfo=true&reload=true');\n\nhotClient.subscribe(function (event) {\n    if (event.action === 'reload') {\n        window.location.reload();\n    }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./build/dev/client.js\n ** module id = 52\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * by 2016.6.30\r\n * judgment is backstage run\r\n * Take the opposite judgment\r\n * @return {[type]} [description]\r\n */\nvar allowNext = function allowNext() {\n    if (window.MMXCONFIG) {\n        return function () {\n            return !(window.MMXCONFIG.back || Xut.Application.backstage);\n        };\n    } else {\n        return function () {\n            return !false;\n        };\n    }\n};\n\nexports.default = allowNext();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/backstage.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.autoRun = autoRun;\n\nvar _access = require('./access');\n\nvar _backstage = require('../backstage');\n\nvar _backstage2 = _interopRequireDefault(_backstage);\n\nvar _index = require('../directive/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//content任务超时Id\nvar contentTaskOutId = void 0; /**\r\n                                * 自动触发控制\r\n                                * @return {[type]} [description]\r\n                                */\n\nvar markComplete = void 0;\n\n/**\r\n * 运行自动的content对象\r\n * 延时500毫秒执行\r\n * @return {[type]} [description]\r\n */\nvar runContent = function runContent(contentObjs, taskAnimCallback) {\n\n    var contentTaskOutId = setTimeout(function () {\n\n        clearTimeout(contentTaskOutId);\n\n        /**\r\n         * 完成通知\r\n         * @param  {[type]} () [description]\r\n         * @return {[type]}    [description]\r\n         */\n        var markComplete = function () {\n            var completeStatistics = contentObjs.length; //动画完成统计\n            return function () {\n                if (completeStatistics === 1) {\n                    taskAnimCallback && taskAnimCallback();\n                    markComplete = null;\n                }\n                completeStatistics--;\n            };\n        }();\n\n        _.each(contentObjs, function (obj, index) {\n            if (!Xut.CreateFilter.has(obj.pageId, obj.id)) {\n                obj.autoPlay(markComplete);\n            } else {\n                markComplete();\n            }\n        });\n    }, 500);\n};\n\n/**\r\n * 运行自动的静态类型\r\n * @return {[type]} [description]\r\n */\nvar runComponent = function runComponent(pageObj, pageIndex, autoRunComponents, pageType) {\n\n    var chapterId = pageObj.baseGetPageId(pageIndex);\n    var dir = void 0;\n\n    if (pageIndex === undefined) {\n        pageIndex = Xut.Presentation.GetPageIndex();\n    }\n\n    _.each(autoRunComponents, function (data, index) {\n        dir = _index2.default[data.type];\n        if (dir && dir.autoPlay) {\n            dir.autoPlay({\n                'id': data.id,\n                'key': data.key,\n                'type': data.type,\n                'pageType': pageType,\n                'rootNode': pageObj.element,\n                'chapterId': chapterId,\n                'category': data.category,\n                'autoPlay': data.autoPlay,\n                'pageIndex': pageIndex\n            });\n        }\n    });\n};\n\nfunction autoRun(pageObj, pageIndex, taskAnimCallback) {\n\n    /**\r\n     * 编译IBOOKSCONFIG的时候过滤自动运行的调用\r\n     * @return {[type]}              [description]\r\n     */\n    if (Xut.IBooks.compileMode()) {\n        return;\n    }\n\n    //When the home button by invoking\n    //Does not perform automatic animation\n    //fix 2016.6.29\n    // originalApp\n    // window.miaomiaoxue.back = 1;\n    // activateApp\n    // window.miaomiaoxue.back = 0;\n    if (!(0, _backstage2.default)()) {\n        taskAnimCallback();\n        return;\n    }\n\n    //pageType\n    //用于区别触发类型\n    //页面还是母版\n    (0, _access.access)(pageObj, function (pageObj, ContentObjs, ComponentObjs, pageType) {\n\n        //如果是母版对象，一次生命周期种只激活一次\n        if (pageObj.pageType === 'master') {\n            if (pageObj.onceMaster) {\n                return;\n            }\n            pageObj.onceMaster = true;\n        }\n\n        taskAnimCallback = taskAnimCallback || function () {};\n\n        //自动运行的组件\n        var autoRunComponents = pageObj.baseAutoRun();\n        if (autoRunComponents) {\n            runComponent(pageObj, pageIndex, autoRunComponents, pageType);\n        }\n\n        //自动运行content\n        clearTimeout(contentTaskOutId);\n\n        if (ContentObjs) {\n            runContent(ContentObjs, taskAnimCallback);\n        } else {\n            taskAnimCallback(); //无动画\n        }\n\n        Xut.log('debug', pageType + '层，第' + (pageIndex + 1) + '页开始,本页面Id为' + pageObj.chapterId);\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/auto.js\n ** module id = 54\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.original = original;\n\nvar _access = require('./access');\n\n/**\r\n * 优化检测\r\n * @param  {Function} fn [description]\r\n * @return {[type]}      [description]\r\n */\nvar checkOptimize = function checkOptimize(fn) {\n    if (!Xut.config.scrollPaintingMode) {\n        fn && fn();\n    }\n};\n\n/**\r\n * 翻一页处理： 翻页完毕触发\r\n * 大量操作DOM结构，所以先隐藏根节点\r\n * 1 删除所有widget节点\r\n * 2 复位所有content节点\r\n * @param  {[type]} pageObj [description]\r\n * @return {[type]}         [description]\r\n */\n/**\r\n * 复位到初始化的状态\r\n * @return {[type]} [description]\r\n */\n\nfunction original(pageObj) {\n\n    (0, _access.access)(pageObj, function (pageObj, ContentObjs, ComponentObjs) {\n\n        //母版对象不还原\n        if (pageObj.pageType === 'master') return;\n\n        var element;\n\n        if (element = pageObj.element) {\n            checkOptimize(function () {\n                element.hide();\n            });\n\n            //销毁所有widget类型的节点\n            if (ComponentObjs) {\n                _.each(ComponentObjs, function (obj) {\n                    obj && obj.destroy();\n                });\n                //销毁widget对象管理\n                pageObj.baseRemoveComponent();\n            }\n\n            //停止动作\n            ContentObjs && _.each(ContentObjs, function (obj) {\n                if (!Xut.CreateFilter.has(obj.pageId, obj.id)) {\n                    obj.resetEffects && obj.resetEffects();\n                }\n            });\n\n            checkOptimize(function () {\n                setTimeout(function () {\n                    element.show();\n                    element = null;\n                }, 0);\n            });\n        }\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/original.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.recovery = recovery;\n\nvar _access = require('./access');\n\n/**\r\n * 复位状态/状态控制\r\n * 如果返回false证明有热点\r\n * 第一次只能关闭热点不能退出页面\r\n * @param  {[type]} pageObj [description]\r\n * @return {[type]}         [description]\r\n */\nfunction recovery(pageObj) {\n    return (0, _access.access)(pageObj, function (pageObj, ContentObjs, ComponentObjs) {\n        var falg = false;\n        _.each([ContentObjs, ComponentObjs], function (collectionObj) {\n            collectionObj && _.each(collectionObj, function (obj) {\n                //如果返回值是false,则是算热点处理行为\n                if (obj.recovery && obj.recovery()) {\n                    falg = true;\n                }\n            });\n        });\n        return falg;\n    });\n} /**\r\n   * 动作复位状态\r\n   * @return {[type]} [description]\r\n   */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/recovery.js\n ** module id = 56\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.suspend = suspend;\n\nvar _access = require('./access');\n\nvar _manager = require('../component/audio/manager');\n\nvar _manager2 = require('../component/video/manager');\n\n/**\r\n * 翻页停止content动作\r\n * 翻页时,暂停滑动页面的所有热点动作\r\n *\r\n * 如果传递了allHandle 停止所有的视频\r\n * allHandle 给接口Xut.Application.Original() 使用\r\n *\r\n * @param  {[type]} pageObj [description]\r\n * @param  {[type]} pageId  [description]\r\n * @param  {[type]} all     [description]\r\n * @return {[type]}         [description]\r\n */\nfunction suspend(pageObj, pageId, allHandle) {\n\n    (0, _access.access)(pageObj, function (pageObj, ContentObjs, ComponentObjs) {\n\n        //多媒体处理\n        if (pageId !== undefined) {\n            //离开页面销毁视频\n            (0, _manager2.removeVideo)(pageId);\n            //翻页停止母板音频\n            if (pageObj.pageType === 'master') {\n                (0, _manager.hangUpAudio)();\n            }\n        }\n\n        //content类型\n        if (ContentObjs) {\n            _.each(ContentObjs, function (obj) {\n                obj.flipOver && obj.flipOver();\n            });\n        }\n\n        //如果是外部调用接口\n        //销毁视频\n        //销毁所有的音频\n        if (allHandle) {\n            (0, _manager2.hangUpVideo)();\n            (0, _manager.hangUpAudio)();\n        }\n    });\n} /**\r\n   * 暂停控制\r\n   * @return {[type]} [description]\r\n   */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/suspend.js\n ** module id = 57\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.trigger = trigger;\n\nvar _index = require('../directive/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction trigger(target, attribute, rootNode, pageIndex) {\n\n    var key, tag, type, id, dir, data, pageType, instance;\n\n    if (key = target.id) {\n\n        tag = key.split('_');\n        type = tag[0];\n        id = tag[1];\n        dir = _index2.default[type];\n\n        if (dir && dir.eventDelegate) {\n\n            //获取页面类型\n            pageType = function () {\n                if (rootNode && rootNode.id) {\n                    return (/page/.test(rootNode.id) ? 'page' : 'master'\n                    );\n                } else {\n                    return 'page';\n                }\n            }();\n\n            data = {\n                \"id\": id,\n                \"activityId\": id,\n                \"key\": key,\n                \"type\": type,\n                \"rootNode\": rootNode,\n                \"target\": target,\n                \"pageIndex\": pageIndex,\n                'pageType': pageType\n            };\n\n            //如果是重复点击\n            if (instance = Xut.Application.GetSpecifiedObject(pageType, data)) {\n                if (instance.dispatchProcess) {\n                    //如果有对应的处理方法\n                    return instance.dispatchProcess();\n                }\n            }\n\n            //委派新的任务\n            dir.eventDelegate(data);\n        }\n    }\n} /**\r\n   * 手动触发控制\r\n   * @return {[type]} [description]\r\n   */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/command/trigger.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ActionClass = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *  动作对象\r\n跳转页面\r\n打开系统程序\r\n加载子文档\r\nr\nn\nvar _globalStop = require('../../global-stop');\n\nvar _nexttick = require('../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ActionClass = exports.ActionClass = function () {\n    function ActionClass(data) {\n        _classCallCheck(this, ActionClass);\n\n        _.extend(this, data);\n        this.id = parseInt(this.id);\n        this.actType = this.type;\n        this.init(Xut.data.query('Action', this.id, 'activityId'));\n    }\n\n    _createClass(ActionClass, [{\n        key: 'init',\n        value: function init(results) {\n\n            var para1 = results.para1; //跳转参数\n            var dbId = results._id;\n            var actionType = parseInt(results.actionType);\n\n            //跳转或打开本地程序\n            switch (actionType) {\n                case 0:\n                    this.toPage(para1);\n                    break;\n                case 1:\n                    if (Xut.plat.isBrowser) return;\n                    //打开插件\n                    Xut.Plugin.OpenApp.openAppAction(para1, function () {}, function () {});\n                    break;\n                case 2:\n                    //子文档处理\n                    this.loadSubdoc(para1, dbId);\n                    break;\n            }\n\n            this.state = true;\n        }\n    }, {\n        key: 'open',\n        value: function open() {}\n        // this.state = true;\n        //打开插件\n        // Xut.Plugin.OpenApp.openAppAction(para1, function() {}, function() {});\n\n\n        //跳转页面\n\n    }, {\n        key: 'toPage',\n        value: function toPage(para1) {\n            para1 = JSON.parse(para1);\n            if (para1.seasonId) {\n                Xut.View.GotoSlide(para1.seasonId, para1.chapterId);\n            } else {\n                //向下兼容\n                Xut.View.GotoSlide(para1);\n            }\n        }\n\n        //加载子文档\n\n    }, {\n        key: 'loadSubdoc',\n        value: function loadSubdoc(path, dbId) {\n            var self = this,\n                wapper;\n\n            //配置子文档加载路径\n            window.XXTSUbDOC = {\n                'path': path,\n                'dbId': dbId\n            };\n\n            this.subPath = path;\n\n            //构建子文档的容器\n            wapper = this.$wapper = this.createWapper();\n\n            (0, _nexttick2.default)({\n                'container': $(this.rootNode),\n                'content': wapper\n            }, function () {\n                self.destroyCache();\n            });\n        }\n\n        //iframe加载完毕\n\n    }, {\n        key: 'iframeComplete',\n        value: function iframeComplete() {\n            var self = this;\n            //关闭事件\n            Xut.one('subdoc:dropApp', function () {\n                self.destroyCache('iframe', self.iframe[0].contentWindow);\n            });\n            //隐藏全局工具栏\n            Xut.View.HideToolbar();\n            Xut.isRunSubDoc = true;\n            self.$wapper.css({\n                'opacity': '1'\n            });\n        }\n\n        //获取iframe颞部window上下文\n\n    }, {\n        key: 'destroyCache',\n        value: function destroyCache(contentWindow) {\n            var self = this,\n                iframe;\n            if (contentWindow) {\n                iframe = true;\n            } else {\n                contentWindow = window;\n            }\n\n            function clear() {\n                Xut.View.ShowToolbar();\n                self.$wapper.remove();\n                self.$wapper = null;\n                self.iframe = null;\n                self.rootNode = null;\n                Xut.isRunSubDoc = false;\n            }\n\n            try {\n\n                if (iframe) {\n                    //子文档操作\n                    if ((0, _globalStop.suspendHandles)()) {\n                        (0, _globalStop.promptMessage)('再按一次将退出子目录！');\n                    } else {\n                        clear();\n                    }\n                } else {\n                    //父级操作\n                    (0, _globalStop.suspendHandles)();\n                }\n            } catch (err) {\n                clear();\n            }\n        }\n    }, {\n        key: 'createWapper',\n        value: function createWapper() {\n            var zIndex, str, dom, ifr;\n            //层级设定\n            if (this.zIndex === 0) {\n                zIndex = this.zIndex;\n            } else {\n                zIndex = this.zIndex || Xut.zIndexlevel();\n            }\n            this.zIndex = zIndex;\n            str = '<div id=\"Subdoc_{0}\" style=\"z-index:{1};width:{2}px;height:{3}px;top:{4}px;left:{5}px;position:absolute;opacity:0\" >' + '</div>';\n            dom = String.format(str, this.id, zIndex, this.screenSize.width, this.screenSize.height, 0, 0);\n            ifr = this.iframe = this.createIframe();\n            return $(dom).append(ifr);\n        }\n\n        /**\r\n         * 加载iframe\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createIframe',\n        value: function createIframe() {\n            var me = this,\n                path = 'content/subdoc/' + this.subPath + '/index.html?xxtParaIn=' + this.key,\n                ifr = document.createElement('iframe');\n            ifr.id = 'iframe_' + this.id;\n            ifr.src = path;\n            ifr.style.width = '100%';\n            ifr.style.height = '100%';\n            ifr.sandbox = \"allow-scripts allow-same-origin\";\n            ifr.frameborder = 0;\n            if (ifr.attachEvent) {\n                ifr.attachEvent('onload', function () {\n                    me.iframeComplete();\n                });\n            } else {\n                ifr.onload = function () {\n                    me.iframeComplete();\n                };\n            }\n            return $(ifr);\n        }\n    }]);\n\n    return ActionClass;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/action/index.js\n ** module id = 59\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BookMark = undefined;\n\nvar _tap = require('../../../tap');\n\nvar _stroage = require('../../../util/stroage');\n\n/**\r\n * 书签栏\r\n * 加入这个书签功能后，可以让用户自由选择哪页是需要保存记录的\r\n * @param options object\r\n * @example {parent:页面容器,pageId:chapterId,seasonId:seasionId}\r\n */\n\nvar icons = {\n    hide: 'images/icons/arrowDown.svg'\n},\n    sLineHeiht = parseInt($('body').css('font-size')) || 16,\n    //行高\nBOOKCACHE; //书签缓存\n\nfunction BookMark(options) {\n    this.parent = options.parent;\n    this.pageId = options.pageId;\n    this.seasonId = options.seasonId;\n    //是否已存储\n    this.isStored = false;\n    this.init();\n}\n\n/**\r\n * 初始化\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.init = function () {\n    var $bookMark = this.createBookMark(),\n        dom = this.parent[0],\n        that = this;\n\n    this.parent.append($bookMark);\n    this.bookMarkMenu = $bookMark.eq(0);\n    //显示书签\n    setTimeout(function () {\n        that.restore();\n    }, 20);\n    //获取历史记录\n    BOOKCACHE = this.getHistory();\n\n    //邦定用户事件\n    (0, _tap.bindTap)(dom, {\n        end: this\n    });\n};\n\n/**\r\n * 创建书签\r\n * @return {[object]} [jquery生成的dom对象]\r\n */\nBookMark.prototype.createBookMark = function () {\n\n    var screenSize = Xut.config.screenSize;\n    var sHeight = screenSize.height;\n\n    var height = sLineHeiht * 3,\n        // menu的高为3em\n    box = '<div class=\"xut-bookmark-menu\" style=\"width:100%;height:{0}px;left:0;top:{1}px;\">' + '<div class=\"xut-bookmark-wrap\">' + '<div class=\"xut-bookmark-add\">加入书签</div>' + '<div class=\"xut-bookmark-off\" style=\"background-image:url({2})\"></div>' + '<div class=\"xut-bookmark-view\">书签记录</div>' + '</div>' + '</div>' + '<div class=\"xut-bookmark-list\" style=\"display:none;width:100%;height:{3}px;\">' + '<ul class=\"xut-bookmark-head\">' + '<li class=\"xut-bookmark-back\">返回</li>' + '<li>书签</li>' + '</ul>' + '<ul class=\"xut-bookmark-body\"></ul>' + '</div>';\n    box = String.format(box, height, sHeight, icons.hide, sHeight);\n    this.markHeight = height;\n    return $(box);\n};\n\n/**\r\n * 生成书签列表\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.createMarkList = function () {\n    var tmp,\n        seasonId,\n        pageId,\n        list = '',\n        self = this;\n\n    //取历史记录\n    _.each(BOOKCACHE, function (mark) {\n        tmp = mark.split('-');\n        seasonId = tmp[0];\n        pageId = tmp[1];\n        mark = self.getMarkId(seasonId, pageId);\n        list += '<li><a data-mark=\"' + mark + '\" class=\"xut-bookmark-id\" href=\"javascript:0\">第' + pageId + '页</a><a class=\"xut-bookmark-del\" data-mark=\"' + mark + '\" href=\"javascript:0\">X</a></li>';\n    });\n\n    return list;\n};\n\n/**\r\n * 创建存储标签\r\n * 存储格式 seasonId-pageId\r\n * @return {string} [description]\r\n */\nBookMark.prototype.getMarkId = function (seasonId, pageId) {\n    return seasonId + '-' + pageId;\n};\n\n/**\r\n * 获取历史记录\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.getHistory = function () {\n    var mark = (0, _stroage._get)('bookMark');\n    if (mark) {\n        return mark.split(',');\n    }\n    return [];\n};\n\n/**\r\n * 添加书签\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.addBookMark = function () {\n    var key;\n\n    this.updatePageInfo();\n    key = this.getMarkId(this.seasonId, this.pageId);\n\n    //避免重复缓存\n    if (BOOKCACHE.indexOf(key) > -1) {\n        return;\n    }\n    BOOKCACHE.push(key);\n    (0, _stroage._set)('bookMark', BOOKCACHE);\n};\n\n/**\r\n * 更新页信息\r\n *  针对母板层上的书签\r\n */\nBookMark.prototype.updatePageInfo = function () {\n    var pageData = Xut.Presentation.GetPageData();\n    this.pageId = pageData._id;\n    this.seasonId = pageData.seasonId;\n};\n\n/**\r\n * 删除书签\r\n * @param {object} [key] [事件目标对象]\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.delBookMark = function (target) {\n    if (!target || !target.dataset) return;\n\n    var key = target.dataset.mark,\n        index = BOOKCACHE.indexOf(key);\n\n    BOOKCACHE.splice(index, 1);\n    (0, _stroage._set)('bookMark', BOOKCACHE);\n\n    if (BOOKCACHE.length == 0) {\n        (0, _stroage._remove)('bookMark');\n    }\n\n    //移除该行\n    $(target).parent().remove();\n};\n\n/**\r\n * 显示书签\r\n * @param {object} [target] [事件目标对象]\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.viewBookMark = function (target) {\n    var $bookMarkList,\n        list = this.createMarkList();\n\n    if (this.bookMarkList) {\n        $bookMarkList = this.bookMarkList;\n    } else {\n        $bookMarkList = $(target).parent().parent().next();\n    }\n    //更新书签内容\n    $bookMarkList.find('.xut-bookmark-body').html(list);\n    this.bookMarkList = $bookMarkList;\n    $bookMarkList.fadeIn();\n};\n\n/**\r\n * 点击放大效果\r\n * @param  {[object]} target [事件目标对象]\r\n * @return {[type]}      [description]\r\n */\nBookMark.prototype.iconManager = function (target) {\n    var $icon = this.bookMarkIcon = $(target),\n        restore = this.iconRestore;\n    console.log(Xut.style);\n    $icon.css({\n        'transform': 'scale(1.2)',\n        'transition-duration': '500ms'\n    })[0].addEventListener(Xut.style.transitionEnd, restore.bind(this), false);\n};\n\n/**\r\n * 复原按钮\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.iconRestore = function () {\n    this.bookMarkIcon.css('transform', '');\n};\n\n/**\r\n * 跳转到书签页\r\n * @param  {[type]} target [description]\r\n * @return {[type]}        [description]\r\n */\nBookMark.prototype.goBookMark = function (target) {\n    if (!target || !target.dataset) return;\n\n    var key = target.dataset.mark.split('-'),\n        seasonId = Number(key[0]),\n        pageId = Number(key[1]);\n\n    this.updatePageInfo();\n    //关闭书签列表\n    this.backBookMark();\n\n    //忽略当前页的跳转\n    if (this.pageId == pageId && this.seasonId == seasonId) {\n        return;\n    }\n\n    Xut.View.LoadScenario({\n        'scenarioId': seasonId,\n        'chapterId': pageId\n    });\n};\n\n/**\r\n * 书签回退键\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.backBookMark = function () {\n    this.bookMarkList.fadeOut();\n};\n\n/**\r\n * 邦定事件\r\n * @param  {[type]} evt [事件]\r\n * @return {[type]}     [description]\r\n */\nBookMark.prototype.handleEvent = function (evt) {\n    var target = evt.target;\n    switch (target.className) {\n        //加入书签\n        case 'xut-bookmark-add':\n            this.addBookMark();\n            this.iconManager(target);\n            break;\n        //显示书签记录\n        case 'xut-bookmark-view':\n            this.viewBookMark(target);\n            this.iconManager(target);\n            break;\n        //关闭书签\n        case 'xut-bookmark-off':\n            this.closeBookMark(target);\n            break;\n        //返回书签主菜单\n        case 'xut-bookmark-back':\n            this.backBookMark();\n            break;\n        //删除书签记录\n        case 'xut-bookmark-del':\n            this.delBookMark(target);\n            break;\n        //跳转到书签页\n        case 'xut-bookmark-id':\n            this.goBookMark(target);\n            break;\n        default:\n            //console.log(target.className)\n            break;\n    }\n};\n\n/**\r\n * 关闭书签菜单\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.closeBookMark = function () {\n    this.bookMarkMenu.css({\n        transform: 'translate3d(0,0,0)',\n        'transition-duration': '1s'\n    });\n};\n\n/**\r\n * 恢复书签菜单\r\n */\nBookMark.prototype.restore = function () {\n    this.bookMarkMenu.css({\n        transform: 'translate3d(0,-' + this.markHeight + 'px,0)',\n        'transition-duration': '1s'\n    });\n};\n\n/**\r\n * 销毁书签\r\n * @return {[type]} [description]\r\n */\nBookMark.prototype.destroy = function () {\n    var dom = this.parent[0];\n\n    dom.removeEventListener('touchend', this, false);\n    dom.removeEventListener('mouseup', this, false);\n\n    //菜单部分\n    if (this.bookMarkMenu) {\n        this.bookMarkMenu.remove();\n        this.bookMarkMenu = null;\n    }\n\n    //列表部分\n    if (this.bookMarkList) {\n        this.bookMarkList.remove();\n        this.bookMarkList = null;\n    }\n\n    //按钮效果\n    if (this.bookMarkIcon) {\n        this.bookMarkIcon[0].removeEventListener(Xut.plat.transitionEnd, this.iconRestore, false);\n        this.bookMarkIcon = null;\n    }\n\n    this.parent = null;\n};\n\nexports.BookMark = BookMark;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/bookmark/bookmark.js\n ** module id = 60\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (activitProto) {\n\n    activitProto.createBookMark = function () {\n        var element, seasonId, pageId, pageData;\n        if (this.pageType === 'master') {\n            //模板取对应的页面上的数据\n            pageData = Xut.Presentation.GetPageData();\n            element = this.relatedData.floatMaters.container;\n            pageId = pageData._id;\n            seasonId = pageData.seasonId;\n        } else {\n            element = this.rootNode;\n            seasonId = this.relatedData.seasonId;\n            pageId = this.pageId;\n        }\n        var options = {\n            parent: element,\n            seasonId: seasonId,\n            pageId: pageId\n        };\n\n        if (this.bookMark) {\n            //如果上次只是隐藏则可以恢复\n            this.bookMark.restore();\n        } else {\n            this.bookMark = new _bookmark.BookMark(options);\n        }\n    };\n};\n\nvar _bookmark = require('./bookmark');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/bookmark/index.js\n ** module id = 61\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (base) {\n    var animation = base.seed.animation,\n        parallax = base.seed.parallax,\n\n    //抽出content对象\n    abstractContents = [],\n\n    //创建引用\n    batcheCreate = fnCreate(base);\n\n    switch (base.pageType) {\n        case 'page':\n            batcheCreate(animation, function (handlers) {\n                abstractContents.push(handlers);\n            });\n            break;\n        case 'master':\n            //母版层的处理\n            var tempParallaxScope = {},\n                tempAnimationScope = {},\n                tempAssistContents = [];\n            //视觉差处理\n            batcheCreate(parallax, function (handlers) {\n                tempParallaxScope[handlers.id] = handlers;\n            });\n\n            batcheCreate(animation, function (handlers) {\n                tempAnimationScope[handlers.id] = handlers;\n            });\n\n            var hasParallax = _.keys(tempParallaxScope).length,\n                hasAnimation = _.keys(tempAnimationScope).length;\n\n            //动画为主\n            //合并，同一个对象可能具有动画+视觉差行为\n            if (hasParallax && hasAnimation) {\n                _.each(tempAnimationScope, function (target) {\n                    var id = target.id;\n                    var source = tempParallaxScope[id];\n                    if (source) {\n                        //如果能找到就需要合并\n                        innerExtend(target, source); //复制方法\n                        target.processType = 'both'; //标记新组合\n                        delete tempParallaxScope[id]; //删除引用\n                    }\n                });\n                //剩余的处理\n                if (_.keys(tempParallaxScope).length) {\n                    _.extend(tempAnimationScope, tempParallaxScope);\n                }\n                tempParallaxScope = null;\n            }\n            //转化成数组\n            _.each(hasAnimation ? tempAnimationScope : tempParallaxScope, function (target) {\n                tempAssistContents.push(target);\n            });\n            abstractContents = tempAssistContents;\n            break;\n    }\n\n    batcheCreate = null;\n\n    return abstractContents;\n};\n\nvar _effects = require('./effects');\n\nvar _parallax = require('./parallax');\n\n//2016.7.15废弃\n//pixi暂时不使用\n// import { Context } from '../pixi/context'\n\n\n/**\r\n * 预运行动作\r\n * 自动 && 出现 && 无时间 && 无音乐\r\n *  && 不是精灵动画 && 没有脚本代码 && 并且不能是收费\r\n * @return {[type]}         [description]\r\n */\n/**\r\n * 创建执行对象\r\n * 1 动画作用域\r\n * 2 视觉差作用域\r\n * @type {Array}\r\n */\nvar preRunAction = function preRunAction(data, eventName) {\n    var para, state, category, parameter;\n    parameter = data.getParameter();\n\n    //过滤预生成动画\n    if (parameter.length === 1) {\n        category = data.contentDas.category;\n        para = parameter[0];\n        if (para.animationName === 'EffectAppear' && data.domMode //并且只有dom模式才可以，canvas排除\n        && eventName === 'auto' && !para.videoId && !para.delay && category !== 'Sprite' && category !== 'AutoCompSprite' && !para.preCode //动画前脚本\n        && !para.postCode //动画后脚本\n        && !/\"inapp\"/i.test(para.parameter)) {\n            //并且不能是收费处理\n\n            /**\r\n             *针对预处理动作,并且没有卷滚的不注册\r\n             *满足是静态动画\r\n             *true是显示,false隐藏å\r\n             */\n            var state = data.isRreRun = /\"exit\":\"False\"/i.test(para.parameter) === true ? 'visible' : 'hidden';\n\n            return state;\n        }\n    }\n};\n\n/**\r\n * 构建动画\r\n * @return {[type]} [description]\r\n */\nvar createScope = function createScope(base, contentId, pid, actName, parameter, hasParallax) {\n\n    //默认启动dom模式\n    var data = {\n        type: 'dom',\n        canvasMode: false,\n        domMode: true\n    };\n    var $contentProcess;\n    var pageType = base.pageType;\n    var contentName;\n    var canvasDom;\n    var contentDas = base.relatedData.contentDas[contentId];\n\n    //如果启动了canvas模式\n    //改成作用域的一些数据\n    if (base.canvasRelated.enable) {\n        //如果找到对应的canvas对象\n        if (-1 !== base.canvasRelated.cid.indexOf(contentId)) {\n            contentName = \"canvas_\" + pid + \"_\" + contentId;\n            canvasDom = base.getContextNode(contentName)[0];\n\n            //创建上下文pixi\n            if (contentDas.$contentProcess) {\n                $contentProcess = contentDas.$contentProcess;\n            } else {\n                // $contentProcess = Context(contentDas, canvasDom, base.pageIndex)\n                //保存canvas pixi的上下文引用\n                // base.relatedData.contentDas[contentId].$contentProcess = $contentProcess\n            }\n            data.type = 'canvas';\n            data.canvasMode = true;\n            data.domMode = false;\n        }\n    }\n\n    //如果是dom模式\n    if (!$contentProcess) {\n        /**\r\n         * 确保节点存在\r\n         * @type {[type]}\r\n         */\n        if (!($contentProcess = base.getContextNode(actName))) {\n            return;\n        }\n    }\n\n    /**\r\n     * 制作公共数据\r\n     * @type {Object}\r\n     */\n    _.extend(data, {\n        base: base,\n        id: contentId,\n        pid: pid,\n        actName: actName,\n        contentDas: contentDas,\n        $contentProcess: $contentProcess,\n        pageType: pageType,\n        pageIndex: base.pageIndex,\n        canvasRelated: base.canvasRelated,\n        nextTask: base.nextTask,\n        canvasDom: canvasDom\n    });\n\n    /**\r\n     * 如果是母版层理,视觉差处理\r\n     * processType 三种情况\r\n     *          parallax\r\n     *          animation\r\n     *          both(parallax,animation)\r\n     * @type {[type]}\r\n     */\n    if (hasParallax && pageType === 'master') {\n        data.processType = 'parallax';\n    } else {\n        data.processType = 'animation';\n    }\n\n    //生成查询方法\n    data.getParameter = function () {\n        //分区母版与页面的数据结构\n        //parameter-master-parallax\n        //parameter-master-animation\n        //parameter-page-animation\n        var fix = 'parameter-' + pageType + '-' + data.processType;\n        data[fix] = parameter;\n        return function () {\n            return data[fix];\n        };\n    }();\n\n    /**\r\n     * 生成视觉差作用域\r\n     * @type {[type]}\r\n     */\n    if (data.processType === 'parallax') {\n        //初始化视觉差对象的坐标偏移量\n        data.transformOffset = base.relatedData.transformOffset(data.id);\n        return _parallax.Parallax.call(base, data);\n    }\n\n    /**\r\n     *  优化机制,预生成处理\r\n     *  过滤自动热点并且是出现动作，没有时间，用于提升体验\r\n     */\n    preRunAction(data, base.eventData.eventName);\n\n    /**\r\n     * 生成子作用域对象，用于抽象处理动画,行为\r\n     */\n    return new _effects.Effects(data);\n};\n\n/**\r\n * 分解每个子作用域\r\n * 1 生成临时占位作用域,用于分段动画\r\n * 2 生成所有动画子作用域\r\n * @param  {[type]} parameter [description]\r\n * @return {[type]}           [description]\r\n */\nvar createHandlers = function createHandlers(base, parameter) {\n\n    //dom对象\n    var para = parameter[0],\n        contentId = para['contentId'],\n        //可能有多个动画数据 [Object,Object,Object]\n    pid = base.pid,\n        actName = base.makePrefix('Content', pid, contentId);\n\n    /**\r\n     * 构建子作用域\r\n     */\n    return createScope(base, contentId, pid, actName, parameter, para.masterId);\n};\n\n/**\r\n * 构建作用域\r\n * @return {[type]} [description]\r\n */\nvar fnCreate = function fnCreate(base) {\n    return function (data, callback) {\n        var para, handlers;\n        if (data && data.length) {\n            //生成动画作用域对象\n            while (para = data.shift()) {\n                if (handlers = createHandlers(base, para)) {\n                    callback(handlers);\n                }\n            }\n        }\n    };\n};\n\n/**\r\n * 源对象复制到目标对象\r\n */\nvar innerExtend = function innerExtend(target, source) {\n    var property;\n    for (property in source) {\n        if (target[property] === undefined) {\n            target[property] = source[property];\n        }\n    }\n};\n\n//处理itemArray绑定的动画对象\n//注入动画\n//绑定用户事件\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/content.js\n ** module id = 62\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Effects = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*********************************************************************\r\nr\ncontent的动画类对象\r\nppt 动画\r\n精灵动画\r\nshow/hide接口\r\ncanvas动画\r\nreturn {[type]} [description]\r\nr\nn\n\nvar _index = require('../plugin/ppt/index');\n\nvar _com = require('./sprite/com');\n\nvar _com2 = _interopRequireDefault(_com);\n\nvar _auto = require('./sprite/auto');\n\nvar _auto2 = _interopRequireDefault(_auto);\n\nvar _manager = require('../audio/manager');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//2016.7.15废弃\n//pixi暂时不使用\nvar pixiSpirit = {};\nvar pixiSpecial = {};\n\n// import { Sprite as pixiSpirit } from '../pixi/sprite/index'\n// import { specialSprite as pixiSpecial } from '../pixi/special/index'\n\n\n/**\r\n * 销毁动画音频\r\n * @param  {[type]} videoIds  [description]\r\n * @param  {[type]} chapterId [description]\r\n * @return {[type]}           [description]\r\n */\nvar destroyAudio = function destroyAudio(videoIds, chapterId) {\n    var isExist = false;\n    //如果有音频存在\n    videoIds && _.each(videoIds, function (data) {\n        //如果存在对象音频\n        if (data.videoId) {\n            isExist = true;\n            return 'breaker';\n        }\n    });\n    if (isExist) {\n        (0, _manager.clearContentAudio)(chapterId);\n    }\n};\n\n/**\r\n * 4种扩展对象\r\n * @type {Array}\r\n */\nvar OBJNAME = ['pptObj', 'pixiObj', 'comSpriteObj', 'autoSpriteObj'];\n\n/**\r\n * Traverse each value of OBJNAME\r\n * @param  {Function} callback [description]\r\n * @return {[type]}            [description]\r\n */\nvar access = function access(callback) {\n    OBJNAME.forEach(function (key) {\n        callback(key);\n    });\n};\n\n/**\r\n * 动画效果\r\n * @param {[type]} options [description]\r\n */\n\nvar Effects = exports.Effects = function () {\n    function Effects(options) {\n        _classCallCheck(this, Effects);\n\n        _.extend(this, options);\n    }\n\n    /**\r\n     * Build the canvas of animation\r\n     * 比较复杂\r\n     * 1 普通与ppt组合\r\n     * 2 高级与ppt组合\r\n     * 3 ppt独立\r\n     * 4 普通精灵动画\r\n     * 8  其中 高级精灵动画是widget创建，需要等待\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Effects, [{\n        key: '_buildCanvas',\n        value: function _buildCanvas(id, parameter, category, callback) {\n            var _this = this;\n\n            var actionTypes, makeOpts, createPixiPPT, $veiw, setState, initstate;\n\n            //动作类型\n            //可能是组合动画\n            actionTypes = this.contentDas.actionTypes;\n            makeOpts = {\n                data: this.contentDas,\n                renderer: this.$contentProcess,\n                pageIndex: this.pageIndex\n            };\n\n            //创建pixi上下文的ppt对象\n            createPixiPPT = function createPixiPPT() {\n                //parameter存在就是ppt动画\n                if ((parameter || actionTypes.pptId) && _this.$contentProcess.view) {\n                    _this.pptObj = callback(_index.PPT, $(_this.$contentProcess.view));\n                    _this.pptObj.contentId = id;\n                }\n            };\n\n            $veiw = this.$contentProcess.view;\n            if ($veiw) {\n                initstate = $veiw.getAttribute('data-init');\n            }\n\n            setState = function setState() {\n                $veiw.setAttribute('data-init', true);\n            };\n\n            //多个canvas对应多个ppt\n            //容器不需要重复创建\n            //精灵动画\n            if (actionTypes.spiritId) {\n                if (initstate) {\n                    createPixiPPT();\n                } else {\n                    //加入任务队列\n                    this.nextTask.context.add(id);\n                    this.pixiObj = new pixiSpirit(makeOpts);\n                    //防止多条一样的数据绑多个动画\n                    //构建精灵动画完毕后\n                    //构建ppt对象\n                    this.pixiObj.$once('load', function () {\n                        //ppt动画\n                        createPixiPPT();\n\n                        //任务完成\n                        _this.nextTask.context.remove(id);\n                    });\n                    setState();\n                }\n            }\n\n            //特殊高级动画\n            //必须是ppt与pixi绑定的\n            if (actionTypes.compSpriteId) {\n                // console.log(this,this.id,this.contentDas.initpixi)\n                //这个dom已经创建了pixi了\n                if (initstate) {\n                    createPixiPPT();\n                } else {\n                    this.pixiObj = new pixiSpecial(makeOpts);\n                    setState();\n\n                    //ppt动画\n                    createPixiPPT();\n                }\n            }\n        }\n\n        /**\r\n         * Build the dom of animation\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_buildDom',\n        value: function _buildDom(category, callback) {\n\n            if (category) {\n                var data = {\n                    id: this.id,\n                    data: this.contentDas,\n                    element: this.$contentProcess\n                };\n                switch (category) {\n                    //普通精灵动画\n                    case \"Sprite\":\n                        this.comSpriteObj = (0, _com2.default)(data);\n                        break;\n                    //普通转复杂精灵动画\n                    case \"AutoCompSprite\":\n                        this.autoSpriteObj = new _auto2.default(data);\n                        break;\n                }\n            }\n\n            //ppt动画\n            this.pptObj = callback(_index.PPT);\n        }\n\n        /**\r\n         * 绑定动画\r\n         * 为了向上兼容API\r\n         * element\r\n         *  1 dom动画\r\n         *  2 canvas动画\r\n         */\n\n    }, {\n        key: 'init',\n        value: function init(id, context, rootNode, chapterId, parameter, pageType) {\n            var _this2 = this;\n\n            var pageIndex = void 0,\n                create = void 0,\n                category = void 0;\n\n            category = this.contentDas.category;\n            pageIndex = this.pageIndex;\n            create = function create(constr, newContext) {\n                var element = newContext || context;\n                if (element.length) {\n                    return new constr(pageIndex, pageType, chapterId, element, parameter, rootNode);\n                } else {\n                    console.log(id, _this2);\n                }\n            };\n\n            //build\n            //dom mode\n            //canvas mode\n            this.domMode ? this._buildDom(category, create) : this._buildCanvas(id, parameter, category, create);\n        }\n\n        /**\r\n         * 运行动画\r\n         * @param  {[type]} scopeComplete   [动画回调]\r\n         * @param  {[type]} canvasContainer [description]\r\n         * @return {[type]}                 [description]\r\n         */\n\n    }, {\n        key: 'play',\n        value: function play(scopeComplete) {\n            var _this3 = this;\n\n            var element = this.$contentProcess;\n\n            //canvas\n            if (element && element.view) {\n                element = this.$contentProcess.view;\n            }\n\n            access(function (key) {\n                if (_this3[key]) {\n                    if (key === 'pptObj') {\n                        //优化处理,只针对互斥的情况下\n                        //处理层级关系\n                        if (element.prop && element.prop(\"mutex\")) {\n                            element.css({ //强制提升层级\n                                'display': 'block'\n                            });\n                        }\n                    }\n                    _this3[key].play && _this3[key].play(scopeComplete);\n                }\n            });\n        }\n\n        /**\r\n         * 停止动画\r\n         * @param  {[type]} chapterId [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop(chapterId) {\n            var _this4 = this;\n\n            access(function (key) {\n                if (_this4[key]) {\n                    if (key === 'pptObj') {\n                        //销毁ppt音频\n                        destroyAudio(_this4[key].options, chapterId);\n                    }\n                    _this4[key].stop && _this4[key].stop();\n                }\n            });\n        }\n\n        /**\r\n         * 翻页结束，复位上一页动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            var _this5 = this;\n\n            access(function (key) {\n                _this5[key] && _this5[key].reset && _this5[key].reset();\n            });\n        }\n\n        /**\r\n         * 销毁动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this6 = this;\n\n            access(function (key) {\n                _this6[key] && _this6[key].destroy && _this6[key].destroy();\n            });\n\n            //销毁renderer = new PIXI.WebGLRenderer\n            if (this.canvasMode) {\n                //rederer.destroy()\n                this.$contentProcess.view && this.$contentProcess.destroy();\n            }\n\n            //销毁每一个数据上的canvas上下文引用\n            if (this.contentDas.$contentProcess) {\n                this.contentDas.$contentProcess = null;\n            }\n\n            access(function (key) {\n                _this6[key] = null;\n            });\n\n            this.getParameter = null;\n        }\n    }]);\n\n    return Effects;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/effects.js\n ** module id = 63\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.complexEvent = complexEvent;\n\n/**\r\n * 优化hammer创建,生成必要配置文件\r\n * @return {[type]} [description]\r\n */\nfunction createRecognizers(eventName) {\n    var recognizers = [];\n    switch (eventName) {\n        //如果是swipe处理\n        case 'swipeleft':\n        case 'swiperight':\n        case 'swipeup':\n        case 'swipedown':\n            var direction = Hammer.DIRECTION_HORIZONTAL;\n            if (eventName === 'swipeup' || eventName === \"swipedown\") {\n                direction = Hammer.DIRECTION_VERTICAL;\n            }\n            recognizers.push([Hammer.Swipe, { 'direction': direction, 'velocity': 0.01 }]);\n            break;\n        case 'doubletap':\n            //双击\n            recognizers.push([Hammer.Tap]);\n            recognizers.push([Hammer.Tap, { event: 'doubletap', taps: 2 }, ['tap']]);\n            break;\n        case 'press':\n            //长按\n            recognizers.push([Hammer.Press]);\n            return;\n    }\n    return recognizers;\n}\n\n/**\r\n * 创建hammer引用\r\n * @return {[type]}         [description]\r\n */\nfunction createHammer(eventContext, eventName, supportSwipe) {\n    var eventReference;\n    var context = eventContext[0];\n    var recognizer = createRecognizers(eventName);\n    if (recognizer && recognizer.length) {\n        eventReference = Hammer(context, {\n            'recognizers': recognizer\n        });\n    } else {\n        eventReference = Hammer(context);\n    }\n    return eventReference;\n}\n\n/**\r\n * 复杂的事件\r\n * @return {[type]} [description]\r\n */\nfunction complexEvent(eventContext, eventName, eventHandler, supportSwipe) {\n    var eventReference = createHammer(eventContext, eventName, supportSwipe);\n    eventReference.on(eventName, function () {\n        eventHandler();\n    });\n    return eventReference;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/event/complex.js\n ** module id = 64\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 拖拽类\r\n */\nvar _class = function () {\n    function _class(dragElement, dropElement, autoReturn, dragCallback, dropCallback, container, throwProps) {\n        _classCallCheck(this, _class);\n\n        this.dragElement = dragElement;\n        this.defaultPoint = null;\n        this.dropElement = dropElement;\n        this.autoReturn = autoReturn >= 1 ? true : false; //1:自动返回(true) 0:留在原地(false)\n        this.dragCallback = typeof dragCallback == \"function\" ? dragCallback : null;\n        this.dropCallback = typeof dropCallback == \"function\" ? dropCallback : null;\n        this.throwProps = throwProps == false || this.autoReturn ? false : true;\n        this.container = container;\n        this.dragElement.attr(\"data-defaultindex\", this.dragElement.css(\"z-index\"));\n        //this.dragObject = null; //创建的拖拽对象实例\n        var isInit = this.dragElement.attr(\"data-DragDrop\");\n        if (isInit == null) {\n            this.init();\n            this.dragElement.attr(\"data-DragDrop\", true);\n        } else {\n            console.log(\"This element has binding DragDropClass.\");\n        }\n    }\n\n    /**\r\n     * 初始化拖拽\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(_class, [{\n        key: \"init\",\n        value: function init() {\n            if (this.dragObject != null) return;\n\n            var dragObject,\n                self = this,\n                defaultPoint;\n            //now make both boxes draggable.\n            dragObject = this.dragObject = Draggable.create(this.dragElement, {\n                bounds: this.container,\n                dragResistance: 0,\n                edgeResistance: 0.8,\n                type: \"left,top\", //rotation、scroll(x+y模式与PPT动画冲突)\n                force3D: false, //是否启用硬件加速(left+top模式无需启用，启用后存在闪现问题)\n                throwProps: this.throwProps,\n                snap: {\n                    left: function left(endValue) {\n                        return endValue;\n                    },\n                    top: function top(endValue) {\n                        return endValue;\n                    }\n                },\n                onDragStart: function onDragStart(e) {\n                    //获取拖拽对象原始参数\n                    var defaultOffset = self.dragElement.offset();\n                    self.defaultPoint = {\n                        x: defaultOffset.left,\n                        y: defaultOffset.top,\n                        left: Number(self.dragElement.css(\"left\").replace(\"px\", \"\")),\n                        top: Number(self.dragElement.css(\"top\").replace(\"px\", \"\"))\n                    };\n                    if (self.dragCallback) self.dragCallback();\n                },\n                onDragEnd: function onDragEnd(e) {\n                    var dropElement = self.dropElement,\n                        isEnter = false; //是否进入目标\n\n                    if (dropElement) {\n                        //获取拖拽对象当前参数\n                        var fromOffset = self.dragElement.offset();\n                        var fromPoint = {\n                            x: fromOffset.left,\n                            y: fromOffset.top,\n                            w: self.dragElement.width(),\n                            h: self.dragElement.height()\n                        };\n                        //获取目标对象参数\n                        var toOffset = dropElement.offset();\n                        var toPoint = {\n                            x: toOffset.left,\n                            y: toOffset.top,\n                            w: dropElement.width(),\n                            h: dropElement.height()\n                        };\n                        //目标对象中心点\n                        var targetCenter = {\n                            pointerX: toPoint.x + toPoint.w / 2,\n                            pointerY: toPoint.y + toPoint.h / 2\n                        };\n                        //拖拽点位于目标框中或目标中心点位于拖拽框中视为拖拽成功\n                        if (dragObject.pointerX > toPoint.x && dragObject.pointerX < toPoint.x + toPoint.w && dragObject.pointerY > toPoint.y && dragObject.pointerY < toPoint.y + toPoint.h) {\n                            isEnter = true;\n                            dragObject.disable();\n                        } else if (targetCenter.pointerX > fromPoint.x && targetCenter.pointerX < fromPoint.x + fromPoint.w && targetCenter.pointerY > fromPoint.y && targetCenter.pointerY < fromPoint.y + fromPoint.h) {\n                            isEnter = true;\n                            dragObject.disable();\n                        }\n                        self.dragElement.css(\"z-index\", self.dragElement.attr(\"data-defaultindex\"));\n                        //拖拽成功\n                        if (isEnter == true) {\n                            //结束后恢复层级关系\n                            // self.dragElement.css(\"z-index\", self.dragElement.attr(\"data-defaultindex\"));\n\n                            //拖拽对象与目标对象中心点差\n                            var moveX = targetCenter.pointerX - (self.defaultPoint.x + fromPoint.w / 2);\n                            var moveY = targetCenter.pointerY - (self.defaultPoint.y + fromPoint.h / 2);\n                            //拖拽对象最终停放位置\n                            var newLeft = self.defaultPoint.left + moveX;\n                            var newTop = self.defaultPoint.top + moveY;\n                            //自动拖拽到位\n                            TweenLite.to(self.dragElement, 0.30, {\n                                css: {\n                                    left: newLeft,\n                                    top: newTop\n                                },\n                                ease: Expo.easeOut\n                            });\n                        } else if (self.autoReturn) TweenLite.to(self.dragElement, 0.70, {\n                            css: {\n                                left: self.defaultPoint.left,\n                                top: self.defaultPoint.top\n                            }\n                        });\n                    } else if (self.autoReturn) TweenLite.to(self.dragElement, 0.70, {\n                        css: {\n                            left: self.defaultPoint.left,\n                            top: self.defaultPoint.top\n                        }\n                    });\n                    //调用结束事件\n                    if (self.dropCallback) self.dropCallback(isEnter);\n                }\n            })[0];\n        }\n\n        /**\r\n         * 复位动画与状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            var self = this;\n            var dragObject;\n            if (dragObject = this.dragObject) {\n                dragObject.enable();\n                if (self.defaultPoint) {\n                    self.dragElement.css(\"left\", self.defaultPoint.left);\n                    self.dragElement.css(\"top\", self.defaultPoint.top);\n                }\n                /*TweenLite.to(self.dragElement, 0, {\r\n                    css: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                });*/\n            }\n        }\n    }, {\n        key: \"disable\",\n        value: function disable() {\n            var dragObject;\n            if (dragObject = this.dragObject) {\n                dragObject.disable();\n            }\n        }\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.dragObject && this.dragObject.disable();\n            this.dropElement = null;\n            this.dragElement = null;\n            this.dragObject = null;\n        }\n    }]);\n\n    return _class;\n}();\n\nexports.default = _class;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/event/drag.js\n ** module id = 65\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (activitProto) {\n\n    /**\r\n     * 构建事件体系\r\n     * @return {[type]} [description]\r\n     */\n    activitProto.fillEventData = function () {\n\n        //配置事件节点\n        var eventId,\n            pid,\n            contentName,\n\n        //事件上下文对象\n        eventContext,\n            eventData = this.eventData;\n\n        pid = this.pid;\n\n        //如果存在imageIds才处理,单独绑定事件处理\n        if (eventId = eventData.eventContentId) {\n\n            //dom\n            //找到对应绑定事件的元素\n            var domEvent = function domEvent() {\n                contentName = this.makePrefix('Content', pid, this.id);\n                eventData.type = 'dom';\n                eventData.canvasMode = false;\n                eventData.domMode = true;\n            };\n\n            //canvas模式非常特别\n            //canvas容器+内部pixi对象\n            //所以事件绑定在最外面\n            var canvasEvent = function canvasEvent() {\n                contentName = this.makePrefix('canvas', pid, this.id);\n                eventData.type = 'canvas';\n                eventData.canvasMode = true;\n                eventData.domMode = false;\n            };\n\n            //canvas事件\n            if (-1 !== this.canvasRelated.cid.indexOf(eventId)) {\n                canvasEvent.call(this);\n            } else {\n                //dom事件\n                domEvent.call(this);\n            }\n\n            eventContext = this.getContextNode(contentName);\n            eventData.eventContext = eventContext;\n\n            if (eventContext) {\n                /**\r\n                 * 绑定事件加入到content钩子\r\n                 */\n                this.relatedCallback.contentsHooks(pid, eventId, {\n                    $contentProcess: eventContext,\n                    //增加外部判断\n                    isBindEventHooks: true,\n                    type: eventData.type\n                });\n            } else {\n                /**\r\n                 * 针对动态事件处理\r\n                 * 快捷方式引用到父对象\r\n                 * @type {[type]}\r\n                 */\n                eventData.parent = this;\n            }\n        }\n\n        /**\r\n         * 解析出事件类型\r\n         */\n        eventData.eventName = (0, _event.conversionEventType)(eventData.eventType);\n    };\n\n    /**\r\n     * 绑定事件行为\r\n     * @return {[type]} [description]\r\n     */\n    activitProto.bindEventBehavior = function (callback) {\n        var self = this,\n            eventData = this.eventData,\n            eventName = eventData.eventName,\n            eventContext = eventData.eventContext;\n\n        /**\r\n         * 运行动画\r\n         * @return {[type]} [description]\r\n         */\n        var startRunAnim = function startRunAnim() {\n            //当前事件对象没有动画的时候才能触发关联动作\n            var animOffset,\n                boundary = 5; //边界值\n\n            if (eventData.domMode && (animOffset = eventContext.prop('animOffset'))) {\n                var originalLeft = animOffset.left;\n                var originalTop = animOffset.top;\n                var newOffset = eventContext.offset();\n                var newLeft = newOffset.left;\n                var newTop = newOffset.top;\n                //在合理的动画范围是允许点击的\n                //比如对象只是一个小范围的内的改变\n                //正负10px的移动是允许接受的\n                if (originalLeft > newLeft - boundary && originalLeft < newLeft + boundary || originalTop > newTop - boundary && originalTop < newTop + boundary) {\n                    self.runEffects();\n                }\n            } else {\n                self.runEffects();\n            }\n        };\n\n        /**\r\n         * 设置按钮的行为\r\n         * 音频\r\n         * 反弹\r\n         */\n        var setBehavior = function setBehavior(feedbackBehavior) {\n\n            var behaviorSound;\n            //音频地址\n            if (behaviorSound = feedbackBehavior.behaviorSound) {\n\n                var createAuido = function createAuido() {\n                    return new _audio.audioPlayer({\n                        url: behaviorSound,\n                        trackId: 9999,\n                        complete: function complete() {\n                            this.play();\n                        }\n                    });\n                };\n                //妙妙学客户端强制删除\n                if (window.MMXCONFIG && window.audioHandler) {\n                    self._fixAudio.push(createAuido());\n                } else {\n                    createAuido();\n                }\n            }\n            //反弹效果\n            if (feedbackBehavior.isButton) {\n                //div通过css实现反弹\n                if (eventData.domMode) {\n                    eventContext.addClass('xut-behavior');\n                    setTimeout(function () {\n                        eventContext.removeClass('xut-behavior');\n                        startRunAnim();\n                    }, 500);\n                } else {\n                    console.log('feedbackBehavior');\n                }\n            } else {\n                startRunAnim();\n            }\n        };\n\n        /**\r\n         * 事件引用钩子\r\n         * 用户注册与执行\r\n         * @type {Object}\r\n         */\n        var eventDrop = {\n            //保存引用,方便直接销毁\n            init: function init(drag) {\n                eventData.dragDrop = drag;\n            },\n            //拖拽开始的处理\n            startRun: function startRun() {},\n            //拖拽结束的处理\n            stopRun: function stopRun(isEnter) {\n                if (isEnter) {\n                    //为true表示拖拽进入目标对象区域\n                    self.runEffects();\n                }\n            }\n        };\n\n        /**\r\n         * 正常动画执行\r\n         * 除去拖动拖住外的所有事件\r\n         * 点击,双击,滑动等等....\r\n         * @return {[type]} [description]\r\n         */\n        var eventRun = function eventRun() {\n            //如果存在反馈动作\n            //优先于动画执行\n            var feedbackBehavior;\n            if (feedbackBehavior = eventData.feedbackBehavior[eventData.eventContentId]) {\n                setBehavior(feedbackBehavior);\n            } else {\n                startRunAnim();\n            }\n        };\n\n        /**\r\n         * 事件对象引用\r\n         * @return {[type]} [description]\r\n         */\n        var eventHandler = function eventHandler(eventReference, _eventHandler) {\n            eventData.eventReference = eventReference;\n            eventData.eventHandler = _eventHandler;\n        };\n\n        //绑定用户自定义事件\n        if (eventContext && eventName) {\n\n            var domName, target, dragdropPara;\n\n            dragdropPara = eventData.dragdropPara;\n\n            //获取拖拽目标对象\n            if (eventName === 'dragTag') {\n                domName = this.makePrefix('Content', this.pid, dragdropPara);\n                target = this.getContextNode(domName);\n            }\n\n            //增加事件绑定标示\n            //针对动态加载节点事件的行为过滤\n            eventData.isBind = true;\n\n            (0, _event.bindEvents)({\n                'eventDrop': eventDrop,\n                'eventRun': eventRun,\n                'eventHandler': eventHandler,\n                'eventContext': eventContext,\n                'eventName': eventName,\n                'parameter': dragdropPara,\n                'target': target,\n                'domMode': eventData.domMode\n            });\n        }\n    };\n};\n\nvar _event = require('./event');\n\nvar _audio = require('../../audio/audio');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/event/index.js\n ** module id = 66\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.simpleEvent = simpleEvent;\n\nvar _tap = require('../../../tap');\n\n/**\r\n * ie10下面mouse事件怪异\r\n * @return {Boolean} [description]\r\n */\nvar isIE10 = document.documentMode === 10;\n\n/**\r\n * 针对canvas模式\r\n * 特殊的hack\r\n * 当前点击的元素是滑动元素\r\n * 处理元素的全局事件\r\n */\nfunction setCanvasStart(supportSwipe) {\n    Xut.Contents.Canvas.Reset();\n    Xut.Contents.Canvas.SupportSwipe = supportSwipe;\n    Xut.Contents.Canvas.isTap = true;\n}\n\nfunction setCanvasMove() {\n    Xut.Contents.Canvas.isSwipe = true;\n}\n\n/**\r\n * 兼容事件对象\r\n * @return {[type]}   [description]\r\n */\nfunction compatibilityEvent(e) {\n    var point;\n    if (e.touches && e.touches[0]) {\n        point = e.touches[0];\n    } else {\n        point = e;\n    }\n    return point;\n}\n\n/**\r\n * 如果是简单的点击事件\r\n */\nfunction simpleEvent(eventContext, eventHandle, supportSwipe) {\n\n    eventContext.isTap = false;\n\n    //这里单独绑定事件有个问题,单击move被触发\n    //如果停止e.stopPropagation，那么默认行为就不会被触发\n    //你绑定单击的情况下可以翻页\n    //这里通过坐标的位置来判断\n    var start = function start(e) {\n        var point = compatibilityEvent(e);\n        //记录开始坐标\n        eventContext.pageX = point.pageX;\n        //是否是tap事件\n        eventContext.isTap = true;\n        setCanvasStart(supportSwipe);\n    };\n\n    var move = function move(e) {\n        if (!eventContext.isTap) {\n            return;\n        }\n        var point = compatibilityEvent(e),\n            deltaX = point.pageX - eventContext.pageX;\n        //如果有move事件，则取消tap事件\n        if (Math.abs(deltaX)) {\n            eventContext.isTap = false;\n            setCanvasMove(supportSwipe);\n        }\n    };\n\n    var end = function end() {\n        //触发tap事件\n        eventContext.isTap && eventHandle();\n    };\n\n    eventContext = eventContext[0];\n\n    //IE10是不支持touch事件，直接绑定click事件\n    if (isIE10) {\n        eventContext.isTap = true;\n        eventContext.addEventListener('click', end, false);\n    } else {\n\n        (0, _tap.bindTap)(eventContext, {\n            start: start,\n            move: move,\n            end: end\n        });\n    }\n\n    return {\n        off: function off() {\n            if (eventContext) {\n                if (isIE10) {\n                    eventContext.removeEventListener('click', end, false);\n                } else {\n                    (0, _tap.offTap)(eventContext, {\n                        start: start,\n                        move: move,\n                        end: end\n                    });\n                }\n                eventContext = null;\n            }\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/event/simple.js\n ** module id = 67\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (activitProto) {\n\n    /**\r\n     * 增加翻页特性\r\n     * 可能有多个引用关系\r\n     * @return {[type]}         [description]\r\n     */\n    activitProto.addIScroll = function (scope, element) {\n        var self = this,\n\n        // elementName,\n        contentDas = scope.contentDas;\n\n        //给外部调用处理\n        function makeUseFunction(element) {\n\n            var prePocess = self.makePrefix('Content', scope.pid, scope.id),\n                preEle = self.getContextNode(prePocess);\n\n            //重置元素的翻页处理\n            // defaultBehavior(preEle);\n\n            //ios or pc\n            if (!Xut.plat.isAndroid) {\n                return function () {\n                    self.iscroll = (0, _iscroll.Iscroll)(element);\n                };\n            }\n\n            //在安卓上滚动文本的互斥不显示做一个补丁处理\n            //如果是隐藏的,需要强制显示,待邦定滚动之后再还原\n            //如果是显示的,则不需要处理,\n            var visible = preEle.css('visibility'),\n                restore = function restore() {};\n\n            if (visible == 'hidden') {\n                var opacity = preEle.css('opacity');\n                //如果设置了不透明,则简单设为可见的\n                //否则先设为不透明,再设为可见\n                if (opacity == 0) {\n                    preEle.css({\n                        'visibility': 'visible'\n                    });\n                    restore = function restore() {\n                        preEle.css({\n                            'visibility': visible\n                        });\n                    };\n                } else {\n                    preEle.css({\n                        'opacity': 0\n                    }).css({\n                        'visibility': 'visible'\n                    });\n                    restore = function restore() {\n                        preEle.css({\n                            'opacity': opacity\n                        }).css({\n                            'visibility': visible\n                        });\n                    };\n                }\n            }\n\n            return function () {\n\n                restore();\n                preEle = null;\n                restore = null;\n            };\n        }\n\n        //增加卷滚条\n        if (contentDas.isScroll) {\n            //去掉高度，因为有滚动文本框\n            element.find(\">\").css(\"height\", \"\");\n            this.relatedCallback.iscrollHooks.push(makeUseFunction(element[0]));\n        }\n\n        //如果是图片则补尝允许范围内的高度\n        if (!contentDas.mask || !contentDas.isGif) {\n            element.find && element.find('img').css({\n                'height': contentDas.scaleHeight\n            });\n        }\n    };\n\n    /**\r\n     * 制作一个查找标示\r\n     * @return {[type]}\r\n     */\n    activitProto.makePrefix = function (name, pid, id) {\n        return name + \"_\" + pid + \"_\" + id;\n    };\n\n    /**\r\n     * 从文档碎片中找到对应的dom节点\r\n     * 查找的范围\r\n     * 1 文档根节点\r\n     * 2 文档容器节点\r\n     * @param  {[type]} prefix [description]\r\n     * @return {[type]}        [description]\r\n     */\n    activitProto.getContextNode = function (prefix, type) {\n\n        var element, containerPrefix, contentsFragment;\n\n        // //canvas模式\n        // if (type === 'canvas') {\n        //     //直接在root查找，因为canvasdom是pxixi创建的\n        //     //不能在文档碎片中查找\n        //     return element = this.rootNode.find('#' + prefix);\n        // }\n\n        //dom模式\n        contentsFragment = this.relatedData.contentsFragment;\n        if (element = contentsFragment[prefix]) {\n            element = $(element);\n        } else {\n            //容器处理\n            if (containerPrefix = this.relatedData.containerPrefix) {\n                _.each(containerPrefix, function (containerName) {\n                    element = contentsFragment[containerName];\n                    element = $(element).find('#' + prefix);\n                    if (element.length) {\n                        return;\n                    }\n                });\n            }\n        }\n        return element;\n    };\n};\n\nvar _iscroll = require('./iscroll');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/extra.js\n ** module id = 68\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.contentFilter = contentFilter;\n\nvar _index = require('../../util/index');\n\n/**\r\n * content对象的创建过滤器\r\n * 用于阻断对象的创建\r\n */\nfunction contentFilter(filterName) {\n\n    //过滤的节点\n    var listFilters = function () {\n        var values = getCache();\n        var h = (0, _index.hash)();\n        if (values) {\n            //keep the listFilters has no property\n            _.each(values, function (v, i) {\n                h[i] = v;\n            });\n        }\n        return h;\n    }();\n\n    function setCache(listFilters) {\n        (0, _index._save)(filterName, listFilters);\n    }\n\n    function getCache() {\n        var jsonStr = (0, _index._get)(filterName);\n        return (0, _index.parseJSON)(jsonStr);\n    }\n\n    function access(callback, pageId, contentId) {\n        //如果是transformFilter,不需要pageIndex处理\n        if (filterName === 'transformFilter' && contentId === undefined) {\n            contentId = pageId;\n            pageId = 'transformFilter';\n        }\n        return callback(pageId, Number(contentId));\n    }\n\n    return {\n        add: function add(pageId, contentId) {\n            access(function (pageId, contentId) {\n                if (!listFilters[pageId]) {\n                    listFilters[pageId] = [];\n                }\n                //去重\n                if (-1 === listFilters[pageId].indexOf(contentId)) {\n                    listFilters[pageId].push(contentId);\n                    setCache(listFilters);\n                }\n            }, pageId, contentId);\n        },\n        remove: function remove(pageId, contentId) {\n            access(function (pageId, contentId) {\n                var target = listFilters[pageId] || [],\n                    index = target.indexOf(contentId);\n                if (-1 !== index) {\n                    target.splice(index, 1);\n                    setCache(listFilters);\n                }\n            }, pageId, contentId);\n        },\n        has: function has(pageId, contentId) {\n            return access(function (pageId, contentId) {\n                var target = listFilters[pageId];\n                return target ? -1 !== target.indexOf(contentId) ? true : false : false;\n            }, pageId, contentId);\n        },\n\n\n        /**\r\n         * 创建过滤器\r\n         * @param  {[type]} pageId [description]\r\n         * @return {[type]}        [description]\r\n         */\n        each: function each(pageId) {\n            return access(function (pageId, contentId) {\n                var target, indexOf;\n                if (target = listFilters[pageId]) {\n                    return function (contentIds, callback) {\n                        _.each(target, function (ids) {\n                            var indexOf = contentIds.indexOf(ids);\n                            if (-1 !== indexOf) {\n                                callback(indexOf); //如果找到的过滤项目\n                            }\n                        });\n                    };\n                }\n            }, pageId);\n        },\n\n\n        //过滤器数量\n        size: function size() {\n            return _.keys(listFilters).length;\n        },\n        empty: function empty() {\n            (0, _index._remove)(filterName);\n            listFilters = {};\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/filter.js\n ** module id = 69\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Activity = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*******************************************\r\n文本类\r\n处理:\r\n异步转同步deferred处理\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *       2 dom结循环创建\r\n创建的四种行为\r\n默认创建结构绑定事件\r\n用于预先创建activityMode模式,分发动画与事件\r\n递归创建,关联子热点\r\nppt文字动画,不创建主体结构,递归子热点\r\n递归处理PPT动画\r\n处理同步音频\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *                                      *\r\nn\nvar _content = require('./content');\n\nvar _content2 = _interopRequireDefault(_content);\n\nvar _task = require('./task');\n\nvar _task2 = _interopRequireDefault(_task);\n\nvar _event = require('./event/event');\n\nvar _extra = require('./extra');\n\nvar _extra2 = _interopRequireDefault(_extra);\n\nvar _index = require('./textbox/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./bookmark/index');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('./searchbar/index');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('./event/index');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _fix = require('../audio/fix');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 处理拖动对象\r\n * @return {[type]} [description]\r\n */\nfunction accessDrop(eventData, callback) {\n    if (eventData && eventData.dragDrop) {\n        callback(eventData.dragDrop);\n    }\n}\n\nvar Activity = exports.Activity = function () {\n\n    /**\r\n     * activity触发器类\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    function Activity(data) {\n        _classCallCheck(this, Activity);\n\n        _.extend(this, data);\n\n        /**\r\n         * 2016.4.11\r\n         * 检测是所有的子任务必须完成\r\n         * 因为canvas模式导致\r\n         * 任务必须等待context上下创建\r\n         * context就是pixi的直接对象，精灵..都是异步的\r\n         */\n        this.nextTask = (0, _task2.default)(this.noticeComplete);\n\n        /**\r\n         * 填充事件数据\r\n         */\n        this.fillEventData();\n\n        /**\r\n         * 保存子对象content\r\n         * @type {Array}\r\n         */\n        this.abstractContents = (0, _content2.default)(this);\n\n        /**\r\n         * 处理html文本框\r\n         * 2016.1.6\r\n         */\n        this.htmlTextBox();\n\n        /**\r\n         * 绑定事件\r\n         */\n        this.bindEventBehavior();\n\n        /**\r\n         * 初始化content行为\r\n         */\n        this._initContents();\n\n        /**\r\n         * 2016.2.26\r\n         * 修复妙妙学\r\n         * 妙妙客户端处理\r\n         * 点击效果的音频处理\r\n         * @type {Array}\r\n         */\n        this._fixAudio = [];\n\n        /**\r\n         * 如果存在content\r\n         * 等待创建执行\r\n         * @param  {[type]} this.nextTask.context.length()\r\n         * @return {[type]}\r\n         */\n        if (this.nextTask.context.length()) {\n            this.nextTask.context.wait = true;\n            return this;\n        }\n\n        /**\r\n         * 如果没有pixi的异步创建\r\n         * 同步代码直接完成\r\n         */\n        this.noticeComplete();\n    }\n\n    /**\r\n     * 初始化content行为\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Activity, [{\n        key: '_initContents',\n        value: function _initContents() {\n\n            var pageId, rootNode, collectorHooks, pageType;\n\n            pageId = this.relatedData.pageId;\n            rootNode = this.rootNode;\n            collectorHooks = this.relatedCallback.contentsHooks;\n            pageType = this.pageType;\n\n            this.eachAssistContents(function (scope) {\n\n                var context, id, isRreRun, parameter;\n\n                //针对必须创建\n                if (!(context = scope.$contentProcess)) {\n                    console.log('$contentProcess不存在');\n                    return;\n                }\n\n                //如果是视觉差对象，也需要实现收集器\n                if (scope.processType === 'parallax') {\n                    collectorHooks(scope.pid, scope.id, scope);\n                    return;\n                }\n\n                //如果是动画才处理\n                id = scope.id;\n                isRreRun = scope.isRreRun;\n                parameter = scope.getParameter();\n\n                //如果不是预生成,注册动画事件\n                if (isRreRun === undefined) {\n                    //初始化动画\n                    scope.init(id, context, rootNode, pageId, parameter, pageType);\n                }\n\n                //绑定DOM一些属性\n                this._toRepeatBind(id, context, isRreRun, scope, collectorHooks);\n            });\n        }\n\n        /**\r\n         * dom节点去重绑定\r\n         * 在每一次构建activity对象中，不重复处理content一些特性\r\n         * 1 翻页特性\r\n         * 2 注册钩子\r\n         * 3 预显示\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_toRepeatBind',\n        value: function _toRepeatBind(id, context, isRreRun, scope, collectorHooks) {\n            var indexOf, relatedData;\n\n            relatedData = this.relatedData;\n\n            //过滤重复关系\n            //每个元素只绑定一次\n            if (-1 !== (indexOf = relatedData.createContentIds.indexOf(id))) {\n                //删除,去重\n                relatedData.createContentIds.splice(indexOf, 1);\n                //收集每一个content注册\n                collectorHooks(scope.pid, id, scope);\n                //增加翻页特性\n                this.addIScroll(scope, context);\n                //直接复位状态,针对出现动画 show/hide\n                if (isRreRun) {\n                    //直接改变元素状态\n                    context.css({\n                        'visibility': isRreRun\n                    });\n                }\n            }\n        }\n\n        /**\r\n         * 复位独立动画\r\n         * 提供快速翻页复用\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_resetAloneAnim',\n        value: function _resetAloneAnim() {\n            //复位拖动对象\n            accessDrop(this.eventData, function (drop) {\n                drop.reset();\n            });\n        }\n\n        /**\r\n         * 动画运行之后\r\n         * 1 创建一个新场景\r\n         * 2 执行跳转到收费提示页面\r\n         * 3 触发搜索工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_relevantOperation',\n        value: function _relevantOperation() {\n\n            var scenarioInfo, eventContentId;\n\n            //触发事件的content id\n            if (this.eventData) {\n                eventContentId = this.eventData.eventContentId;\n            }\n\n            if (eventContentId) {\n\n                //查找出当前节的所有信息\n                if (scenarioInfo = this.relatedData.seasonRelated[eventContentId]) {\n\n                    //如果存在搜索栏触发\n                    if (scenarioInfo.SearchBar) {\n                        this.createSearchBar();\n                        return;\n                    }\n\n                    //如果存在书签\n                    if (scenarioInfo.BookMarks) {\n                        this.createBookMark();\n                        return;\n                    }\n\n                    //处理新的场景\n                    if (scenarioInfo.seasonId || scenarioInfo.chapterId) {\n                        setTimeout(function () {\n                            Xut.View.LoadScenario({\n                                'scenarioId': scenarioInfo.seasonId,\n                                'chapterId': scenarioInfo.chapterId\n                            });\n                        }, (0, _fix.hasAudioes)() ? 1000 : 0);\n                        return;\n                    }\n\n                    // console.log('content跳转信息出错',scenarioInfo)\n                }\n            }\n        }\n\n        /**\r\n         * 保证正确遍历\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'eachAssistContents',\n        value: function eachAssistContents(callback) {\n            _.each(this.abstractContents, function (scope) {\n                callback.call(this, scope);\n            }, this);\n        }\n\n        /**\r\n         * 运行动画\r\n         * @param  {[type]} outComplete [动画回调]\r\n         * @return {[type]}             [description]\r\n         * evenyClick 每次都算有效点击\r\n         */\n\n    }, {\n        key: 'runEffects',\n        value: function runEffects(outComplete, evenyClick) {\n\n            var self, pageId, partContentRelated, closeAnim, captureAnimComplete;\n\n            self = this;\n            pageId = this.relatedData.pageId;\n\n            if (evenyClick) {\n                self.preventRepeat = false;\n            }\n\n            //防止重复点击\n            if (self.preventRepeat) {\n                return false;\n            }\n\n            self.preventRepeat = true;\n\n            //如果没有运行动画\n            if (!self.seed.animation) {\n                self.preventRepeat = false;\n                self._relevantOperation();\n                return;\n            }\n\n            //创建的无行为content\n            partContentRelated = self.relatedData.partContentRelated;\n\n            //制作作用于内动画完成\n            //等待动画完毕后执行动作or场景切换\n            captureAnimComplete = self.captureAnimComplete = function (counts) {\n                return function (scope) {\n                    //动画结束,删除这个hack\n                    scope && scope.$contentProcess && scope.$contentProcess.removeProp && scope.$contentProcess.removeProp('animOffset');\n\n                    //如果快速翻页\n                    //运行动画的时候，发现不是可视页面\n                    //需要关闭这些动画\n                    closeAnim = pageId != Xut.Presentation.GetPageId();\n\n                    if (closeAnim && scope) {\n                        scope.stop && scope.stop(pageId);\n                        scope.reset && scope.reset();\n                    }\n\n                    //捕获动画状态\n                    if (counts === 1) {\n                        if (closeAnim) {\n                            //复位动画\n                            self._resetAloneAnim();\n                        }\n                        self.preventRepeat = false;\n                        self._relevantOperation();\n                        outComplete && outComplete();\n                        self.captureAnimComplete = null;\n                    } else {\n                        --counts;\n                    }\n                };\n            }(this.abstractContents.length);\n\n            /**\r\n             * 如果是preRun处理\r\n             * @return {Boolean} [description]\r\n             */\n            function isRreRunPocess(scope) {\n                //针对空跳过处理\n                if (partContentRelated && partContentRelated.length && -1 !== partContentRelated.indexOf(scope.id)) {\n                    captureAnimComplete();\n                } else {\n                    //必须要修改\n                    if (scope.$contentProcess) {\n                        if (scope.canvasMode) {\n                            console.log('canvsa isRreRunPocess');\n                            //直接改变元素状态\n                            //scope.$contentProcess.view.style.visible = scope.isRreRun === 'visible' ? true : false;\n                        } else {\n                            //因为执行的顺序问题，动画与页面零件\n                            //isscroll标记控制\n                            if (!scope.$contentProcess.attr('isscroll')) {\n                                scope.$contentProcess.css({\n                                    'visibility': scope.isRreRun\n                                });\n                            }\n                        }\n                    }\n                    captureAnimComplete();\n                }\n            }\n\n            //执行动画\n            this.eachAssistContents(function (scope) {\n                if (scope.isRreRun) {\n                    isRreRunPocess(scope);\n                } else {\n\n                    //标记动画正在运行\n                    scope.$contentProcess && scope.$contentProcess.prop && scope.$contentProcess.prop({\n                        'animOffset': scope.$contentProcess.offset()\n                    });\n\n                    //ppt动画\n                    //ppt音频\n                    scope.play(function () {\n                        captureAnimComplete(scope);\n                    });\n                }\n            });\n\n            this.runState = true;\n        }\n\n        /**\r\n         * 停止动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'stopEffects',\n        value: function stopEffects() {\n            var pageId = this.relatedData.pageId;\n            this.runState = false;\n            this.eachAssistContents(function (scope) {\n                !scope.isRreRun && scope.stop && scope.stop(pageId);\n            });\n        }\n\n        /**\r\n         * 复位状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'resetEffects',\n        value: function resetEffects() {\n            this.eachAssistContents(function (scope) {\n                !scope.isRreRun && scope.reset && scope.reset(); //ppt动画\n            });\n\n            this._resetAloneAnim();\n        }\n\n        /**\r\n         * 销毁动画\r\n         * @param  {[type]} elementCallback [description]\r\n         * @return {[type]}                 [description]\r\n         */\n\n    }, {\n        key: 'destroyEffects',\n        value: function destroyEffects(elementCallback) {\n            //销毁拖动对象\n            accessDrop(this.eventData, function (drop) {\n                drop.destroy();\n            });\n            this.eachAssistContents(function (scope) {\n                if (scope.destroy) {\n                    scope.destroy();\n                }\n                elementCallback && elementCallback(scope);\n            });\n        }\n\n        /**\r\n         * 自动运行\r\n         * @param  {[type]} outComplete [description]\r\n         * @return {[type]}             [description]\r\n         */\n\n    }, {\n        key: 'autoPlay',\n        value: function autoPlay(outComplete) {\n            var eventData = this.eventData;\n            if (eventData && eventData.eventName === 'auto') {\n                this.runEffects(outComplete);\n            } else {\n                outComplete();\n            }\n        }\n\n        /**\r\n         * 翻页开始\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'flipOver',\n        value: function flipOver() {\n            if (this.runState) {\n                this.stopEffects();\n            }\n            this.preventRepeat = false;\n            //复位盒子\n            if (this.htmlBoxInstance.length) {\n                _.each(this.htmlBoxInstance, function (instance) {\n                    instance.removeBox();\n                });\n            }\n            //修复妙妙客户端\n            //没有点击音频结束的回调\n            //最多允许播放5秒\n            if (this._fixAudio.length) {\n                _.each(this._fixAudio, function (instance) {\n                    setTimeout(function () {\n                        instance.end();\n                    }, 5000);\n                });\n                this._fixAudio = [];\n            }\n        }\n\n        /**\r\n         * 翻页完成复位动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'flipComplete',\n        value: function flipComplete() {\n            this.resetEffects();\n        }\n\n        //销毁\n        //提供一个删除回调\n        //用于处理浮动对象的销毁\n\n    }, {\n        key: 'destroy',\n        value: function destroy(elementCallback) {\n\n            //销毁绑定事件\n            if (this.eventData.eventContext) {\n                (0, _event.destroyEvents)(this.eventData);\n                this.eventData.eventContext = null;\n            }\n\n            //2016.1.7\n            //如果有文本框事件\n            //一个activity允许有多个文本框\n            //所以是数组索引\n            if (this.htmlBoxInstance.length) {\n                _.each(this.htmlBoxInstance, function (instance) {\n                    instance.destroy();\n                });\n                this.htmlBoxInstance = null;\n            }\n\n            //销毁动画\n            this.destroyEffects(elementCallback);\n\n            //iscroll销毁\n            if (this.iscroll) {\n                this.iscroll.destroy();\n                this.iscroll = null;\n            }\n\n            //销毁搜索框\n            if (this.searchBar) {\n                this.searchBar.destroy();\n                this.searchBar = null;\n            }\n\n            //销毁书签\n            if (this.bookMark) {\n                this.bookMark.destroy();\n                this.bookMark = null;\n            }\n\n            this.rootNode = null;\n        }\n\n        /**\r\n         * 复位\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'recovery',\n        value: function recovery() {\n            if (this.runState) {\n                this.stopEffects();\n                return true;\n            }\n            return false;\n        }\n    }]);\n\n    return Activity;\n}();\n\nvar activitProto = Activity.prototype;\n\n(0, _extra2.default)(activitProto);\n(0, _index2.default)(activitProto);\n(0, _index4.default)(activitProto);\n(0, _index6.default)(activitProto);\n(0, _index8.default)(activitProto);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/index.js\n ** module id = 70\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Parallax = Parallax;\n\nvar _index = require('../../config/index');\n\nvar transform = Xut.style.transform;\n\n/**\r\n * 变化节点的css3transform属性\r\n * @param  {[type]} rootNode   [description]\r\n * @param  {[type]} property   [description]\r\n * @param  {[type]} pageOffset [description]\r\n * @return {[type]}            [description]\r\n */\n/**\r\n * 视觉差对象初始化操作\r\n */\n\nfunction transformNodes(rootNode, property, pageOffset) {\n    var style = {},\n        effect = '',\n        parallaxOffset,\n        //最终的偏移量X\n    x = 0,\n        y = 0,\n        z = 0,\n        round = Math.round;\n\n    //浮动对象初始化偏移量\n    parallaxOffset = pageOffset;\n\n    if (property.translateX != undefined || property.translateY != undefined || property.translateZ != undefined) {\n        x = round(property.translateX) || 0;\n        y = round(property.translateY) || 0;\n        z = round(property.translateZ) || 0;\n        parallaxOffset += x;\n        effect += String.format('translate3d({0}px,{1}px,{2}px) ', parallaxOffset, y, z);\n    }\n\n    if (property.rotateX != undefined || property.rotateY != undefined || property.rotateZ != undefined) {\n        x = round(property.rotateX);\n        y = round(property.rotateY);\n        z = round(property.rotateZ);\n        effect += x ? 'rotateX(' + x + 'deg) ' : '';\n        effect += y ? 'rotateY(' + y + 'deg) ' : '';\n        effect += z ? 'rotateZ(' + z + 'deg) ' : '';\n    }\n\n    if (property.scaleX != undefined || property.scaleY != undefined || property.scaleZ != undefined) {\n        x = round(property.scaleX * 100) / 100 || 1;\n        y = round(property.scaleY * 100) / 100 || 1;\n        z = round(property.scaleZ * 100) / 100 || 1;\n        effect += String.format('scale3d({0},{1},{2}) ', x, y, z);\n    }\n\n    if (property.opacity != undefined) {\n        style.opacity = round((property.opacityStart + property.opacity) * 100) / 100;\n        effect += ';';\n    }\n\n    if (effect) {\n        style[transform] = effect;\n        rootNode.css(style);\n    }\n\n    return parallaxOffset;\n}\n\n/**\r\n * 转换成比例值\r\n * @param  {[type]} parameters [description]\r\n * @return {[type]}            [description]\r\n */\nfunction conversionRatio(parameters) {\n    if (parameters.opacityStart > -1) {\n        parameters.opacity = (parameters.opacityEnd || 1) - parameters.opacityStart;\n        delete parameters.opacityEnd;\n    }\n    return parameters;\n}\n\n/**\r\n * 转化成实际值\r\n * @param  {[type]} parameters     [description]\r\n * @param  {[type]} nodeProportion [description]\r\n * @return {[type]}                [description]\r\n */\nfunction conversionValue(parameters, nodeProportion) {\n    var results = {},\n        width = -_index.config.screenSize.width,\n        height = -_index.config.screenSize.height;\n\n    for (var i in parameters) {\n        switch (i) {\n            case 'translateX':\n            case 'translateZ':\n                results[i] = parameters[i] * nodeProportion * width;\n                break;\n            case 'translateY':\n                results[i] = parameters[i] * nodeProportion * height;\n                break;\n            case 'opacityStart':\n                results[i] = parameters[i];\n                break;\n            default:\n                results[i] = parameters[i] * nodeProportion;\n        }\n    }\n\n    return results;\n}\n\nfunction Parallax(data) {\n\n    try {\n        //转化所有css特效的参数的比例\n        var parameters = JSON.parse(data.getParameter()[0]['parameter']);\n    } catch (err) {\n        return false;\n    }\n    var pid = data.pid,\n        translate = conversionRatio(parameters),\n\n    //页面偏移量\n    pageOffset = this.relatedData.pageOffset && this.relatedData.pageOffset.split(\"-\"),\n\n    //开始的nodes值\n    currPageOffset = pageOffset[0],\n\n    //范围区域\n    pageRange = pageOffset[1],\n\n    //页面偏移比例\n    nodeOffsetProportion = (currPageOffset - 1) / (pageRange - 1),\n\n    //计算出偏移值\n    offsetTranslate = conversionValue(translate, nodeOffsetProportion),\n\n    //页面分割比\n    nodeProportion = 1 / (pageRange - 1);\n\n    //改变节点的transform属性\n    //返回改变后translateX值\n    var parallaxOffset = transformNodes(data.$contentProcess, _.extend({}, offsetTranslate), data.transformOffset);\n\n    /**\r\n     * 为了兼容动画，把视觉差当作一种行为处理\r\n     * 合并data数据\r\n     * @type {Object}\r\n     */\n    data.parallax = {\n        //计算页码结束边界值,用于跳转过滤\n        calculateRangePage: function calculateRangePage() {\n            return {\n                'start': pid - currPageOffset + 1,\n                'end': pageRange - currPageOffset + pid\n            };\n        },\n        'translate': translate,\n        'offsetTranslate': offsetTranslate,\n        'nodeProportion': nodeProportion,\n        'rootNode': data.$contentProcess,\n        'parallaxOffset': parallaxOffset //经过视觉差修正后的偏移量\n    };\n\n    return data;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/parallax.js\n ** module id = 71\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (activitProto) {\n\n    activitProto.createSearchBar = function () {\n        var options = {\n            parent: this.rootNode\n        };\n        if (this.searchBar) {\n            //如果上次只是隐藏则可以恢复\n            this.searchBar.restore();\n        } else {\n            this.searchBar = new _searchbar.SearchBar(options);\n        }\n    };\n};\n\nvar _searchbar = require('./searchbar');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/searchbar/index.js\n ** module id = 72\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SearchBar = SearchBar;\n\nvar _tap = require('../../../tap');\n\n//图标\nvar icons = {\n    search: 'images/icons/search.svg',\n    clear: 'images/icons/clear.svg',\n    exit: 'images/icons/exit.svg'\n}; /**\r\n    * 搜索栏\r\n    * 方便用户更加便捷的找到所需要的信息\r\n    *\r\n    */\n\nfunction SearchBar(options) {\n    //父容器\n    this.parent = options.parent;\n    //提示信息\n    this.tips = options.tips;\n    this.init();\n}\n\n/**\r\n * 初始化\r\n * @return {[type]} [description]\r\n */\nSearchBar.prototype.init = function () {\n    var $box = this.searchForm(),\n        dom = this.parent[0];\n\n    this.parent.append($box);\n    this.searchBox = $box;\n    this.resultBox = $box.find('.xut-search-result');\n    this.input = $box.find('.xut-search-input');\n    this.searchBtn = $box.find('.xut-search-btn');\n\n    //用户操作事件邦定\n    (0, _tap.bindTap)(dom, {\n        end: this\n    });\n\n    //即时搜索\n    dom.addEventListener('keyup', this, false);\n};\n\n/**\r\n * 创建搜索框\r\n * @return {[object]} [jquery生成的dom对象]\r\n */\nSearchBar.prototype.searchForm = function () {\n    var W = window.innerWidth * 0.3,\n        H = window.innerHeight;\n    var text = this.tips || '请在搜索框中输入要搜索的关键字';\n\n    var box = '<div class=\"xut-form-search\">' + '<div class=\"xut-form-search-wrap\">' + '<div style=\"height:17%;\">' + '<div style=\"height:20%\"></div>' + '<div class=\"xut-search-row\">' + '<input type=\"text\" class=\"xut-search-input\">' + '<div class=\"xut-search-btn\" style=\"background-image: url(' + icons.search + ')\"></div>' + '</div>' + '<p class=\"xut-search-tips\" style=\"line-height:' + Math.round(H * 0.06) + 'px\">' + text + '</p>' + '</div>' + '<div style=\"height:76%\">' + '<ul class=\"xut-search-result\"></ul>' + '</div>' + '<div style=\"height:7%\">' + '<div class=\"xut-search-exit\" style=\"background-image: url(' + icons.exit + ')\"></div>' + '</div>' + '</div></div>';\n\n    var $box = $(box);\n\n    $box.css('width', W < 200 ? 200 : W);\n\n    return $box;\n};\n\n/**\r\n * 搜索\r\n * @param {string} [keyword] [搜索关键字]\r\n */\nSearchBar.prototype.search = function (keyword) {\n    var data = Xut.data.Chapter,\n        ln = data.length,\n        list = '',\n        rs,\n        pageId,\n        seasonId;\n\n    if (!keyword) {\n        this.resultBox.html('');\n        return;\n    }\n\n    for (var i = 0; i < ln; i++) {\n        rs = data.item(i);\n        if (rs.chapterTitle.indexOf(keyword) > -1) {\n            pageId = rs._id;\n            seasonId = rs.seasonId;\n            list += '<li><a class=\"xut-search-link\" data-mark=\"' + seasonId + '-' + pageId + '\" href=\"javascript:0\">' + rs.chapterTitle + '</a></li>';\n        }\n    }\n\n    this.resultBox.html(list);\n};\n\n/**\r\n * 切换搜索按钮图标\r\n * @param  {[type]} icon [图标路径]\r\n * @return {[type]}      [description]\r\n */\nSearchBar.prototype.iconManager = function (icon) {\n    if (this.isChange) {\n        this.searchBtn.css('background-image', 'url(' + icon + ')');\n    }\n};\n\n/**\r\n * 跳转到搜索结果页\r\n * @param  {[type]} target [description]\r\n * @return {[type]}        [description]\r\n */\nSearchBar.prototype.searchLink = function (target) {\n    if (!target || !target.dataset) return;\n    var mark = target.dataset.mark.split('-'),\n        seasonId = mark[0],\n        pageId = mark[1];\n\n    Xut.View.LoadScenario({\n        'scenarioId': seasonId,\n        'chapterId': pageId\n    });\n};\n\n/**\r\n * 邦定事件\r\n * @param  {[type]} evt [事件]\r\n * @return {[type]}     [description]\r\n */\nSearchBar.prototype.handleEvent = function (evt) {\n    var target = evt.target;\n    switch (target.className) {\n        case 'xut-search-btn':\n            //点击搜索\n            this.search(this.input.val());\n            this.isChange = true;\n            this.iconManager(icons.clear);\n            break;\n        case 'xut-search-input':\n            //实时搜索\n            this.search(target.value);\n            //还原按钮图标\n            this.iconManager(icons.search);\n            this.isChange = false;\n            break;\n        case 'xut-search-exit':\n            //关闭搜索框\n            this.exit();\n            break;\n        case 'xut-search-link':\n            //跳转\n            this.searchLink(target);\n            break;\n        default:\n            break;\n    }\n};\n\n/**\r\n * 关闭搜索框\r\n * @return {[type]} [description]\r\n */\nSearchBar.prototype.exit = function () {\n    this.input.val('');\n    this.resultBox.empty();\n    this.searchBox.hide();\n};\n\n/**\r\n * 恢复搜索框\r\n */\nSearchBar.prototype.restore = function () {\n    var searchBox = this.searchBox;\n    searchBox && searchBox.show();\n};\n\n/**\r\n * 销毁搜索框\r\n * @return {[type]} [description]\r\n */\nSearchBar.prototype.destroy = function () {\n    var dom = this.parent[0];\n    dom.removeEventListener('keyup', this, false);\n    dom.removeEventListener('touchend', this, false);\n    dom.removeEventListener('mouseup', this, false);\n\n    this.searchBox.remove();\n    this.searchBox = null;\n    this.resultBox = null;\n    this.searchBtn = null;\n    this.input = null;\n    this.parent = null;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/searchbar/searchbar.js\n ** module id = 73\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * if comsprites is too large，\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * The client will comsprite become the advsprite  by default\r\nn\n\nvar _sprite = require(\"../../plugin/sprite\");\n\nvar _sprite2 = _interopRequireDefault(_sprite);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar moveContent = function moveContent(contentPrefix, id, parentId) {\n    var obj = $(\"#\" + contentPrefix + id);\n    var parentObj = $(\"#\" + contentPrefix + parentId);\n    var $parent = $(\"#spirit_parent_\" + parentId);\n    if ($parent.length == 0) {\n        parentObj.append(\"<div style='position:absolute; width:100%; height:100%'  id='spirit_parent_\" + parentId + \"'></div>\");\n    }\n    $parent.append(obj);\n};\n\nvar _class = function () {\n    function _class(options) {\n        _classCallCheck(this, _class);\n\n        this.options = options;\n        this.ids = [];\n    }\n\n    _createClass(_class, [{\n        key: \"play\",\n        value: function play() {\n\n            var id = void 0,\n                action = void 0,\n                ids = void 0,\n                data = void 0,\n                resource = void 0,\n                loop = void 0,\n                spiritList = void 0,\n                framId = void 0,\n                parentId = void 0,\n                params = void 0,\n                options = void 0;\n\n            options = this.options;\n            data = options.data;\n            resource = data.resource;\n            loop = data.loop;\n            this.spiritObjs = {};\n            var option = {};\n            option.contentId = options.id;\n            option.ele = options.element;\n            option.resourcePath = data.md5;\n            option.type = \"advSprite\";\n            for (var i = 0; i < resource.spiritList.length; i++) {\n                spiritList = resource.spiritList[i];\n                id = data.containerName;\n                framId = spiritList.framId;\n                parentId = spiritList.parentId;\n                this.ids.push(id);\n                if (parentId != \"0\") {\n                    var tempArray = id.split('_');\n                    var contentPrefix = tempArray[0] + '_' + tempArray[1];\n                    moveContent(contentPrefix, framId, parentId);\n                }\n                this.spiritObjs[id] = new _sprite2.default(spiritList, option);\n                params = spiritList.params;\n\n                action = params[\"actList\"].split(\",\")[0];\n                //0 循环播放 1播放一次\n                this.spiritObjs[id].play(action, loop);\n            }\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            var _this = this;\n\n            this.ids.forEach(function (key) {\n                _this.spiritObjs[key].stop();\n            });\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.stop();\n        }\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            var _this2 = this;\n\n            this.ids.forEach(function (key) {\n                if (_this2.spiritObjs[key]) {\n                    _this2.spiritObjs[key].destroy();\n                    _this2.spiritObjs[key] = null;\n                    delete _this2.spiritObjs[key];\n                }\n            });\n            this.options.data = null;\n            this.options.element = null;\n            this.options = null;\n            this.ids = null;\n        }\n    }]);\n\n    return _class;\n}();\n\nexports.default = _class;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/sprite/auto.js\n ** module id = 74\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (options) {\n  //timer,css\n  var mode = options.mode || 'css';\n  return mode === 'css' && animationPlayState ? (0, _css2.default)(options) : (0, _keyframe2.default)(options);\n};\n\nvar _css = require('../../plugin/css3');\n\nvar _css2 = _interopRequireDefault(_css);\n\nvar _keyframe = require('../../plugin/keyframe');\n\nvar _keyframe2 = _interopRequireDefault(_keyframe);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//判断是否支持css3属性\nvar animationPlayState = Xut.style.animationPlayState;\n\n/**\r\n * css3动画\r\n * 1 帧动画\r\n * 2 定时器动画\r\n * @param {[type]} options [description]\r\n */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/sprite/com.js\n ** module id = 75\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (callback) {\n    return {\n        context: {\n            /**\r\n             * 状态表示\r\n             */\n\n            /**\r\n             * 是否等待创建\r\n             * @type {Boolean}\r\n             */\n            wait: false,\n\n            /**\r\n             * 是否完成创建\r\n             * @type {Boolean}\r\n             */\n            statas: false,\n\n            /**\r\n             * id合集\r\n             * @type {Array}\r\n             */\n            _ids: [],\n\n            /**\r\n             * 事件\r\n             * @type {Array}\r\n             */\n            event: [],\n\n            /**\r\n             * 预执行\r\n             * @type {Object}\r\n             */\n            pre: {}, //预执行\n\n\n            /**\r\n             * 检测是否完成\r\n             * @return {[type]} [description]\r\n             */\n            check: function check() {\n                var total = this.length();\n                if (!total.length) {\n                    //完成创建\n                    this.statas = true;\n                }\n                //如果已经等待\n                if (this.wait) {\n                    callback && callback();\n                    return;\n                }\n                // //创建比流程先执行完毕\n                // //一般几乎不存在\n                // //但是不排除\n                // if (!this.wait && this.statas) {\n                //     this.wait = true;\n                //     return;\n                // }\n            },\n            add: function add(id) {\n                if (-1 === this._ids.indexOf(id)) {\n                    this._ids.push(id);\n                }\n            },\n            remove: function remove(id) {\n                if (!id) {\n                    return;\n                }\n                var index = this._ids.indexOf(id);\n                var val = this._ids.splice(index, 1);\n                this.check(val);\n                return val;\n            },\n            length: function length() {\n                return this._ids.length;\n            }\n        }\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/task.js\n ** module id = 76\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HtmlBox = undefined;\n\nvar _event = require('../event/event');\n\nvar _tap = require('../../../tap');\n\nvar _stroage = require('../../../util/stroage');\n\nvar defaultFontSize = void 0; /**\r\n                               * html文本框\r\n                               * @param  {[type]} ){} [description]\r\n                               * @return {[type]}       [description]\r\n                               */\n\nvar baseValue1 = void 0;\nvar baseValue2 = void 0;\nvar baseValue3 = void 0;\nvar docEl = document.documentElement;\nvar whiteObject = {\n    \"rgb(255, 255, 255)\": true,\n    \"#ffffff\": true,\n    \"#FFFFFF\": true,\n    \"#fff\": true,\n    \"#FFF\": true\n\n};\n\nfunction setOption() {\n    var proportion = Xut.config.proportion.width;\n\n    try {\n        defaultFontSize = parseInt(getComputedStyle(docEl).fontSize);\n    } catch (er) {\n        defaultFontSize = 16;\n    }\n\n    //实际字体大小\n    defaultFontSize = defaultFontSize * proportion;\n\n    //设置默认rem\n    docEl.style.fontSize = defaultFontSize + \"px\";\n\n    baseValue1 = Math.floor(defaultFontSize * 1.5);\n    baseValue2 = Math.floor(defaultFontSize * 2.0);\n    baseValue3 = Math.floor(defaultFontSize * 2.5);\n}\n\n/**\r\n * 工具栏布局\r\n * @return {[type]} [description]\r\n */\nfunction textLayer() {\n    var str = '  <div class=\"htmlbox_close_container\">' + '        <a class=\"htmlbox_close\"></a>' + ' </div>' + ' <ul class=\"htmlbox_fontsizeUl\">' + '    <li>' + '        <a class=\"htmlbox_small\" style=\"width:{0}px;height:{1}px;margin-top:-{2}px\"></a>' + '     </li>' + '     <li>' + '        <a class=\"htmlbox_middle\" style=\"width:{3}px;height:{4}px;margin-top:-{5}px\"></a>' + '     </li>' + '    <li>' + '        <a class=\"htmlbox_big\" style=\"width:{6}px;height:{7}px;margin-top:-{8}px\"></a>' + '    </li>' + ' </ul>';\n\n    return String.format(str, baseValue1, baseValue1, baseValue1 / 2, baseValue2, baseValue2, baseValue2 / 2, baseValue3, baseValue3, baseValue3 / 2);\n}\n\n/**\r\n * 创建盒子容器\r\n * @return {[type]} [description]\r\n */\nfunction createWapper(boxName, textLayer, iscrollName, textContent) {\n    var wapper = ' <div id=\"{0}\" class=\"htmlbox_container\">' + '    <div class=\"htmlbox-toolbar\">{1}</div>' + '    <div id=\"{2}\" style=\"overflow:hidden;position:absolute;width:100%;height:92%;\">' + '        <ul>' + '          {3}' + '        </ul>' + '     </div>' + ' </div>';\n\n    return String.format(wapper, boxName, textLayer, iscrollName, textContent);\n}\n\nfunction HtmlBox(contentId, element) {\n\n    setOption();\n    this.contentId = contentId;\n    this.element = element;\n    var self = this;\n\n    //事件对象引用\n    var eventHandler = function eventHandler(eventReference, _eventHandler) {\n        self.eventReference = eventReference;\n        self.eventHandler = _eventHandler;\n    };\n\n    //绑定点击事件\n    (0, _event.bindEvents)({\n        'eventRun': function eventRun() {\n            Xut.View.HideToolbar();\n            self.init(contentId, element);\n        },\n        'eventHandler': eventHandler,\n        'eventContext': element,\n        'eventName': \"tap\",\n        'domMode': true\n    });\n}\n\nHtmlBox.prototype = {\n    /**\r\n     * 调整字体大小\r\n     * @return {[type]} [description]\r\n     */\n    adjustSize: function adjustSize(value, save) {\n        value = parseInt(value);\n        docEl.style.fontSize = value + \"px\";\n        save && (0, _stroage._set)(this.storageName, value);\n    },\n    /**\r\n     * 遍历p span文字标签 调整字体颜色\r\n     * @return {[type]} [description]\r\n     */\n    adjustColor: function adjustColor() {\n        this.textLabelArray = ['p', 'span'];\n        var self = this;\n        _.each(self.textLabelArray, function (text) {\n            _.each(self.element.find(text), function (el) {\n                var formerColor = getComputedStyle(el).color;\n                //若字体颜色为白色 调整为黑色\n                if (whiteObject.hasOwnProperty(formerColor)) {\n                    el.hasFormerColor = true;\n                    el.style.color = \"black\";\n                }\n            });\n        });\n    },\n    /**\r\n     * 恢复放大过的字体颜色\r\n     * @return {[type]} [description]\r\n     */\n    restoreColor: function restoreColor() {\n        var self = this;\n        _.each(self.textLabelArray, function (text) {\n            _.each(self.element.find(text), function (el) {\n                //将字体由黑色恢复为白色\n                if (el.hasFormerColor) {\n                    el.style.color = \"white\";\n                    el.hasFormerColor = false;\n                }\n            });\n        });\n    },\n\n    /**\r\n     * 卷滚\r\n     * @param  {[type]} iscrollName [description]\r\n     * @return {[type]}             [description]\r\n     */\n    createIscroll: function createIscroll(iscrollName) {\n        this.iscroll = new iScroll(\"#\" + iscrollName, {\n            scrollbars: true,\n            fadeScrollbars: true\n        });\n    },\n\n    init: function init(contentId, element) {\n        var self = this;\n\n        self.adjustColor();\n\n        //移除偏移量 存在偏移量造成文字被覆盖\n        var textContent = element.find(\">\").html();\n        textContent = textContent.replace(/translate\\(0px, -\\d+px\\)/g, 'translate(0px,0px)');\n\n        var boxName = \"htmlbox_\" + contentId;\n        var iscrollName = \"htmlbox_iscroll_\" + contentId;\n\n        //缓存名\n        this.storageName = boxName + Xut.config.appId;\n\n        //获取保存的字体值\n        var storageValue = (0, _stroage._get)(this.storageName);\n        if (storageValue) {\n            this.adjustSize(storageValue);\n        }\n\n        //创建容器\n        this.$str = $(createWapper(boxName, textLayer(), iscrollName, textContent));\n        element.after(this.$str);\n\n        //卷滚\n        this.createIscroll(iscrollName);\n\n        //绑定事件上下文呢\n        this.eventContext = this.$str.find('.htmlbox-toolbar')[0];\n        //字体大小\n        var sizeArray = [\"1\", \"1.25\", \"1.5\"];\n        //改变字体与刷新卷滚\n        var change = function change(fontsize) {\n            self.adjustSize(fontsize * defaultFontSize, true);\n            self.iscroll.refresh();\n        };\n        //处理器\n        var process = {\n            htmlbox_close_container: function htmlbox_close_container() {\n                self.restoreColor();\n                self.adjustSize(defaultFontSize);\n                self.removeBox();\n            },\n            htmlbox_close: function htmlbox_close() {\n                self.restoreColor();\n                self.adjustSize(defaultFontSize);\n                self.removeBox();\n            },\n            htmlbox_small: function htmlbox_small() {\n                change(sizeArray[0]);\n            },\n            htmlbox_middle: function htmlbox_middle() {\n                change(sizeArray[1]);\n            },\n            htmlbox_big: function htmlbox_big() {\n                change(sizeArray[2]);\n            }\n        };\n        //冒泡匹配按钮点击\n        this.start = function (e) {\n            var className = e.target.className;\n            process[className] && process[className]();\n        };\n\n        (0, _tap.bindTap)(this.eventContext, {\n            start: this.start\n        });\n    },\n\n    //移除盒子\n    removeBox: function removeBox() {\n        (0, _tap.offTap)(this.eventContext, {\n            start: this.start\n        });\n        this.$str && this.$str.remove();\n        this.iscroll && this.iscroll.destroy();\n        this.iscroll = null;\n    },\n\n    //销毁外部点击事件与\n    destroy: function destroy() {\n        _.each(this.eventReference, function (off) {\n            off(\"tap\");\n        });\n        this.removeBox();\n    }\n};\n\nexports.HtmlBox = HtmlBox;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/textbox/htmlbox.js\n ** module id = 77\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (activitProto) {\n\n    /**\r\n     * 检测是HTML文本框处理\r\n     * @return {[type]} [description]\r\n    */\n    activitProto.htmlTextBox = function () {\n        var self = this;\n        var relatedData = this.relatedData;\n        var contentHtmlBoxIds = relatedData.contentHtmlBoxIds;\n        var contentId;\n        var contentName;\n        var eventElement;\n        //文本框实例对象\n        //允许一个activity有多个\n        this.htmlBoxInstance = [];\n        //创建文本框对象\n        if (contentHtmlBoxIds.length && relatedData.contentDas) {\n            _.each(relatedData.contentDas, function (cds) {\n                if (~contentHtmlBoxIds.indexOf(cds._id)) {\n                    contentId = cds._id;\n                    contentName = self.makePrefix('Content', self.pid, contentId);\n                    //找到对应绑定事件的元素\n                    eventElement = self.getContextNode(contentName);\n                    if (!eventElement.attr(\"data-htmlbox\")) {\n                        //构建html文本框对象\n                        self.htmlBoxInstance.push(new _htmlbox.HtmlBox(contentId, eventElement));\n                        //增加htmlbox标志去重\n                        //多个actictiy共享问题\n                        eventElement.attr(\"data-htmlbox\", \"true\");\n                    }\n                }\n            });\n        }\n    };\n};\n\nvar _htmlbox = require('./htmlbox');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/activity/textbox/index.js\n ** module id = 78\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Action = Action;\n/**\r\n * 音频动作\r\n * @param  {[type]} global [description]\r\n * @return {[type]}        [description]\r\n */\n\n//音频动作\n//替换背景图\n//指定动画\nfunction Action(options) {\n\n    var element = document.querySelector('#Audio_' + options.audioId);\n\n    //页面从属\n    var pageType = element.getAttribute('data-belong');\n\n    //切换背景\n    function toggle(linker) {\n        element.style.backgroundImage = 'url(' + Xut.config.pathAddress + linker + ')';\n    }\n\n    function run(ids) {\n        ids = ids.split(',');\n        Xut.Assist.Run(pageType, ids);\n    }\n\n    function stop(ids) {\n        ids = ids.split(',');\n        Xut.Assist.Stop(pageType, ids);\n    }\n    return {\n        play: function play() {\n            options.startImg && toggle(options.startImg);\n            options.startScript && run(options.startScript);\n        },\n        pause: function pause() {\n            options.stopImg && toggle(options.stopImg);\n            options.stopScript && stop(options.startScript);\n        },\n        destroy: function destroy() {\n            element = null;\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/action.js\n ** module id = 79\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BaseClass = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _action = require('./action');\n\nvar _subtitle = require('./subtitle');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 音频工厂类\r\n * @param {[type]} options [description]\r\n */\nvar BaseClass = exports.BaseClass = function () {\n    function BaseClass() {\n        _classCallCheck(this, BaseClass);\n    }\n\n    //构建之前关数据\n\n\n    _createClass(BaseClass, [{\n        key: 'preRelated',\n        value: function preRelated(trackId, options) {\n            //完成end后 外部回调删除这个对象\n            //单独调用引用对象\n            //传递一个 options.complete\n            this.innerCallback = options.innerCallback;\n            //仅运行一次\n            //外部调用\n            this.outerCallback = trackId == 9999 ? options.complete : null;\n        }\n\n        //构建之后关数据\n\n    }, {\n        key: 'afterRelated',\n        value: function afterRelated(options, controlDoms) {\n            var _this = this;\n\n            //音频重复播放次数\n            if (options.data && options.data.repeat) {\n                this.repeat = Number(options.data.repeat); //需要重复\n            }\n            //音频动作\n            if (options.action) {\n                this.acitonObj = (0, _action.Action)(options);\n            }\n            //字幕对象\n            if (options.subtitles && options.subtitles.length > 0) {\n                //创建字幕对象\n                this.subtitleObject = new _subtitle.Subtitle(options, controlDoms, function (cb) {\n                    return _this.getAudioTime(cb);\n                });\n            }\n\n            //如果有外部回调处理\n            if (this.outerCallback) {\n                this.outerCallback.call(this);\n            }\n        }\n\n        //运行成功失败后处理方法\n        //phoengap会调用callbackProcess\n        //导致乱了\n\n    }, {\n        key: 'callbackProcess',\n        value: function callbackProcess(sysCommand) {\n            if (this.outerCallback) {\n                //外部调用结束\n                this.end();\n            } else {\n                //安卓没有重复播放\n                //phonegap未处理\n                if (!Xut.plat.isAndroid && this.repeat) {\n                    //如果需要重复\n                    this.repeatProcess();\n                } else {\n                    //外部清理对象\n                    //audioManager中直接删当前对象\n                    this.innerCallback(this);\n                }\n            }\n        }\n\n        //重复处理\n\n    }, {\n        key: 'repeatProcess',\n        value: function repeatProcess() {\n            --this.repeat;\n            this.play();\n        }\n\n        //播放\n\n    }, {\n        key: 'play',\n        value: function play() {\n            //flash模式不执行\n            if (this.audio && !this.isFlash) {\n                this.status = 'playing';\n                this.audio.play();\n            }\n            this.acitonObj && this.acitonObj.play();\n        }\n\n        //停止\n\n    }, {\n        key: 'pause',\n        value: function pause() {\n            this.status = 'paused';\n            this.audio.pause();\n            this.acitonObj && this.acitonObj.pause();\n        }\n\n        //销毁\n\n    }, {\n        key: 'end',\n        value: function end() {\n            this.status = 'ended';\n            this.audio.end();\n            this.audio = null;\n            this.acitonObj && this.acitonObj.destroy();\n        }\n\n        //相关\n\n    }, {\n        key: 'destroyRelated',\n        value: function destroyRelated() {\n            //销毁字幕\n            if (this.subtitleObject) {\n                this.subtitleObject.destroy();\n                this.subtitleObject = null;\n            }\n            //动作\n            if (this.acitonObj) {\n                this.acitonObj.destroy();\n                this.acitonObj = null;\n            }\n        }\n    }]);\n\n    return BaseClass;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/baseclass.js\n ** module id = 80\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 音频字幕\r\n * @param  {[type]} global [description]\r\n * @return {[type]}        [description]\r\n */\n//字幕检测时间\nvar Interval = 50;\n\nvar getStyles = function getStyles(elem, name) {\n    var styles = elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n    return styles.getPropertyValue(name);\n};\n\n/**\r\n * 字幕类\r\n *   音频实例\r\n * options 参数\r\n */\n\nvar Subtitle = function () {\n    function Subtitle(options, controlDoms, getAudioTime) {\n        _classCallCheck(this, Subtitle);\n\n        var visibility = void 0;\n        var orgAncestorVisibility = void 0;\n\n        //快速处理匹配数据\n        var checkData = {};\n\n        this.getAudioTime = getAudioTime;\n        this.options = options;\n        this.parents = controlDoms.parents;\n        this.ancestors = controlDoms.ancestors;\n\n        this.timer = 0;\n\n        //缓存创建的div节点\n        this.cacheCreateDivs = {};\n\n        //保存原始的属性\n        orgAncestorVisibility = this.orgAncestorVisibility = {};\n        _.each(this.ancestors, function (node, cid) {\n            visibility = getStyles(node, 'visibility');\n            if (visibility) {\n                orgAncestorVisibility[cid] = visibility;\n            }\n        });\n\n        //去重记录\n        this.recordRepart = {};\n\n        //phonegap getCurrentPosition得到的音频播放位置不从0开始 记录起始位置\n        this.changeValue = 0;\n\n        _.each(options.subtitles, function (data) {\n            checkData[data.start + '-start'] = data;\n            checkData[data.end + '-end'] = data;\n        });\n\n        this.createSubtitle(checkData);\n    }\n\n    /**\r\n     * 运行字幕\r\n     * @return {[type]}\r\n     */\n\n\n    _createClass(Subtitle, [{\n        key: 'createSubtitle',\n        value: function createSubtitle(checkData) {\n            var _this = this;\n\n            var getAudioTime = this.getAudioTime;\n            var options = this.options;\n\n            /**\r\n             * 准备创建字幕\r\n             * @param  {[type]} audioTime [description]\r\n             * @return {[type]}           [description]\r\n             */\n            var createAction = function createAction(audioTime) {\n                var match = void 0;\n                _.each(checkData, function (data, key) {\n                    match = key.split('-');\n                    //创建动作\n                    _this.action(match[0], audioTime, match[1], data);\n                });\n                _this.createSubtitle(checkData);\n            };\n\n            /**\r\n             * 判断不同的播放平台\r\n             * @return {[type]} [description]\r\n             */\n            var JudgePlat = function JudgePlat() {\n                getAudioTime(function (audioTime) {\n                    createAction(audioTime);\n                });\n            };\n\n            this.timer = setTimeout(function () {\n                JudgePlat();\n            }, Interval);\n        }\n\n        //执行动作\n        //创建文本框\n        //显示/隐藏\n\n    }, {\n        key: 'action',\n        value: function action(currentTime, audioTime, _action, data) {\n            if (audioTime > currentTime - Interval && audioTime < currentTime + Interval) {\n                //创建\n                if (!this.recordRepart[data.start] && _action === 'start') {\n                    this.recordRepart[data.start] = true;\n                    //创建字幕dom\n                    this.createDom(data);\n\n                    //如果是一段字幕结束处理\n                } else if (!this.recordRepart[data.end] && _action === 'end') {\n                    this.recordRepart[data.end] = true;\n                    // //隐藏\n                    var ancestorNode = this.ancestors[data.id];\n                    if (ancestorNode) {\n                        ancestorNode.style.visibility = \"hidden\";\n                    }\n                }\n            }\n        }\n    }, {\n        key: 'createDom',\n        value: function createDom(data) {\n\n            var config = Xut.config;\n\n            //屏幕分辨率\n            var proportion = config.proportion;\n            var proportionWidth = proportion.width;\n            var proportionHeight = proportion.height;\n            var screenWidth = config.screenSize.width;\n            var screenHeight = config.screenSize.height;\n\n            var cid = data.id;\n            var parentNode = this.parents[cid];\n            var ancestorNode = this.ancestors[cid];\n            var preDiv = this.cacheCreateDivs[cid];\n            var preP = preDiv && preDiv.children[0];\n\n            //缩放\n            var sTop = data.top * proportion.top;\n            var sLeft = data.left * proportion.left;\n            var sHeight = data.height * proportion.height;\n            var sWidth = data.width * proportion.width;\n\n            //转换行高\n            var sLineHeight = data.lineHeight ? data.lineHeight : '100%';\n\n            //公用同一个contengid,已经存在\n            if (preDiv) {\n                createContent(preDiv, preP, data);\n            } else {\n                //创建父元素与子元素\n                var createDiv = document.createElement('div');\n                var createP = document.createElement('p');\n                //设置样式\n                createContent(createDiv, createP, data);\n                createDiv.appendChild(createP); //添加到指定的父元素  \n\n                parentNode.appendChild(createDiv);\n\n                //保存引用\n                this.cacheCreateDivs[cid] = createDiv;\n            }\n\n            //创建内容\n            function createContent(parent, p, data) {\n                createDivStyle(parent, data); //设置div\n                createPStyle(p, data);\n            }\n\n            //设置父容器div 字体颜色，大小，类型，位置，文本水平、垂直居中\n            function createDivStyle(parent, data) {\n                var cssText = 'position       :absolute; ' + 'display        :table;' + 'vertical-align :center;' + 'top            :{0}px;' + 'left           :{1}px;' + 'height         :{2}px;' + 'width          :{3}px;';\n\n                parent.style.cssText = String.format(cssText, sTop, sLeft, sHeight, sWidth);\n            }\n\n            //内容元素的样式\n            function createPStyle(p, data) {\n\n                var cssText = ' text-align     :center;' + ' display        :table-cell;' + ' vertical-align :middle;' + ' color          :{0};' + ' font-family    :{1};' + ' font-bold      :{2};' + ' font-size      :{3}px;' + ' line-height    :{4}%';\n\n                //设置字体间距\n                p.style.cssText = String.format(cssText, data.fontColor, data.fontName, data.fontBold, data.fontSize * proportionWidth, sLineHeight);\n                //设置文字内容\n                p.innerHTML = data.title;\n            }\n\n            //操作最外层的content节点\n            if (ancestorNode) {\n                var ancestorNodeValue = getStyles(ancestorNode, 'visibility');\n                if (ancestorNodeValue != 'visible') {\n                    ancestorNode.style.visibility = 'visible';\n                }\n            }\n        }\n\n        /**\r\n         * 清理音频\r\n         * @return {[type]}\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var self = this;\n            _.each(this.cacheCreateDivs, function (node) {\n                node.parentNode.removeChild(node);\n            });\n            //恢复初始状态\n            _.each(this.ancestors, function (node, id) {\n                var orgValue = self.orgAncestorVisibility[id];\n                var currValue = getStyles(node, 'visibility');\n                if (currValue != orgValue) {\n                    node.style.visibility = orgValue;\n                }\n            });\n\n            this.ancestors = null;\n            this.cacheCreateDivs = null;\n            this.changeValue = 0;\n            this.parents = null;\n            if (this.timer) {\n                clearTimeout(this.timer);\n                this.timer = 0;\n            }\n        }\n    }]);\n\n    return Subtitle;\n}();\n\nexports.Subtitle = Subtitle;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/audio/subtitle.js\n ** module id = 81\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../../config/index');\n\nvar _translation = require('../../swipe/translation');\n\nvar _layout = require('./layout');\n\nvar _index2 = require('../../swipe/index');\n\nvar _index3 = _interopRequireDefault(_index2);\n\nvar _render = require('./render');\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _depend = require('../../manager/dispatch/depend');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 2017.9.7\r\n * 流式排版\r\n */\nvar Flow = function () {\n    function Flow(base, _callback) {\n        _classCallCheck(this, Flow);\n\n        var self = this;\n\n        this.callback = _callback;\n        this.initIndex = base.pageIndex;\n\n        var rootNode = base.element;\n        var seasonId = base.chapterDas.seasonId;\n        var chapterId = base.chapterId;\n        var dataNode = $('#chapter-flow-' + chapterId);\n\n        (0, _render2.default)({\n            rootNode: rootNode,\n            dataNode: dataNode,\n            chapterId: chapterId,\n            callback: function callback($container) {\n                self._init($container, (0, _layout.getCounts)(seasonId, chapterId));\n                _callback();\n            }\n        });\n    }\n\n    /**\r\n     * 初始化\r\n     * @param  {[type]} $container [description]\r\n     * @param  {[type]} $content   [description]\r\n     * @return {[type]}            [description]\r\n     */\n\n\n    _createClass(Flow, [{\n        key: '_init',\n        value: function _init($container, pagesCount) {\n\n            var MIN = 0;\n            var MAX = pagesCount - 1;\n            var viewWidth = _index.config.viewSize.width;\n            var gapWidth = 0;\n            var View = Xut.View;\n            var initIndex = this.initIndex;\n\n            var swipe = this.swipe = new _index3.default({\n                borderBounce: true,\n                linear: true,\n                initIndex: Xut.Presentation.GetPageIndex() > initIndex ? MAX : MIN,\n                extraGap: gapWidth,\n                container: $container[0],\n                pageFlip: 0,\n                multiplePages: 1,\n                stopPropagation: true,\n                pagetotal: pagesCount\n            });\n\n            var moveDistance = 0;\n            var lastDistance = swipe._initDistance;\n\n            /**\r\n             * 触屏松手点击\r\n             * 无滑动\r\n             */\n            swipe.$watch('onTap', function (pageIndex, hookCallback) {\n                if (!Xut.Contents.Canvas.getIsTap()) {\n                    View.Toolbar();\n                }\n            });\n\n            swipe.$watch('onMove', function () {\n                var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n                var action = _ref.action;\n                var speed = _ref.speed;\n                var distance = _ref.distance;\n                var leftIndex = _ref.leftIndex;\n                var pageIndex = _ref.pageIndex;\n                var rightIndex = _ref.rightIndex;\n                var direction = _ref.direction;\n\n\n                var currentDist = (0, _depend.calculateDistance)(action, distance, direction)[1];\n                moveDistance = currentDist;\n\n                switch (direction) {\n                    case 'next':\n                        moveDistance = moveDistance - gapWidth + lastDistance;\n                        break;\n                    case 'prev':\n                        moveDistance = moveDistance + gapWidth + lastDistance;\n                        break;\n                }\n\n                //反弹\n                if (action === 'flipRebound') {\n                    moveDistance = direction === 'next' ? -viewWidth * this._hindex - this._hindex * gapWidth : -(viewWidth * this._hindex + this._hindex * gapWidth);\n                }\n\n                //首尾连接主页\n                if (this._hindex === MIN && this.direction === 'prev') {\n                    if (action === 'flipOver') {\n                        View.GotoPrevSlide();\n                        this._unlock();\n                    } else {\n                        View.MovePage(moveDistance, speed, this.direction, action);\n                    }\n                } else if (this._hindex === MAX && this.direction === 'next') {\n                    if (action === 'flipOver') {\n                        View.GotoNextSlide();\n                        this._unlock();\n                    } else {\n                        View.MovePage(currentDist, speed, this.direction, action);\n                    }\n                } else {\n                    _translation.translation[action]({}, moveDistance, speed, $container);\n                }\n\n                //更新页码标示\n                'flipOver' === action && setTimeout(function () {\n                    var extra = direction === 'next' ? 1 : -1;\n                    var index = initIndex + pageIndex + extra;\n                    // Xut.View.pageUpdate(index)\n                    // Xut.View.setPointer(index)\n                });\n            });\n\n            swipe.$watch('onComplete', function (direction, pagePointer, unfliplock, isQuickTurn) {\n                lastDistance = moveDistance;\n                unfliplock();\n            });\n        }\n\n        /**\r\n         * 销毁\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.swipe && this.swipe.destroy();\n        }\n    }]);\n\n    return Flow;\n}();\n\nexports.default = Flow;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/flow/index.js\n ** module id = 82\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = render;\n\nvar _nexttick = require('../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * dom...\r\n */\nfunction render() {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var rootNode = _ref.rootNode;\n    var dataNode = _ref.dataNode;\n    var chapterId = _ref.chapterId;\n    var callback = _ref.callback;\n\n    var $container = $(dataNode.html());\n    (0, _nexttick2.default)({\n        container: rootNode,\n        content: $container\n    }, function () {\n        return callback($container);\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/flow/render.js\n ** module id = 83\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ShowNote = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _iscroll = require('../activity/iscroll');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShowNote = exports.ShowNote = function () {\n    function ShowNote(data) {\n        _classCallCheck(this, ShowNote);\n\n        data.id = parseInt(data.id);\n        data.actType = data.type;\n        _.extend(this, data);\n        this.setup();\n    }\n\n    _createClass(ShowNote, [{\n        key: 'setup',\n        value: function setup() {\n            var that = this,\n                note = this.data.note,\n                prop = Xut.config.proportion,\n                width = Math.round((prop.width + prop.height) / 2 * Xut.config.iconHeight),\n                space = Math.round(width / 2);\n            var retStr = '<div class=\"xut-shownote-box\" style=\"z-index:' + Xut.zIndexlevel() + '\">' + '<div class=\"close\" style=\"width:' + width + 'px;height:' + width + 'px;top:-' + space + 'px;right:-' + space + 'px\"></div>' + '<div class=\"content\">' + note + '</div>' + '</div>';\n\n            this._dom = $(retStr);\n            this._dom.find('.close').on(\"touchend mouseup\", function () {\n                that.dispatchProcess();\n            });\n            $(this.rootNode).append(this._dom);\n\n            this.show();\n            this.iscroll = (0, _iscroll.Iscroll)(this._dom.find('.content')[0]);\n            return true;\n        }\n\n        //外部调用接口\n\n    }, {\n        key: 'dispatchProcess',\n        value: function dispatchProcess() {\n            //自动热点 取消关闭\n            if (this.isAutoPlay) return;\n            //当前对象状态\n            this.state ? this.hide() : this.show();\n        }\n    }, {\n        key: 'recovery',\n        value: function recovery() {\n            if (this.state) {\n                this.dispatchProcess();\n                return true;\n            }\n            return false;\n        }\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.state = false;\n            $(\"#ShowNote_\" + this.id).css('background-image', 'url(images/icons/hideNote.png)');\n            this._dom.hide();\n        }\n    }, {\n        key: 'show',\n        value: function show() {\n            this.state = true;\n            $(\"#ShowNote_\" + this.id).css('background-image', 'url(images/icons/showNote.png)');\n            this._dom.show();\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this._dom) {\n                this._dom.find('.close').off();\n                this._dom && this._dom.hide().remove();\n            }\n\n            //iscroll销毁\n            if (this.iscroll) {\n                this.iscroll.destroy();\n                this.iscroll = null;\n            }\n        }\n    }]);\n\n    return ShowNote;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/note/index.js\n ** module id = 84\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = css3;\n\nvar _index = require('../../util/index');\n\nvar style = Xut.style; /**\r\n                        * 普通精灵动画\r\n                        * dom版本\r\n                        * css3模式\r\n                        */\n\nvar keyframes = style.keyframes;\nvar animationEnd = style.animationEnd;\nvar playState = style.animationPlayState;\nvar prefixAnims = style.animation;\n\nvar styleElement = null;\n\n/**\r\n * [ description]动态插入一条样式规则\r\n * @param  {[type]} rule [样式规则]\r\n * @return {[type]}      [description]\r\n */\nfunction insertCSSRule(rule) {\n    var number, sheet, cssRules;\n    //如果有全局的style样式文件\n    if (styleElement) {\n        number = 0;\n        try {\n            sheet = styleElement.sheet;\n            cssRules = sheet.cssRules;\n            number = cssRules.length;\n            sheet.insertRule(rule, number);\n        } catch (e) {\n            console.log(e);\n        }\n    } else {\n        //创建样式文件\n        styleElement = document.createElement(\"style\");\n        styleElement.type = 'text/css';\n        styleElement.innerHTML = rule;\n        styleElement.uuid = 'aaron';\n        document.head.appendChild(styleElement);\n    }\n}\n\n/**\r\n * [ description]删除一条样式规则\r\n * @param  {[type]} ruleName [样式名]\r\n * @return {[type]}          [description]\r\n */\nfunction deleteCSSRule(ruleName) {\n    if (styleElement) {\n        var sheet = styleElement.sheet,\n            cssRules = sheet.rules || sheet.cssRules,\n            //取得规则列表\n        i = 0,\n            n = cssRules.length,\n            rule;\n        for (i; i < n; i++) {\n            rule = cssRules[i];\n            if (rule.name === ruleName) {\n                //删除单个规则\n                sheet.deleteRule(i);\n                break;\n            }\n        }\n        //删除style样式\n        if (cssRules.length == 0) {\n            document.head.removeChild(styleElement);\n            styleElement = null;\n        }\n    }\n}\n\n/**\r\n * css3模式\r\n * 单图\r\n * 矩形图\r\n * @param  {[type]} options [description]\r\n * @return {[type]}         [description]\r\n */\nfunction css3(options) {\n\n    var $element, data, callback, aniName, count, fps, time, width, loop, matrix, parameter, rule1, rule2;\n\n    $element = options.element.find('.sprite');\n    data = options.data;\n    callback = options.callback || function () {};\n    aniName = 'sprite_' + options.id;\n    count = data.thecount;\n    fps = data.fps;\n    time = Math.round(1 / fps * count * 10) / 10;\n    width = Math.ceil(data.scaleWidth * count);\n    loop = data.loop ? 'infinite' : 1;\n\n    //如果是矩形图\n    if (data.parameter) {\n        parameter = (0, _index.parseJSON)(data.parameter);\n        if (parameter && parameter.matrix) {\n            matrix = parameter.matrix.split(\"-\");\n        }\n    }\n\n    /**\r\n     * 设置精灵动画位置\r\n     * @param {[type]} aniName [description]\r\n     * @param {[type]} x       [description]\r\n     */\n    function setPostion(aniName, x) {\n        //矩阵生成step的处理\n        //  0 1 2\n        //  3 4 5\n        //  6 7 8\n        if (matrix) {\n            var frames = [];\n            var base = 100 / count;\n            var col = Number(matrix[0]); //列数\n            //首次\n            frames.push(0 + '% { background-position:0% 0%}');\n            for (var i = 0; i < count; i++) {\n                // var currRow = Math.ceil((i + 1) / col); //当前行数\n                var currCol = Math.floor(i / col); //当前列数\n                var period = currCol * col; //每段数量\n                x = 100 * (i - period);\n                var y = 100 * currCol;\n                x = x == 0 ? x : \"-\" + x;\n                y = y == 0 ? y : \"-\" + y;\n                frames.push((i + 1) * base + '% { background-position: ' + x + '% ' + y + '%}');\n            }\n            return aniName + '{' + frames.join(\"\") + '}';\n        } else {\n            var rule = '{0} {from { background-position:0 0; } to { background-position: -{1}px 0px}}';\n            return String.format(rule, aniName, Math.round(x));\n        }\n    }\n\n    /**\r\n     * 格式化样式表达式\r\n     * 2016.7.15 add paused control\r\n     * @param {[type]}   [description]\r\n     */\n    function setStep(aniName, time, count, loop) {\n        var rule;\n        if (matrix) {\n            rule = '{0} {1}s step-start {2}';\n            return String.format(rule, aniName, time, loop);\n        } else {\n            rule = '{0} {1}s steps({2}, end) {3}';\n            return String.format(rule, aniName, time, count, loop);\n        }\n    }\n\n    /**\r\n     * 设置动画样式\r\n     * @param {[type]} $element [description]\r\n     * @param {[type]} rule     [description]\r\n     */\n    function initStyle($element, rule) {\n        prefixAnims && $element.css(prefixAnims, rule).css(playState, 'paused');\n    }\n\n    /**\r\n     * 添加到样式规则中\r\n     * @param {[type]} rule [description]\r\n     */\n    function setKeyframes(rule) {\n        if (keyframes) {\n            insertCSSRule(keyframes + rule);\n        }\n    }\n\n    //动画css关键帧规则\n    var rule1 = setStep(aniName, time, count, loop);\n    var rule2 = setPostion(aniName, width);\n\n    initStyle($element, rule1);\n    setKeyframes(rule2);\n    $element.on(animationEnd, callback);\n\n    return {\n\n        play: function play() {\n            $element.css(playState, 'running');\n        },\n\n        stop: function stop() {\n            $element.css(playState, 'paused');\n        },\n\n        destroy: function destroy() {\n            //停止精灵动画\n            deleteCSSRule(aniName);\n            $element.off(animationEnd, callback);\n            $element = null;\n        }\n\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/css3.js\n ** module id = 85\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = keyframe;\n\nvar _index = require('../../util/index');\n\nfunction keyframe(options) {\n    var $element, data, callback, count, fps, loop, matrix, parameter, width, height, timer, arrays, x, y, t;\n\n    arrays = [];\n    t = 0;\n    $element = options.element.find('.sprite');\n    data = options.data;\n    callback = options.callback || function () {};\n\n    count = data.thecount;\n    fps = data.fps;\n    loop = data.loop;\n    width = data.scaleWidth;\n    height = data.scaleHeight;\n\n    //如果是矩形图\n    if (data.parameter) {\n        parameter = (0, _index.parseJSON)(data.parameter);\n        if (parameter && parameter.matrix) {\n            matrix = parameter.matrix.split(\"-\");\n        }\n    }\n\n    getCoordinate();\n    //得到坐标：矩阵图：X Y坐标 普通：X坐标\n    function getCoordinate() {\n        //矩阵图\n        if (matrix) {\n            var cols = matrix[0];\n            var rows = matrix[1];\n            for (var i = 0; i < rows; i++) {\n                y = -height * i + 'px';\n                for (var k = 0; k < cols; k++) {\n                    x = -width * k + 'px';\n\n                    arrays.push(x, y);\n                }\n            }\n            //数组长度大于给定的数量时 删除数组中多余的数据\n            if (arrays.length / 2 > count) {\n                var temp = arrays.length / 2 - count;\n                for (var f = 2 * temp; f > 0; f--) {\n                    arrays.pop();\n                }\n            }\n        } else {\n            for (var i = 0; i < count; i++) {\n                x = -width * i + 'px';\n                arrays.push(x);\n            }\n        }\n    }\n\n    function start() {\n        if (matrix) {\n            if (t > arrays.length / 2 - 1) {\n                if (loop > 0) {\n                    t = 0;\n                    time();\n                } else {\n                    return;\n                }\n            } else {\n                time();\n            }\n        } else {\n            if (t > count - 1) {\n                if (loop > 0) {\n                    t = 0;\n                    time();\n                } else {\n                    return;\n                }\n            } else {\n                time();\n            }\n        }\n    }\n\n    function time() {\n        timer = setTimeout(function () {\n            if (matrix) {\n                x = arrays[2 * t];\n                y = arrays[2 * t + 1];\n                $element.css('backgroundPositionX', x);\n                $element.css('backgroundPositionY', y);\n            } else {\n                x = arrays[t];\n                $element.css('backgroundPositionX', x);\n            }\n            t++;\n            start();\n        }, 1000 / fps);\n    }\n\n    return {\n        play: function play() {\n            start();\n        },\n\n        stop: function stop() {\n            clearTimeout(timer);\n        },\n\n        destroy: function destroy() {\n            //停止精灵动画\n            this.stop();\n            t = 0;\n            $element = null;\n            data = null;\n            arrays = null;\n        }\n\n    };\n} /**\r\n   * 帧模式-多图\r\n   * @param  {[type]} options [description]\r\n   * @return {[type]}         [description]\r\n   */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/keyframe.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PPT = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../../../config/index');\n\nvar _support = require('./support');\n\nvar _internal = require('./internal');\n\nvar _advsprite = require('../../widget/page/advsprite');\n\nvar _manager = require('../../audio/manager');\n\nvar _dom = require('../../../util/dom');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 参数说明\r\n * pageType: 页面类型\r\n * chapterId: 当前页ID\r\n * element: 动画对象\r\n * itemArray: 动画参数数组\r\n * container: 父容器\r\n * hasLoop: 是否循环动画\r\n * startEvent: 整个动画开始事件\r\n * completeEvent: 整个动画结束事件\r\n **/\nvar PPT = exports.PPT = function () {\n    function PPT(pageIndex, pageType, chapterId, element, itemArray, container, hasLoop, startEvent, completeEvent) {\n        _classCallCheck(this, PPT);\n\n        this.screenWidth = _index.config.screenSize.width;\n        this.screenHeight = _index.config.screenSize.height;\n        this.container = container ? $(container) : $(document.body); //父容器(主要用于手势控制路径动画)\n        this.isDebug = false; //是否显示调试信息\n\n        this.pageIndex = pageIndex;\n\n        if (_.isObject(element)) {\n            this.pageType = pageType;\n            this.chapterId = chapterId;\n            this.element = element;\n            this.elementStyle = ''; //动画对象默认样式\n            this.elementVisibility = 'visible'; //初始化后对象状态\n\n            this.options = [];\n\n            if (Array.isArray(itemArray)) {\n                this.options = itemArray;\n            } else {\n                console.log(\"Animation options error is not Array.\");\n            }\n\n            this.useMask = _support.isDesktop || _support.isMacOS ? true : false; //是否使用CSS渐变效果\n            this.hasLoop = hasLoop == true ? true : false;\n            this.startEvent = startEvent;\n            this.completeEvent = completeEvent;\n            this.parameter0 = null; //第一个动画参数（默认支持多个动画作用于一个对象）\n            this.isExit0 = false; //第一个动画类型（进入/退出）\n            this.preCode = ''; //动画前脚本\n            this.postCode = ''; //动画后脚本\n            this.codeDelay = 0; //延时\n            this.hasRunning = true; //是否继续运行\n            this.isCompleted = false; //是否完全执行过(用于解决重复执行问题)\n\n            //初始对象状态:opacity(visibility)\n            this._initElement();\n        }\n    }\n\n    /**\r\n     * 根据数据库的设置\r\n     * 对象初始化(visibility)\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(PPT, [{\n        key: '_initElement',\n        value: function _initElement() {\n\n            //如果没有数据\n            if (!this.options.length) {\n                return;\n            }\n\n            var data = this.options[0];\n            this.parameter0 = (0, _dom.parseJSON)(data.parameter);\n\n            //为高级动画修改增加\n            //2016.3.16\n            this.parameter0.pageType = this.pageType;\n            this.parameter0.pageIndex = this.pageIndex;\n\n            this.isExit0 = this.parameter0.exit ? this.parameter0.exit.toLowerCase() == \"true\" : false;\n\n            //获取动画前脚本\n            if (data.preCode && data.preCode.length > 0) {\n                this.preCode = (0, _dom.execJson)(\"(function(){\" + (0, _dom.enterReplace)(data.preCode) + \"})\");\n            } else if (this.parameter0.preCode && this.parameter0.preCode.length > 0) {\n                this.preCode = (0, _dom.execJson)(\"(function(){\" + (0, _dom.enterReplace)(this.parameter0.preCode) + \"})\");\n            }\n\n            //获取动画后脚本\n            if (data.postCode && data.postCode.length > 0) {\n                this.postCode = (0, _dom.execJson)(\"(function(){\" + (0, _dom.enterReplace)(data.postCode) + \"})\");\n            } else if (this.parameter0.postCode && this.parameter0.postCode.length > 0) {\n                this.postCode = (0, _dom.execJson)(\"(function(){\" + (0, _dom.enterReplace)(this.parameter0.postCode) + \"})\");\n            }\n\n            //获取延时时间\n            if (data.codeDelay && data.codeDelay > 0) {\n                this.codeDelay = data.codeDelay;\n            } else if (this.parameter0.codeDelay && this.parameter0.codeDelay > 0) {\n                this.codeDelay = this.parameter0.codeDelay;\n            }\n\n            //给元素增加ppt属性标记\n            var initPpt = this.element.attr(\"data-pptAnimation\");\n            if (initPpt == null) {\n                //解锁支持(In-app购买解锁、脚本解锁)\n                if (this.parameter0.inapp > 0) {\n                    this.hasRunning = false;\n                    this._unlockHandler();\n                } else {\n                    //路径动画对象默认显示\n                    if (data.animationName.indexOf(\"EffectPath\") == 0 || data.animationName == \"EffectCustom\") this.element.css(\"visibility\", \"visible\");else {\n                        switch (data.animationName) {\n                            //强调动画默认显示\n                            case \"EffectFlashBulb\": //脉冲\n                            case \"EffectFlicker\": //彩色脉冲\n                            case \"EffectTeeter\": //跷跷板\n                            case \"EffectSpin\": //陀螺旋转\n                            case \"EffectGrowShrink\": //放大/缩小\n                            case \"EffectDesaturate\": //不饱和\n                            case \"EffectDarken\": //加深\n                            case \"EffectLighten\": //变淡\n                            case \"EffectTransparency\": //透明\n                            case \"EffectColorBlend\": //对象颜色\n                            case \"EffectComplementaryColor\": //补色\n                            case \"EffectChangeLineColor\": //线条颜色\n                            case \"EffectChangeFillColor\": //填允颜色\n                            case \"EffectFlashOnce\":\n                                //闪烁(一次)\n                                this.element.css(\"visibility\", \"visible\");\n                                break;\n                            case \"EffectCredits\":\n                                //字幕式特殊处理\n                                this.element.css(\"visibility\", \"hidden\");\n                                break;\n                            default:\n                                if (this.isExit0) this.element.css(\"visibility\", \"visible\"); //退出动画默认显示\n                                else this.element.css(\"visibility\", \"hidden\"); //进入动画默认隐藏\n                                break;\n                        }\n                    }\n                }\n\n                //标识初始化状态\n                this.element.attr(\"data-pptAnimation\", true);\n                this.elementStyle = this.element[0].style.cssText;\n                this.elementVisibility = this.element.css(\"visibility\");\n            }\n        }\n\n        /**\r\n         * 初始化\r\n         * @param  {[type]} startEvent    [description]\r\n         * @param  {[type]} completeEvent [description]\r\n         * @return {[type]}               [description]\r\n         */\n\n    }, {\n        key: '_initAnimation',\n        value: function _initAnimation(startEvent, completeEvent) {\n            var self = this;\n\n            var startHandler = function startHandler(preCode) {\n                //整个动画开始事件(外部事件)\n                if (typeof startEvent == \"function\") startEvent();\n                //条件判断动画是否执行\n                if (typeof preCode == \"function\") {\n                    self.animation.pause();\n                    var result = false;\n                    try {\n                        result = preCode();\n                    } catch (error) {\n                        console.log(\"Run preCode is error in startHandler:\" + error);\n                    }\n                    if (result == true) self.animation.resume();else {\n                        self.animation.stop();\n                        //整个动画完成事件(动画不需继续执行视为执行完成)\n                        if (typeof completeEvent == \"function\") completeEvent();\n                    }\n                }\n            };\n\n            var completeHandler = function completeHandler(postCode, codeDelay) {\n                self.isCompleted = true;\n                //延迟执行postCode代码\n                try {\n                    if (typeof postCode == \"function\") {\n                        if (codeDelay > 0) setTimeout(postCode, codeDelay);else postCode();\n                    }\n                } catch (error) {\n                    console.log(\"Run postCode is error in completeHandler:\" + error);\n                }\n                //整个动画完成事件(外部事件)\n                if (typeof completeEvent == \"function\") completeEvent();\n            };\n\n            var start = new TimelineLite({\n                paused: true,\n                onStart: startHandler,\n                onStartParams: [this.preCode],\n                onComplete: completeHandler,\n                onCompleteParams: [this.postCode, this.codeDelay]\n            });\n\n            for (var i = 0; i < this.options.length; i++) {\n                if (i == 0) {\n                    start.add(this._getTimeline(this.options[i], i), \"shape0\");\n                } else {\n                    var invokeMode = this.options[i].invokeMode;\n                    if (invokeMode == 2) start.add(this._getTimeline(this.options[i], i));else start.add(this._getTimeline(this.options[i], i), \"shape0\"); //\"shape\"+(i-1)\n                }\n            }\n            return start;\n        }\n\n        /**\r\n         * 返回动画对象\r\n         * @param  {[type]} data  [description]\r\n         * @param  {[type]} index [description]\r\n         * @return {[type]}       [description]\r\n         */\n\n    }, {\n        key: '_getTimeline',\n        value: function _getTimeline(data, index) {\n            var object = this.element;\n            var parameter = this.parameter0;\n            var isExit = this.isExit0;\n            if (index > 0 || this.parameter0 == null) {\n                parameter = (0, _dom.parseJSON)(data.parameter);\n                isExit = parameter.exit ? parameter.exit.toLowerCase() == \"true\" : false; //false:进入 true:消失\n                if (index == 0) {\n                    this.parameter0 = parameter;\n                    this.isExit0 = isExit;\n                }\n            }\n            var duration = data.speed / 1000; //执行时间\n            var delay = data.delay / 1000; //延时时间\n            if (navigator.epubReadingSystem) delay += 0.15; //如果是epub阅读器则动画延时0.15秒\n            var repeat = data.repeat >= 0 ? data.repeat - 1 : 0; //重复次数\n            if (this.hasLoop) repeat = -1;\n            parameter.pageType = this.pageType;\n            parameter.chapterId = this.chapterId;\n            parameter.animationName = data.animationName;\n            //赋给动画音频Id\n            parameter.videoId = data.videoId;\n\n            //文字动画\n            if (data.animationName == \"xxtTextEffect\") {\n                return this.getTextAnimation(parameter, object, duration, delay, repeat);\n            }\n\n            //路径动画\n            if (data.animationName.indexOf(\"EffectPath\") == 0 || data.animationName == \"EffectCustom\") {\n                return this.getPathAnimation(parameter, object, duration, delay, repeat);\n            }\n\n            switch (data.animationName) {\n                //进入退出动画\n                default:\n                case \"EffectAppear\":\n                    //出现/消失\n                    return this.getEffectAppear(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectFade\":\n                    //淡出\n                    return this.getEffectFade(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectFly\":\n                    //飞入/飞出\n                    return this.getEffectFly(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectAscend\":\n                    //浮入/浮出(上升)\n                    return this.getEffectAscend(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectDescend\":\n                    //浮入/浮出(下降)\n                    return this.getEffectDescend(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectSplit\":\n                    //劈裂(分割)\n                    return this.getEffectSplit(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectWipe\":\n                    //擦除\n                    return this.getEffectWipe(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectCircle\":\n                    //形状一(圆)\n                    return this.getEffectCircle(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectBox\":\n                    //形状二(方框)\n                    return this.getEffectBox(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectDiamond\":\n                    //形状三(菱形)\n                    return this.getEffectDiamond(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectPlus\":\n                    //形状四(加号)\n                    return this.getEffectPlus(parameter, object, isExit, duration, delay, repeat);\n                /*\r\n                case \"EffectWheel\": //轮子\r\n                return;\r\n                case \"EffectRandomBars\": //随机线条\r\n                return;\r\n                */\n                case \"EffectGrowAndTurn\":\n                    //翻转式由远及近\n                    return this.getEffectGrowAndTurn(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectZoom\":\n                    //基本缩放\n                    return this.getEffectZoom(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectFadedZoom\":\n                    //淡出式缩放\n                    return this.getEffectFadedZoom(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectSwivel\":\n                    //基本旋转\n                    return this.getEffectSwivel(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectFadedSwivel\":\n                    //旋转(淡出式回旋)\n                    return this.getEffectFadedSwivel(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectBounce\":\n                    //弹跳\n                    return this.getEffectBounce(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectBlinds\":\n                    //百叶窗\n                    return this.getEffectBlinds(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectPeek\":\n                    //切入/出\n                    return this.getEffectPeek(parameter, object, isExit, duration, delay, repeat);\n                /*\r\n                case \"EffectWedge\": //楔入\r\n                return;\r\n                case \"EffectStrips\": //阶梯状\r\n                return;\r\n                case \"EffectCheckerboard\": //棋盘\r\n                return;\r\n                case \"EffectDissolve\": //向内/外溶解\r\n                return;\r\n                */\n                case \"EffectExpand\":\n                    //展开/收缩\n                    return this.getEffectExpand(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectRiseUp\":\n                    //升起/下沉\n                    return this.getEffectRiseUp(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectCenterRevolve\":\n                    //中心旋转\n                    return this.getEffectCenterRevolve(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectSpinner\":\n                    //回旋\n                    return this.getEffectSpinner(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectFloat\":\n                    //浮动\n                    return this.getEffectFloat(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectSpiral\":\n                    //螺旋飞入/出\n                    return this.getEffectSpiral(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectPinwheel\":\n                    //玩具风车\n                    return this.getEffectPinwheel(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectCredits\":\n                    //字幕式\n                    return this.getEffectCredits(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectBoomerang\":\n                    //飞旋\n                    return this.getEffectBoomerang(parameter, object, isExit, duration, delay, repeat);\n                case \"EffectArcUp\":\n                    //曲线向上/下\n                    return this.getEffectArcUp(parameter, object, isExit, duration, delay, repeat);\n\n                //强调动画\n                case \"EffectFlashBulb\":\n                    //脉冲\n                    return this.getEffectFlashBulb(parameter, object, duration, delay, repeat);\n                case \"EffectFlicker\":\n                    //彩色脉冲\n                    return this.getEffectFlicker(parameter, object, duration, delay, repeat);\n                case \"EffectTeeter\":\n                    //跷跷板\n                    return this.getEffectTeeter(parameter, object, duration, delay, repeat);\n                case \"EffectSpin\":\n                    //陀螺旋转\n                    return this.getEffectSpin(parameter, object, duration, delay, repeat);\n                case \"EffectGrowShrink\":\n                    //放大/缩小\n                    return this.getEffectGrowShrink(parameter, object, duration, delay, repeat);\n                case \"EffectDesaturate\":\n                    //不饱和\n                    return this.getEffectDesaturate(parameter, object, duration, delay, repeat);\n                case \"EffectDarken\":\n                    //加深\n                    return this.getEffectDarken(parameter, object, duration, delay, repeat);\n                case \"EffectLighten\":\n                    //变淡\n                    return this.getEffectLighten(parameter, object, duration, delay, repeat);\n                case \"EffectTransparency\":\n                    //透明\n                    return this.getEffectTransparency(parameter, object, duration, delay, repeat);\n                case \"EffectColorBlend\":\n                    //对象颜色\n                    return new TimelineMax();\n                case \"EffectComplementaryColor\":\n                    //补色\n                    return this.getEffectComplementaryColor(parameter, object, duration, delay, repeat);\n                case \"EffectChangeLineColor\":\n                    //线条颜色\n                    return new TimelineMax();\n                case \"EffectChangeFillColor\":\n                    //填允颜色\n                    return new TimelineMax();\n                case \"EffectFlashOnce\":\n                    //闪烁(一次)\n                    return this.getEffectFlashOnce(parameter, object, duration, delay, repeat);\n                /*\r\n                //路径动画\r\n                case \"EffectPathDown\": //直线（下） M 0 0 L 0 0.25 E\r\n                case \"EffectPathLeft\": //直线（靠左）\r\n                case \"EffectPathRight\": //直线（靠右）\r\n                case \"EffectPathUp\": //直线（上）\r\n                case \"EffectPathDiamond\": //形状（菱形）\r\n                case \"EffectPathEqualTriangle\": //形状（等边三角形）\r\n                case \"EffectPathHexagon\": //形状（六边形）\r\n                case \"EffectPathOctagon\": //形状（八边形）\r\n                case \"EffectPathParallelogram\": //形状（平行四边形）\r\n                case \"EffectPathPentagon\": //形状（五边形）\r\n                case \"EffectPathRightTriangle\": //形状（直角三角形）\r\n                case \"EffectPathSquare\": //形状（正方形）\r\n                case \"EffectPathTrapezoid\": //形状（梯形）\r\n                case \"EffectPathArcDown\": //弧线（向下）\r\n                case \"EffectPathArcLeft\": //弧线（靠左）\r\n                case \"EffectPathArcRight\": //弧线（向右）\r\n                case \"EffectPathArcUp\": //弧线（向上\r\n                case \"EffectPathTurnDown\": //转弯(下) M 0 0 L 0.125 0 C 0.181 0 0.25 0.069 0.25 0.125 L 0.25 0.25 E\r\n                case \"EffectPathTurnRight\": //转弯（右下）\r\n                case \"EffectPathTurnUp\": //转弯（上）\r\n                case \"EffectPathTurnUpRight\": //转弯（右上）\r\n                case \"EffectPathCircle\": //形状（圆）\r\n                case \"EffectPathHorizontalFigure8\": //循环（水平数字）\r\n                case \"EffectPathVerticalFigure8\": //循环（垂直数字）\r\n                case \"EffectPathLoopdeLoop\": //循环（反复循环）\r\n                case \"EffectPathTeardrop\": //形状（泪滴形）\r\n                case \"EffectPath5PointStar\": //形状（五角形）\r\n                case \"EffectPathCrescentMoon\": //形状（新月形）\r\n                case \"EffectCustom\": //自定义路径\r\n                return this.getPathAnimation(parameter,object,duration,delay,repeat);\r\n                */\n            }\n        }\n\n        /**\r\n         * 解锁处理\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_unlockHandler',\n        value: function _unlockHandler() {\n            //购买解锁\n            var unlock = Xut.Application.Unlock ? Xut.Application.Unlock() : \"undefind\";\n            //脚本解锁\n            if (typeof this.preCode == \"function\") {\n                try {\n                    unlock = this.preCode();\n                } catch (error) {\n                    console.log(\"Run preCode is error in initElement:\" + error);\n                }\n                unlock = !!unlock;\n            }\n            //如果其值为1，并且当前未解锁，则执行动画(显示)，否则不执行。\n            if (unlock == false && this.parameter0.inapp == 1) this.element.css(\"visibility\", \"visible\");\n            //如果其值为2，并且当前已解锁，则执行动画(显示)，否则不执行。\n            else if (unlock == true && this.parameter0.inapp == 2) this.element.css(\"visibility\", \"visible\");else this.element.css(\"visibility\", \"hidden\"); //默认隐藏\n        }\n\n        /**\r\n         * 子动画通用开始事件\r\n         * @param  {[type]} parameter [description]\r\n         * @param  {[type]} object    [description]\r\n         * @param  {[type]} params    [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: 'startHandler',\n        value: function startHandler(parameter, object, params) {\n\n            for (var item in params) {\n                switch (item) {\n                    case \"x\":\n                        TweenLite.set(object, {\n                            x: params[item]\n                        });\n                        break;\n                    case \"y\":\n                        TweenLite.set(object, {\n                            y: params[item]\n                        });\n                        break;\n                    case \"rotation\":\n                        TweenLite.set(object, {\n                            rotation: params[item]\n                        });\n                        break;\n                    case \"rotationX\":\n                        TweenLite.set(object, {\n                            rotationX: params[item]\n                        });\n                        break;\n                    case \"rotationY\":\n                        TweenLite.set(object, {\n                            rotationY: params[item]\n                        });\n                        break;\n                    case \"scale\":\n                        TweenLite.set(object, {\n                            scale: params[item]\n                        });\n                        break;\n                    default:\n                        object.css(item, params[item]);\n                        break;\n                }\n            }\n\n            //ppt动画音频\n            if (parameter.videoId > 0) {\n                (0, _manager.createContentAudio)(parameter.chapterId, parameter.videoId);\n            }\n\n            /*eslint-disable */\n\n            //ppt动画扩展处理\n            if (parameter.pptanimation && parameter.pptanimation.pptapi) {\n\n                var params = parameter.pptanimation.parameters ? parameter.pptanimation.parameters : {};\n                switch (parameter.pptanimation.pptapi) {\n                    case \"bonesWidget\":\n                        //骨骼动画\n                        bonesWidget.updateAction(object.attr(\"id\"), params.actList);\n                        break;\n                    case \"spiritWidget\":\n                        // if (window.spiritWidget) {\n                        (0, _advsprite.updateAction)(object.attr(\"id\"), params);\n                        // }\n                        break;\n                }\n            }\n\n            /*eslint-enable */\n        }\n\n        /**\r\n         * 子动画通用结束事件\r\n         * @param  {[type]} parameter [description]\r\n         * @param  {[type]} object    [description]\r\n         * @param  {[type]} params    [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: 'completeHandler',\n        value: function completeHandler(parameter, object, params) {\n            //if(parameter.pptAudio) parameter.pptAudio.end(); //声音存在延时问题，马上结束可导制无法听到声音\n            for (var item in params) {\n                switch (item) {\n                    case \"x\":\n                        TweenLite.set(object, {\n                            x: params[item]\n                        });\n                        break;\n                    case \"y\":\n                        TweenLite.set(object, {\n                            y: params[item]\n                        });\n                        break;\n                    case \"rotation\":\n                        TweenLite.set(object, {\n                            rotation: params[item]\n                        });\n                        break;\n                    case \"rotationX\":\n                        TweenLite.set(object, {\n                            rotationX: params[item]\n                        });\n                        break;\n                    case \"rotationY\":\n                        TweenLite.set(object, {\n                            rotationY: params[item]\n                        });\n                        break;\n                    case \"scale\":\n                        TweenLite.set(object, {\n                            scale: params[item]\n                        });\n                        break;\n                    default:\n                        object.css(item, params[item]);\n                        break;\n                }\n            }\n        }\n\n        /**\r\n         * 执行动画\r\n         * @param  {[type]} scopeComplete [description]\r\n         * @return {[type]}               [description]\r\n         */\n\n    }, {\n        key: 'play',\n        value: function play(scopeComplete) {\n            if (this.hasRunning == false) return;\n            if (this.isCompleted) this.reset();\n            this.animation = this._initAnimation(this.startEvent, scopeComplete || this.completeEvent);\n            this.animation.play();\n        }\n\n        /**\r\n         * 停止动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop() {\n            if (this.animation instanceof TimelineLite) {\n                this.animation.stop();\n                this.animation.kill();\n                this.animation.clear();\n            }\n            this.animation = null;\n        }\n\n        /**\r\n         * 复位动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.stop();\n            if (this.elementStyle && this.elementStyle.length > 0) {\n                var origin = this.element.css(\"-webkit-transform-origin\");\n                var isscroll = this.element.attr(\"isscroll\");\n                if (isscroll == null) this.element[0].style.cssText = this.elementStyle; //卷滚区域里的对象不需要还原\n                this.element.css(\"-webkit-transform-origin\", origin);\n                this.element.css(\"visibility\", this.elementVisibility);\n                this.element.css(\"-webkit-transform\", \"none\");\n                this.element[0][\"_gsTransform\"] = null; //清理对象上绑定的动画属性\n            }\n            if (this.hasRunning == false) this._unlockHandler();\n            this.isCompleted = false;\n        }\n\n        /**\r\n         * 销毁动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.stop();\n            this.container = null;\n            this.options = null;\n            this.element = null;\n        }\n    }]);\n\n    return PPT;\n}();\n\n//动画扩展\n\n\n(0, _internal.internal)(PPT.prototype);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/ppt/index.js\n ** module id = 87\n ** module chunks = 0\n **/","'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.internal=internal;var _support=require('./support');var _util=require('./util');var filter=Xut.style.filter;function internal(animproto){//文字动画\nanimproto.getTextAnimation=function(parameter,object,duration,delay,repeat){if(delay==0)delay=0.1;//子对象间延时不能为0\nvar type=parameter.effectType?parameter.effectType:\"text1\";var color=parameter.startColor?parameter.startColor:\"\";var svgElement=object.find(\"svg\").children();var t1=new TimelineMax({repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(type){default:case\"text5\"://文字逐行蹦出(以行为单位)\ncase\"text1\"://文字逐个蹦出(以字为单位)\nt1.staggerFrom(svgElement.children(),duration,{css:{'opacity':0}},delay);break;case\"text2\"://文字放大出现(以字为单位)\nt1.staggerFrom(svgElement.children(),duration,{css:{'opacity':0,\"font-size\":120},ease:\"Strong.easeOut\"},delay);break;case\"text3\"://文字缩小出现(以字为单位)\nt1.staggerFrom(svgElement.children(),duration,{css:{'opacity':0,\"font-size\":0},ease:\"Power1.easeIn\"},delay);break;case\"text4\"://文字渐变出现(以字为单位)\nt1.staggerFrom(svgElement.children(),duration,{css:{'opacity':0,\"fill\":color},ease:\"Power1.easeIn\"},delay);break;}return t1;};//出现/消失\nanimproto.getEffectAppear=function(parameter,object,isExit,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});if(isExit==false)t1.to(object,0.001,{autoAlpha:1});else t1.to(object,0.001,{css:{visibility:\"hidden\"}});return t1;};//淡出\nanimproto.getEffectFade=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,ease:parameter.tweenEase,immediateRender:false});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});t1.to(object,duration,{autoAlpha:0,ease:parameter.tweenEase});}return t1;};//飞入效果\nanimproto.getEffectFly=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(上、下、左、右、左上、左下、右上、右下)\nvar t1=null;var objInfo=this._getObjectInfo(object);var easeString=Expo.easeOut;var x,y;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(parameter.smoothStart==1||parameter.smoothEnd==1||parameter.bounceEnd==1){if(isExit==true)easeString=Power4.easeOut;else easeString=Elastic.easeOut;}if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{visibility:\"visible\"}]});switch(direction){case\"DirectionDown\":y=objInfo.offsetBottom+objInfo.height;t1.from(object,duration,{y:y,ease:easeString,immediateRender:false});break;case\"DirectionLeft\":x=0-(objInfo.offsetLeft+objInfo.width);t1.from(object,duration,{x:x,ease:easeString,immediateRender:false});break;case\"DirectionUp\":y=0-(objInfo.offsetTop+objInfo.height);t1.from(object,duration,{y:y,ease:easeString,immediateRender:false});break;case\"DirectionRight\":x=objInfo.offsetRight+objInfo.width;t1.from(object,duration,{x:x,ease:easeString,immediateRender:false});break;case\"DirectionDownLeft\":x=0-(objInfo.offsetLeft+objInfo.width);y=objInfo.offsetBottom+objInfo.height;t1.from(object,duration,{x:x,y:y,ease:easeString,immediateRender:false});break;case\"DirectionDownRight\":x=objInfo.offsetRight+objInfo.width;y=objInfo.offsetBottom+objInfo.height;t1.from(object,duration,{x:x,y:y,ease:easeString,immediateRender:false});break;case\"DirectionUpLeft\":x=0-(objInfo.offsetLeft+objInfo.width);y=0-(objInfo.offsetTop+objInfo.height);t1.from(object,duration,{x:x,y:y,ease:easeString,immediateRender:false});break;case\"DirectionUpRight\":x=objInfo.offsetRight+objInfo.width;y=0-(objInfo.offsetTop+objInfo.height);t1.from(object,duration,{x:x,y:y,ease:easeString,immediateRender:false});break;default:console.log(\"getEffectFly:parameter error.\");break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{x:0,y:0,visibility:\"hidden\"//clearProps功能(对象被还原)必须隐藏对象\n}]});switch(direction){case\"DirectionDown\":y=objInfo.offsetBottom+objInfo.height;t1.to(object,duration,{y:y,//clearProps: \"y\",\nease:easeString});break;case\"DirectionLeft\":x=0-(objInfo.offsetLeft+objInfo.width);t1.to(object,duration,{x:x,//clearProps: \"x\",\nease:easeString});break;case\"DirectionUp\":y=0-(objInfo.offsetTop+objInfo.height);t1.to(object,duration,{y:y,//clearProps: \"y\",\nease:easeString});break;case\"DirectionRight\":x=objInfo.offsetRight+objInfo.width;t1.to(object,duration,{x:x,//clearProps: \"x\",\nease:easeString});break;case\"DirectionDownLeft\":x=0-(objInfo.offsetLeft+objInfo.width);y=objInfo.offsetBottom+objInfo.height;t1.to(object,duration,{x:x,y:y,//clearProps: \"x,y\",\nease:easeString});break;case\"DirectionDownRight\":x=objInfo.offsetRight+objInfo.width;y=objInfo.offsetBottom+objInfo.height;t1.to(object,duration,{x:x,y:y,//clearProps: \"x,y\",\nease:easeString});break;case\"DirectionUpLeft\":x=0-(objInfo.offsetLeft+objInfo.width);y=0-(objInfo.offsetTop+objInfo.height);t1.to(object,duration,{x:x,y:y,//clearProps: \"x,y\",\nease:easeString});break;case\"DirectionUpRight\":x=objInfo.offsetRight+objInfo.width;y=0-(objInfo.offsetTop+objInfo.height);t1.to(object,duration,{x:x,y:y,//clearProps: \"x,y\",\nease:easeString});break;default:console.log(\"getEffectFly:parameter error.\");break;}}return t1;};//浮入/浮出(下方)\nanimproto.getEffectAscend=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});//t1.to(object, 0.001, {opacity: 0, y: 100}).to(object, duration - 0.001, {autoAlpha: 1, y: 0, ease: parameter.tweenEase});\nt1.from(object,duration,{autoAlpha:0,y:100,ease:parameter.tweenEase,immediateRender:false});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,y:0}]});t1.to(object,duration,{autoAlpha:0,y:100,//clearProps: \"y\", //己失效\nease:parameter.tweenEase});}return t1;};//浮入/浮出(上方)\nanimproto.getEffectDescend=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});//t1.to(object, 0.001, {y: -100}).to(object, duration - 0.001, {autoAlpha: 1, y: 0, ease: parameter.tweenEase});\nt1.from(object,duration,{autoAlpha:0,y:-100,ease:parameter.tweenEase,immediateRender:false});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});t1.to(object,duration,{autoAlpha:0,y:-100,ease:parameter.tweenEase,clearProps:\"y\"});}return t1;};//形状一(圆)\nanimproto.getEffectCircle=function(parameter,object,isExit,duration,delay,repeat){if(this.useMask==false)return this.getEffectAppear(parameter,object,isExit,duration,delay,repeat);var direction=parameter.direction;//方向(DirectionIn、DirectionOut)\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var result=this._getObjectInfo(object);var radius=Math.ceil(Math.sqrt(result.width*result.width/4+result.height*result.height/4));switch(direction){case\"DirectionIn\"://放大\ncase\"DirectionOut\"://缩小\nif(isExit==false){t1.to(object,duration,{onUpdate:updateCircleGradient});}else{t1.to(object,duration,{onUpdate:updateCircleGradient});}break;default:console.log(\"getEffectCircle:parameter error.\");break;}return t1;function updateCircleGradient(){var progress=t1.progress();var len=parseInt(progress*radius);if(isExit==false)switch(direction){case\"DirectionIn\"://DirectionIn放大\nobject.css(\"-webkit-mask\",\"-webkit-gradient(radial,center center,\"+(radius-len)+\",center center,0,from(rgba(0,0,0,1)),to(rgba(0,0,0,0)),color-stop(10%,rgba(0,0,0,0)))\");if(len==radius)object.css(\"-webkit-mask\",\"none\");break;case\"DirectionOut\"://DirectionOut缩小\nobject.css(\"-webkit-mask\",\"-webkit-gradient(radial,center center,0,center center, \"+len+\",from(rgba(0,0,0,1)), to(rgba(0,0,0,0)), color-stop(90%, rgba(0,0,0,1)))\");if(len==radius)object.css(\"-webkit-mask\",\"none\");break;}else{switch(direction){case\"DirectionIn\"://DirectionIn放大\nobject.css(\"-webkit-mask\",\"-webkit-gradient(radial,center center,\"+(radius-len)+\",center center,0,from(rgba(0,0,0,0)),to(rgba(0,0,0,1)),color-stop(10%,rgba(0,0,0,1)))\");if(len==radius){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}break;case\"DirectionOut\"://DirectionOut缩小\nobject.css(\"-webkit-mask\",\"-webkit-gradient(radial,center center,0,center center, \"+len+\",from(rgba(0,0,0,0)), to(rgba(0,0,0,1)), color-stop(90%, rgba(0,0,0,0)))\");if(len==radius){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}break;}}}};//形状二(方框)\nanimproto.getEffectBox=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(DirectionIn、DirectionOut)\nif(this.useMask==false)direction=\"DirectionOut\";var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var objInfo=this._getObjectInfo(object);t1.to(object,duration,{onUpdate:updateEffectBox});return t1;function updateEffectBox(){var width,height,left,top;var progress=t1.progress();var percent=progress/2;if(isExit==false){switch(direction){case\"DirectionIn\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+percent+\",transparent),color-stop(\"+(1-percent)+\",transparent),color-stop(\"+(1-percent)+\",rgba(0,0,0,1))),-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+percent+\",transparent),color-stop(\"+(1-percent)+\",transparent),color-stop(\"+(1-percent)+\",rgba(0,0,0,1)))\");break;case\"DirectionOut\":top=objInfo.height*(0.5-percent);height=objInfo.height-top;left=objInfo.width*(0.5-percent);width=objInfo.width-left;object.css(\"clip\",\"rect(\"+top+\"px \"+width+\"px \"+height+\"px \"+left+\"px)\");break;default:console.log(\"getEffectBox:parameter error.\");break;}if(percent>=0.5)object.css(\"-webkit-mask\",\"none\");}else{switch(direction){case\"DirectionIn\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5+percent)+\",transparent),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1))),-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5+percent)+\",transparent),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)))\");break;case\"DirectionOut\":top=objInfo.height*percent;height=objInfo.height-top;left=objInfo.width*percent;width=objInfo.width-left;object.css(\"clip\",\"rect(\"+top+\"px \"+width+\"px \"+height+\"px \"+left+\"px)\");break;default:console.log(\"getEffectBox:parameter error.\");break;}if(percent>=0.5){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}}}};//形状三(菱形)\nanimproto.getEffectDiamond=function(parameter,object,isExit,duration,delay,repeat){if(this.useMask==false)return this.getEffectAppear(parameter,object,isExit,duration,delay,repeat);var direction=parameter.direction;//方向(DirectionIn、DirectionOut)\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});// var objInfo = this._getObjectInfo(object);\nt1.to(object,duration,{onUpdate:updateEffectBox});return t1;function updateEffectBox(){var progress=t1.progress();var percent=progress/2;if(isExit==false){switch(direction){case\"DirectionOut\":case\"DirectionIn\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+percent+\",transparent),color-stop(\"+(1-percent)+\",transparent),color-stop(\"+(1-percent)+\",rgba(0,0,0,1))),-webkit-gradient(linear,0% 100%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+percent+\",transparent),color-stop(\"+(1-percent)+\",transparent),color-stop(\"+(1-percent)+\",rgba(0,0,0,1)))\");break;default:console.log(\"getEffectBox:parameter error.\");break;}if(percent>=0.5)object.css(\"-webkit-mask\",\"none\");}else{switch(direction){case\"DirectionOut\":case\"DirectionIn\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5+percent)+\",transparent),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1))),-webkit-gradient(linear,0% 100%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5+percent)+\",transparent),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)))\");break;default:console.log(\"getEffectBox:parameter error.\");break;}if(percent>=0.5){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}}}};//形状四(加号)\nanimproto.getEffectPlus=function(parameter,object,isExit,duration,delay,repeat){if(this.useMask==false)return this.getEffectAppear(parameter,object,isExit,duration,delay,repeat);var direction=parameter.direction;//方向(DirectionIn、DirectionOut)\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{onUpdate:updateEffectPlus});return t1;function updateEffectPlus(){var progress=t1.progress();var percent=progress/2;if(isExit==false){switch(direction){case\"DirectionIn\":case\"DirectionOut\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),\"+\"color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),\"+\"color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5+percent)+\",transparent)),\"+\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),\"+\"color-stop(\"+(0.5-percent)+\",transparent),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),\"+\"color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5+percent)+\",transparent))\");break;default:console.log(\"getEffectPlus:parameter error.\");break;}if(percent>=0.5)object.css(\"-webkit-mask\",\"none\");}else{switch(direction){case\"DirectionIn\":case\"DirectionOut\":object.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),\"+\"color-stop(\"+percent+\",transparent),color-stop(\"+percent+\",rgba(0,0,0,1)),\"+\"color-stop(\"+(1-percent)+\",rgba(0,0,0,1)),color-stop(\"+(1-percent)+\",transparent)),\"+\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),\"+\"color-stop(\"+percent+\",transparent),color-stop(\"+percent+\",rgba(0,0,0,1)),\"+\"color-stop(\"+(1-percent)+\",rgba(0,0,0,1)),color-stop(\"+(1-percent)+\",transparent))\");break;default:console.log(\"getEffectPlus:parameter error.\");break;}if(percent>=0.5){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}}}};//百叶窗\nanimproto.getEffectBlinds=function(parameter,object,isExit,duration,delay,repeat){if(this.useMask==false)return this.getEffectAppear(parameter,object,isExit,duration,delay,repeat);var direction=parameter.direction;//方向（水平：DirectionHorizontal、垂直：DirectionVertical）\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{onUpdate:updateEffectBlinds});return t1;function updateEffectBlinds(){var num=6;//分成N等份\nvar progress=t1.progress();var percent=progress/num;var avg=1/num;var temp=0.01;//渐变的过渡区\nvar str=\"\";if(isExit==false){switch(direction){case\"DirectionHorizontal\"://水平\nstr=\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,0))\"+\",color-stop(\"+percent+\",rgba(0,0,0,1))\"+\",color-stop(\"+(percent+temp)+\",rgba(0,0,0,0))\";for(var i=1;i<num;i++){str+=\",color-stop(\"+i*avg+\",rgba(0,0,0,0))\"+\",color-stop(\"+(i*avg+temp)+\",rgba(0,0,0,1))\";str+=\",color-stop(\"+(i*avg+percent)+\",rgba(0,0,0,1))\"+\",color-stop(\"+(i*avg+percent+temp)+\",rgba(0,0,0,0))\";}str+=\")\";break;case\"DirectionVertical\"://垂直\nstr=\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,0))\"+\",color-stop(\"+percent+\",rgba(0,0,0,1))\"+\",color-stop(\"+(percent+temp)+\",rgba(0,0,0,0))\";for(var j=1;j<num;j++){str+=\",color-stop(\"+j*avg+\",rgba(0,0,0,0))\"+\",color-stop(\"+(j*avg+temp)+\",rgba(0,0,0,1))\";str+=\",color-stop(\"+(j*avg+percent)+\",rgba(0,0,0,1))\"+\",color-stop(\"+(j*avg+percent+temp)+\",rgba(0,0,0,0))\";}str+=\")\";break;default:console.log(\"getEffectBlinds:parameter error.\");break;}object.css(\"-webkit-mask\",str);if(percent>=avg-temp)object.css(\"-webkit-mask\",\"none\");}else{switch(direction){case\"DirectionHorizontal\"://水平\nstr=\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,0))\"+\",color-stop(\"+(1-percent)+\",rgba(0,0,0,0))\"+\",color-stop(\"+(1-percent-temp)+\",rgba(0,0,0,1))\";for(var n=1;n<num;n++){str+=\",color-stop(\"+n*avg+\",rgba(0,0,0,1))\"+\",color-stop(\"+(n*avg-temp)+\",rgba(0,0,0,0))\";str+=\",color-stop(\"+(n*avg-percent)+\",rgba(0,0,0,0))\"+\",color-stop(\"+(n*avg-percent-temp)+\",rgba(0,0,0,1))\";}str+=\")\";break;case\"DirectionVertical\"://垂直\nstr=\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,0))\"+\",color-stop(\"+(1-percent)+\",rgba(0,0,0,0))\"+\",color-stop(\"+(1-percent-temp)+\",rgba(0,0,0,1))\";for(var k=1;k<num;k++){str+=\",color-stop(\"+k*avg+\",rgba(0,0,0,1))\"+\",color-stop(\"+(k*avg-temp)+\",rgba(0,0,0,0))\";str+=\",color-stop(\"+(k*avg-percent)+\",rgba(0,0,0,0))\"+\",color-stop(\"+(k*avg-percent-temp)+\",rgba(0,0,0,1))\";}str+=\")\";break;default:console.log(\"getEffectBlinds:parameter error.\");break;}object.css(\"-webkit-mask\",str);if(percent>=avg-temp){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}}}};//劈裂\nanimproto.getEffectSplit=function(parameter,object,isExit,duration,delay,repeat){if(this.useMask==false)return this.getEffectAppear(parameter,object,isExit,duration,delay,repeat);var direction=parameter.direction;//方向(DirectionVerticalIn、DirectionHorizontalIn、DirectionHorizontalOut、DirectionVerticalOut)\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{onUpdate:updateEffectSplit});return t1;function updateEffectSplit(){var progress=t1.progress();var percent=progress/2;if(isExit==false){if(progress>0.9){//跳过最后10%（解决iPad的闪问题）\nobject.css(\"-webkit-mask\",\"none\");return;}switch(direction){case\"DirectionVerticalIn\"://左右向中间收\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(percent-0.05)+\",rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,0)),color-stop(\"+(1-percent)+\",rgba(0,0,0,0)),color-stop(\"+(1-percent+0.05)+\",rgba(0,0,0,1)))\");break;case\"DirectionHorizontalIn\"://上下向中间收\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(percent-0.05)+\",rgba(0,0,0,1)),color-stop(\"+percent+\",rgba(0,0,0,0)),color-stop(\"+(1-percent)+\",rgba(0,0,0,0)),color-stop(\"+(1-percent+0.05)+\",rgba(0,0,0,1)))\");break;case\"DirectionHorizontalOut\"://中间向上下展开\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,0)),color-stop(\"+(0.55-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)),color-stop(\"+(percent+0.55)+\",rgba(0,0,0,0)))\");break;case\"DirectionVerticalOut\"://中间向左右展开\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,0)),color-stop(\"+(0.55-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,1)),color-stop(\"+(percent+0.55)+\",rgba(0,0,0,0)))\");break;default:console.log(\"getEffectSplit:parameter error.\");break;}//if (percent >= 0.5) object.css(\"-webkit-mask\", \"none\");\n}else{if(progress<0.1)return;//跳过前面10%（解决iPad的闪问题）\nswitch(direction){case\"DirectionVerticalIn\"://左右向中间收\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),color-stop(\"+(percent-0.05)+\",rgba(0,0,0,0)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+(1-percent)+\",rgba(0,0,0,1)),color-stop(\"+(1-percent+0.05)+\",rgba(0,0,0,0)))\");break;case\"DirectionHorizontalIn\"://上下向中间收\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,0)), to(rgba(0,0,0,0)),color-stop(\"+(percent-0.05)+\",rgba(0,0,0,0)),color-stop(\"+percent+\",rgba(0,0,0,1)),color-stop(\"+(1-percent)+\",rgba(0,0,0,1)),color-stop(\"+(1-percent+0.05)+\",rgba(0,0,0,0)))\");break;case\"DirectionHorizontalOut\"://中间向上下展开\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 0% 100%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.55-percent)+\",rgba(0,0,0,0)),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,0)),color-stop(\"+(percent+0.55)+\",rgba(0,0,0,1)))\");break;case\"DirectionVerticalOut\"://中间向左右展开\nobject.css(\"-webkit-mask\",\"-webkit-gradient(linear,0% 0%, 100% 0%, from(rgba(0,0,0,1)), to(rgba(0,0,0,1)),color-stop(\"+(0.5-percent)+\",rgba(0,0,0,1)),color-stop(\"+(0.55-percent)+\",rgba(0,0,0,0)),color-stop(\"+(0.5+percent)+\",rgba(0,0,0,0)),color-stop(\"+(percent+0.55)+\",rgba(0,0,0,1)))\");break;default:console.log(\"getEffectSplit:parameter error.\");break;}if(percent>=0.5){//object.css(\"opacity\",\"0\");\nobject.css(\"visibility\",\"hidden\");object.css(\"-webkit-mask\",\"none\");}}}};//切入/出\nanimproto.getEffectPeek=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(上下左右)\nvar t1=null;var objInfo=this._getObjectInfo(object);if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(direction){case\"DirectionUp\":t1.from(object,duration,{y:-objInfo.height,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionDown\",objInfo]});break;case\"DirectionDown\":t1.from(object,duration,{y:objInfo.height,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionUp\",objInfo]});break;case\"DirectionLeft\":t1.from(object,duration,{x:-objInfo.width,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionRight\",objInfo]});break;case\"DirectionRight\":t1.from(object,duration,{x:objInfo.width,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionLeft\",objInfo]});break;default:console.log(\"getEffectPeek:parameter error.\");break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(direction){case\"DirectionUp\":t1.to(object,duration,{y:-objInfo.height,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionUp\",objInfo]});break;case\"DirectionDown\":t1.to(object,duration,{y:objInfo.height,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionDown\",objInfo]});break;case\"DirectionLeft\":t1.to(object,duration,{x:-objInfo.width,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionLeft\",objInfo]});break;case\"DirectionRight\":t1.to(object,duration,{x:objInfo.width,ease:Linear.easeNone,onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,\"DirectionRight\",objInfo]});break;default:console.log(\"getEffectPeek:parameter error.\");break;}}return t1;};//擦除\nanimproto.getEffectWipe=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(上下左右)\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var objInfo=this._getObjectInfo(object);if(isExit==false){//t1.to(object,duration,{onStart:this.startHandler,onStartParams:[object],onUpdate:this.updateLineGradient,onUpdateParams:[t1,object,isExit,direction]});\nt1.to(object,duration,{onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,direction,objInfo]});}else{//t1.to(object,duration,{onUpdate:this.updateLineGradient,onUpdateParams:[t1,object,isExit,direction]});\nt1.to(object,duration,{onUpdate:this._updateClipRect,onUpdateParams:[t1,object,isExit,direction,objInfo]});}return t1;};//翻转式由远及近\nanimproto.getEffectGrowAndTurn=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,scale:0,rotation:\"90deg\",ease:parameter.tweenEase,clearProps:\"scale,rotation\"});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,scale:1,rotation:\"0deg\"}]});t1.to(object,duration,{autoAlpha:0,scale:0,rotation:\"90deg\",ease:parameter.tweenEase});}return t1;};//升起/下沉\nanimproto.getEffectRiseUp=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var objInfo=this._getObjectInfo(object);var y=objInfo.offsetBottom+objInfo.height;var easeString=Back.easeInOut;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,y:y,ease:easeString});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});t1.to(object,duration,{autoAlpha:0,y:y,ease:easeString});}return t1;};//基本缩放\nanimproto.getEffectZoom=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(放大:DirectionIn、屏幕中心放大:DirectionInCenter、轻微放大:DirectionInSlightly、缩小:DirectionOut、屏幕底部缩小:DirectionOutBottom、轻微缩小:DirectionOutSlightly)\nvar t1=null;var result;object.css(\"-webkit-transform-origin\",\"center\");//设置缩放基点(默认是正中心点)\nif(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(direction){case\"DirectionIn\":t1.from(object,duration,{scale:0,ease:parameter.tweenEase});break;case\"DirectionInCenter\":result=this._getDirectionInCenter(object);t1.from(object,duration,{scale:0,x:result.x,y:result.y,ease:parameter.tweenEase});break;case\"DirectionInSlightly\":t1.from(object,duration,{scale:0.7,ease:parameter.tweenEase});break;case\"DirectionOut\":t1.from(object,duration,{scale:3,ease:parameter.tweenEase});break;case\"DirectionOutBottom\"://屏幕底部缩小(理解为底部的中间开始)\nt1.from(object,duration,{scale:2,top:this.screenWidth+\"px\",ease:parameter.tweenEase});break;case\"DirectionOutSlightly\":t1.from(object,duration,{scale:1.5,ease:parameter.tweenEase});break;default:console.log(\"getEffectZoom:parameter error.\");break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{visibility:\"hidden\"}]});switch(direction){case\"DirectionIn\":t1.to(object,duration,{scale:0,ease:parameter.tweenEase});break;case\"DirectionInCenter\":result=this._getDirectionInCenter(object);t1.to(object,duration,{scale:0,x:result.x,y:result.y,ease:parameter.tweenEase});break;case\"DirectionInSlightly\":t1.to(object,duration,{scale:0.7,ease:parameter.tweenEase});break;case\"DirectionOut\":t1.to(object,duration,{scale:3,ease:parameter.tweenEase});break;case\"DirectionOutBottom\":t1.to(object,duration,{scale:2,top:this.screenHeight+\"px\",ease:parameter.tweenEase});break;case\"DirectionOutSlightly\":t1.to(object,duration,{scale:1.5,ease:parameter.tweenEase});break;default:console.log(\"getEffectZoom:parameter error.\");break;}}return t1;};//缩放 淡出式缩放\nanimproto.getEffectFadedZoom=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向(对象中心DirectionIn、幻灯片中心DirectionInCenter)\nvar t1=null;object.css(\"-webkit-transform-origin\",\"center\");//设置缩放基点(默认是正中心点)\nvar svgElement=object.find(\"svg\");//获取SVG对象\nif(svgElement)svgElement.css('-webkit-transform','translate3d(0px, 0px, 0px)');//解决SVG文字错乱问题\nvar keepRatio=parameter.keepRatio==0?false:true;//保持长宽比\nvar fullScreen=parameter.fullScreen==1?true:false;//缩放到全屏\nvar scaleX=parameter.scaleX?parameter.scaleX:1;//横向缩放比例\nvar scaleY=parameter.scaleY?parameter.scaleY:1;//纵向缩放比例\nvar result;if(fullScreen==true){//计算比例\nvar xScale=this.screenWidth/object.width();var yScale=this.screenHeight/object.height();var scaleValue=xScale;if(xScale>yScale)scaleValue=yScale;result=this._getDirectionInCenter(object);if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{opacity:0}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{x:result.x,y:result.y,autoAlpha:1,scale:scaleValue,ease:parameter.tweenEase});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{x:result.x,y:result.y,autoAlpha:0,scale:scaleValue,ease:parameter.tweenEase});}}else if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(direction){case\"DirectionIn\":if(keepRatio==true)t1.from(object,duration,{autoAlpha:0,scale:0,ease:parameter.tweenEase});else{t1.from(object,duration,{autoAlpha:0,scaleX:scaleX,scaleY:scaleY,ease:parameter.tweenEase});}break;case\"DirectionInCenter\":result=this._getDirectionInCenter(object);if(keepRatio==true)t1.from(object,duration,{x:result.x,y:result.y,autoAlpha:0,scale:0,ease:parameter.tweenEase});else t1.from(object,duration,{x:result.x,y:result.y,autoAlpha:0,scaleX:scaleX,scaleY:scaleY,ease:parameter.tweenEase});break;default:console.log(\"getEffectFadedZoom:parameter error.\");break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});switch(direction){case\"DirectionOut\":if(keepRatio==true)t1.to(object,duration,{autoAlpha:0,scale:0,ease:parameter.tweenEase,clearProps:\"scale\"});else t1.to(object,duration,{autoAlpha:0,scaleX:scaleX,scaleY:scaleY,ease:parameter.tweenEase});break;case\"DirectionOutCenter\":result=this._getDirectionInCenter(object);if(keepRatio==true)t1.to(object,duration,{x:result.x,y:result.y,autoAlpha:0,scale:0,ease:parameter.tweenEase});else t1.to(object,duration,{x:result.x,y:result.y,autoAlpha:0,scaleX:scaleX,scaleY:scaleY,ease:parameter.tweenEase});break;default:console.log(\"getEffectFadedZoom:parameter error.\");break;}}return t1;};//玩具风车\nanimproto.getEffectPinwheel=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,scale:0,rotation:\"540deg\",ease:parameter.tweenEase});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,scale:1,rotation:\"0deg\"}]});t1.to(object,duration,{autoAlpha:0,scale:0,rotation:\"540deg\",ease:parameter.tweenEase});}return t1;};//回旋\nanimproto.getEffectSpinner=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var easeString=Expo.easeOut;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{scale:0,rotation:\"180deg\",ease:easeString});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{visibility:\"hidden\",scale:1,rotation:\"0deg\"}]});t1.to(object,duration,{scale:0,rotation:\"180deg\",ease:easeString});}return t1;};//旋转(淡出式回旋)\nanimproto.getEffectFadedSwivel=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var easeString=Linear.easeNone;var degree=Math.abs(parameter.degree)>0?Number(parameter.degree):90;if(parameter.clockWise==0)degree=0-degree;//逆时针旋转\nswitch(parameter.centerPos){case 1://左上角\nobject.css(\"-webkit-transform-origin\",\"left top\");break;case 2://上边中心\nobject.css(\"-webkit-transform-origin\",\"center top\");break;case 3://右上角\nobject.css(\"-webkit-transform-origin\",\"right top\");break;case 4://左边中心\nobject.css(\"-webkit-transform-origin\",\"left cneter\");break;case 5://右边中心\nobject.css(\"-webkit-transform-origin\",\"right center\");break;case 6://左下角\nobject.css(\"-webkit-transform-origin\",\"left bottom\");break;case 7://下边中心\nobject.css(\"-webkit-transform-origin\",\"center bottom\");break;case 8://右下角\nobject.css(\"-webkit-transform-origin\",\"right bottom\");break;case 0:default://默认中心0\nobject.css(\"-webkit-transform-origin\",\"center\");break;}if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});//t1.from(object,duration,{autoAlpha:0,rotationY:\"540deg\",ease:Linear.easeNone}); //PPT默认效果\nswitch(parameter.axis){case 0://Z轴\nt1.from(object,duration,{autoAlpha:0,rotation:degree+\"deg\",ease:easeString,immediateRender:false});break;case 1://X轴\nt1.from(object,duration,{autoAlpha:0,rotationX:degree+\"deg\",ease:easeString,immediateRender:false});break;case 2://Y轴\ndefault:t1.from(object,duration,{autoAlpha:0,rotationY:degree+\"deg\",ease:easeString,immediateRender:false});break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});//t1.to(object,duration,{autoAlpha:0,rotationY:\"540deg\",ease:Linear.easeNone}); //PPT默认效果\nswitch(parameter.axis){case 0://Z轴\nt1.to(object,duration,{autoAlpha:0,rotation:degree+\"deg\",ease:easeString});break;case 1://X轴\nt1.to(object,duration,{autoAlpha:0,rotationX:degree+\"deg\",ease:easeString});break;case 2://Y轴\ndefault:t1.to(object,duration,{autoAlpha:0,rotationY:degree+\"deg\",ease:easeString});break;}}return t1;};//展开/收缩\nanimproto.getEffectExpand=function(parameter,object,isExit,duration,delay,repeat){var t1=null;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,rotationY:\"45deg\",ease:parameter.tweenEase});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,rotationY:\"0deg\"}]});t1.to(object,duration,{autoAlpha:0,rotationY:\"45deg\",ease:parameter.tweenEase});}return t1;};//基本旋转\nanimproto.getEffectSwivel=function(parameter,object,isExit,duration,delay,repeat){var direction=parameter.direction;//方向（水平：DirectionHorizontal、垂直：DirectionVertical\nvar t1=null;var easeString=Linear.easeNone;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});switch(direction){case\"DirectionHorizontal\":t1.from(object,duration,{rotationY:\"480deg\",ease:easeString});break;case\"DirectionVertical\":t1.from(object,duration,{rotationX:\"480deg\",ease:easeString});break;default:console.log(\"getEffectSwivel:parameter error.\");break;}}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{visibility:\"hidden\"}]});switch(direction){case\"DirectionHorizontal\":t1.to(object,duration,{rotationY:\"480deg\",ease:easeString});break;case\"DirectionVertical\":t1.to(object,duration,{rotationX:\"480deg\",ease:easeString});break;default:console.log(\"getEffectSwivel:parameter error.\");break;}}return t1;};//浮动\nanimproto.getEffectFloat=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var objInfo=this._getObjectInfo(object);var x,y;if(isExit==false){x=objInfo.offsetRight+objInfo.width;y=0-(objInfo.offsetTop+objInfo.height);t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,rotation:\"-45deg\",x:x,y:y,ease:parameter.tweenEase});}else{x=objInfo.offsetRight+objInfo.width;y=0-(objInfo.offsetTop+objInfo.height);t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1}]});t1.to(object,duration,{autoAlpha:0,rotation:\"-45deg\",x:x,y:y,ease:parameter.tweenEase});}return t1;};//字幕式\nanimproto.getEffectCredits=function(parameter,object,isExit,duration,delay,repeat){var objInfo=this._getObjectInfo(object);var y=0,top=0;if(isExit==false){//从下往上移\ny=0-(this.screenHeight+objInfo.height);top=objInfo.top+objInfo.offsetBottom+objInfo.height;}else{//从上往下移\ny=this.screenHeight+objInfo.height;top=objInfo.top-(objInfo.offsetTop+objInfo.height);}var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\",top:top+\"px\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{y:y,ease:parameter.tweenEase});return t1;};//弹跳\nanimproto.getEffectBounce=function(parameter,object,isExit,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var objInfo=this._getObjectInfo(object);var time2,time3,time4,time5,y1,y2,y3,y4,lastY,height,time1,total,width;if(isExit==false){total=duration;time1=total/5;time2=total/10;time3=total/20;time4=total/40;time5=total/80;width=50+20+10+5+2.5+1+0.5+0.2+0.1;height=this.screenHeight/4;y1=height/2;y2=height/4;y3=height/8;y4=height/16;lastY=objInfo.offsetBottom-height+objInfo.height;t1.to(object,0.01,{x:-width,y:-height}).to(object,time1,{x:\"+=50\",y:\"+=\"+height,ease:Circ.easeIn})//慢到快\n.to(object,time1,{x:\"+=20\",y:\"-=\"+y1,scaleY:0.8,ease:Circ.easeOut})//快到慢\n.to(object,time1,{x:\"+=10\",y:\"+=\"+y1,scaleY:1,ease:Circ.easeIn}).to(object,time2,{x:\"+=5\",y:\"-=\"+y2,scaleY:0.85,ease:Circ.easeOut}).to(object,time2,{x:\"+=2.5\",y:\"+=\"+y2,scaleY:1,ease:Circ.easeIn}).to(object,time3,{x:\"+=1\",y:\"-=\"+y3,scaleY:0.9,ease:Circ.easeOut}).to(object,time3,{x:\"+=0.5\",y:\"+=\"+y3,scaleY:1,ease:Circ.easeIn}).to(object,time4,{x:\"+=0.2\",y:\"-=\"+y4,scaleY:0.95,ease:Circ.easeOut}).to(object,time4,{x:\"+=0.1\",y:\"+=\"+y4,scaleY:1,ease:Circ.easeIn,clearProps:\"x,y\"});return t1;}else{total=duration;time1=total/5;time2=total/10;time3=total/20;time4=total/40;time5=total/80;height=this.screenHeight/4;y1=height/2;y2=height/4;y3=height/8;y4=height/16;lastY=objInfo.offsetBottom-height+objInfo.height;t1.to(object,time1,{x:\"+=50\",y:\"+=\"+height,ease:Circ.easeIn})//慢到快\n.to(object,time1,{x:\"+=20\",y:\"-=\"+y1,scaleY:0.8,ease:Circ.easeOut})//快到慢\n.to(object,time1,{x:\"+=10\",y:\"+=\"+y1,scaleY:1,ease:Circ.easeIn}).to(object,time2,{x:\"+=5\",y:\"-=\"+y2,scaleY:0.85,ease:Circ.easeOut}).to(object,time2,{x:\"+=2.5\",y:\"+=\"+y2,scaleY:1,ease:Circ.easeIn}).to(object,time3,{x:\"+=1\",y:\"-=\"+y3,scaleY:0.9,ease:Circ.easeOut}).to(object,time3,{x:\"+=0.5\",y:\"+=\"+y3,scaleY:1,ease:Circ.easeIn}).to(object,time4,{x:\"+=0.2\",y:\"-=\"+y4,scaleY:0.95,ease:Circ.easeOut}).to(object,time4,{x:\"+=0.1\",y:\"+=\"+y4,scaleY:1,ease:Circ.easeIn}).to(object,time5,{x:\"+=0.1\",y:\"+=\"+lastY,ease:Circ.easeIn});}return t1;};//飞旋\nanimproto.getEffectBoomerang=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var time=duration/3;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.add(TweenMax.to(object,0.01,{x:300,y:-200,rotation:\"-60deg\"}),\"first\");t1.add(TweenMax.to(object,time,{autoAlpha:1,x:0,y:0,rotation:\"0deg\"}),\"second\");t1.add(TweenMax.to(object,time,{rotationY:\"-80deg\"}),\"second\");t1.add(TweenMax.to(object,time,{rotationY:\"0deg\"}));}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,x:0,y:0,rotation:\"0deg\"}]});t1.add(TweenMax.to(object,time,{rotationY:\"-80deg\"}),\"frist\");t1.add(TweenMax.to(object,time,{autoAlpha:0,x:300,y:-200,rotation:\"-60deg\"}),\"second\");t1.add(TweenMax.to(object,time,{rotationY:\"0deg\"}),\"second\");}return t1;};//中心旋转\nanimproto.getEffectCenterRevolve=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var easeString=Power1.easeInOut;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:100},{x:200,y:200},{x:0,y:300}]},ease:easeString});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{visibility:\"hidden\"}]});t1.to(object,duration,{bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:100},{x:200,y:200},{x:0,y:300}]},ease:easeString});}return t1;};//螺旋飞入/出\nanimproto.getEffectSpiral=function(parameter,object,isExit,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{visibility:\"visible\"}],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var easeString=Power1.easeInOut;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1.from(object,duration,{scale:0,bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:-200},{x:0,y:-400},{x:-500,y:-600}]},ease:easeString});}else{t1.to(object,duration,{scale:0,bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:-200},{x:0,y:-400},{x:-500,y:-600}]},ease:easeString});}return t1;};//曲线向上/下\nanimproto.getEffectArcUp=function(parameter,object,isExit,duration,delay,repeat){var t1=null;var easeString=Power1.easeInOut;if(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;if(isExit==false){t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.from(object,duration,{autoAlpha:0,scale:2,bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:200},{x:0,y:400},{x:-500,y:600}]},ease:easeString});}else{t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{opacity:1,scale:1}]});t1.to(object,duration,{autoAlpha:0,scale:2,bezier:{type:\"cubic\",values:[{x:0,y:0},{x:200,y:200},{x:0,y:400},{x:-500,y:600}]},ease:easeString,clearProps:\"x,y\"});}return t1;};//脉冲\nanimproto.getEffectFlashBulb=function(parameter,object,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var range=Number(parameter.range)?parameter.range:0.1;var time=duration/2;t1.to(object,time,{autoAlpha:0.5,scale:\"+=\"+range}).to(object,time,{autoAlpha:1,scale:\"-=\"+range});return t1;};//彩色脉冲\nanimproto.getEffectFlicker=function(parameter,object,duration,delay,repeat){if(!(filter in object[0].style))return new TimelineMax();//if (repeat < 2) repeat = 2; //默认三次\nvar color2=parameter.color2?parameter.color2:\"#fff\";//颜色\nvar maxGlowSize=parameter.maxGlowSize?parameter.maxGlowSize:0.1;//光晕最大尺寸(百分比)\nvar minGlowSize=parameter.minGlowSize?parameter.minGlowSize:0.05;//光晕最小尺寸(百分比)\nvar size=object.width()>object.height()?object.height():object.width();var maxSize=maxGlowSize*size;var minSize=minGlowSize*size;var opacity=Number(parameter.opacity)?parameter.opcity:0.75;//不透明度\nvar distance=Number(parameter.distance)?parameter.distance*size:0;//距离\nvar color=(0,_util.colorHexToRGB)(color2,opacity);var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{//\"box-shadow\": \"none\"\nfilter:\"none\"}]});t1.to(object,duration,{onUpdate:updateEffectFlicker});return t1;function updateEffectFlicker(){var progress=t1.progress();var percent=parseInt(progress*(maxSize-minSize));if(progress>0.5)percent=parseInt((1-progress)*(maxSize-minSize));//object.css(\"box-shadow\", distance + \"px \" + distance + \"px \" + minSize + \"px \" + (minSize + percent) + \"px \" + color);\nobject.css(filter,\"drop-shadow(\"+color+\" \"+distance+\"px \"+distance+\"px \"+(minSize+percent)+\"px)\");}};//跷跷板\nanimproto.getEffectTeeter=function(parameter,object,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});// var mode = parameter.mode;\nvar range=Number(parameter.range)?parameter.range:0.02;var time=duration/8;//计算指定动画时间内每次运动时间(总时长不变，循环除外)\nswitch(parameter.mode){case 1://左右移动\nrange=range*object.width();t1.to(object,time,{x:-range}).to(object,time*2,{x:range});//for (var i = 1; i < repeat; i++) {\nt1.to(object,time*2,{x:-range});t1.to(object,time*2,{x:range});//}\nt1.to(object,time,{x:0});break;case 2://上下移动\nrange=range*object.height();t1.to(object,time,{y:-range}).to(object,time*2,{y:range});//for (var i = 1; i < repeat; i++) {\nt1.to(object,time*2,{y:-range});t1.to(object,time*2,{y:range});//}\nt1.to(object,time,{y:0});break;case 3://左右挤压\nt1.to(object,time,{scaleX:1+range}).to(object,time*2,{scaleX:1-range});//for (var i = 1; i < repeat; i++) {\nt1.to(object,time*2,{scaleX:1+range});t1.to(object,time*2,{scaleX:1-range});//}\nt1.to(object,time,{scaleX:1});break;case 4://上下挤压\nt1.to(object,time,{scaleY:1+range}).to(object,time*2,{scaleY:1-range});//for (var i = 1; i < repeat; i++) {\nt1.to(object,time*2,{scaleY:1+range});t1.to(object,time*2,{scaleY:1-range});//}\nt1.to(object,time,{scaleY:1});break;case 0://左右晃晃\ndefault:range=range*100;t1.to(object,time,{rotation:range+\"deg\"}).to(object,time*2,{rotation:-range+\"deg\"});//for (var i = 1; i < repeat; i++) {\nt1.to(object,time*2,{rotation:range+\"deg\"});t1.to(object,time*2,{rotation:-range+\"deg\"});//}\nt1.to(object,time,{rotation:\"0deg\"});break;}return t1;};//陀螺旋转\nanimproto.getEffectSpin=function(parameter,object,duration,delay,repeat){var degree=parameter.amount?parameter.amount:360;//陀螺旋转角度\nif(Math.abs(parameter.degree)>0)degree=parameter.degree;if(parameter.clockWise==0)degree=0-degree;//逆时针旋转\nswitch(parameter.centerPos){case 1://左上角\nobject.css(\"-webkit-transform-origin\",\"left top\");break;case 2://上边中心\nobject.css(\"-webkit-transform-origin\",\"center top\");break;case 3://右上角\nobject.css(\"-webkit-transform-origin\",\"right top\");break;case 4://左边中心\nobject.css(\"-webkit-transform-origin\",\"left cneter\");break;case 5://右边中心\nobject.css(\"-webkit-transform-origin\",\"right center\");break;case 6://左下角\nobject.css(\"-webkit-transform-origin\",\"left bottom\");break;case 7://下边中心\nobject.css(\"-webkit-transform-origin\",\"center bottom\");break;case 8://右下角\nobject.css(\"-webkit-transform-origin\",\"right bottom\");break;case 0:default://默认中心0\nobject.css(\"-webkit-transform-origin\",\"center\");break;}var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});//t1.to(object, duration, {rotation:degree+\"deg\",ease:parameter.tweenEase});\nswitch(parameter.axis){case 1://X轴\nt1.to(object,duration,{rotationX:\"+=\"+degree+\"deg\",ease:parameter.tweenEase});break;case 2://Y轴\nt1.to(object,duration,{rotationY:\"+=\"+degree+\"deg\",ease:parameter.tweenEase});break;case 0://Z轴\ndefault:t1.to(object,duration,{rotation:\"+=\"+degree+\"deg\",ease:parameter.tweenEase});break;}return t1;};//放大/缩小\nanimproto.getEffectGrowShrink=function(parameter,object,duration,delay,repeat){var scaleX=parameter.scaleX?parameter.scaleX:1;//横向缩放比例\nvar scaleY=parameter.scaleY?parameter.scaleY:1;//纵向缩放比例\n// var keepRatio = (parameter.keepRatio == 0) ? false : true; //保持长宽比\nvar fullScreen=parameter.fullScreen==1?true:false;//缩放到全屏\nvar resetSize=parameter.resetSize==1?true:false;//恢复默认尺寸\nvar easeString=Linear.easeNone;//Elastic.easeOut\nif(parameter.tweenEase&&parameter.tweenEase.length>0)easeString=parameter.tweenEase;var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});if(fullScreen==true){//计算比例\nvar xScale=this.screenWidth/object.width();var yScale=this.screenHeight/object.height();var scaleValue=xScale;if(xScale>yScale)scaleValue=yScale;var result=this._getDirectionInCenter(object);t1.to(object,duration,{x:result.x,y:result.y,scale:scaleValue,ease:parameter.tweenEase});}else if(resetSize==true){t1.to(object,duration,{scaleX:1,scaleY:1,ease:easeString});}else t1.to(object,duration,{scaleX:scaleX,scaleY:scaleY,ease:easeString});return t1;};//不饱和\nanimproto.getEffectDesaturate=function(parameter,object,duration,delay,repeat){if(!(filter in object[0].style))return new TimelineMax();var saturation=parameter.saturation?parameter.saturation:0.5;//饱和度\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{filter:\"none\"}]});t1.to(object,duration,{onUpdate:updateSaturate});return t1;function updateSaturate(){var progress=t1.progress();var percent=progress<=0.5?progress*2:1;var val=1+(saturation-1)*percent;object.css(filter,\"saturate(\"+val+\")\");}};//加深\nanimproto.getEffectDarken=function(parameter,object,duration,delay,repeat){if(!(filter in object[0].style))return new TimelineMax();var brightness=parameter.brightness&&parameter.brightness<1?brightness.saturation:0.5;//亮度\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{filter:\"none\"}]});t1.to(object,duration,{onUpdate:updateBrightness});return t1;function updateBrightness(){var progress=t1.progress();var percent=progress<=0.5?progress*2:1;var val=1+(brightness-1)*percent;object.css(filter,\"brightness(\"+val+\")\");}};//变淡\nanimproto.getEffectLighten=function(parameter,object,duration,delay,repeat){if(!(filter in object[0].style))return new TimelineMax();var brightness=parameter.brightness&&parameter.brightness>1?parameter.brightness:1.5;//亮度\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{filter:\"none\"}]});t1.to(object,duration,{onUpdate:updateBrightness});return t1;function updateBrightness(){var progress=t1.progress();var percent=progress<=0.5?progress*2:1;var val=1+(brightness-1)*percent;object.css(filter,\"brightness(\"+val+\")\");}};//透明\nanimproto.getEffectTransparency=function(parameter,object,duration,delay,repeat){var opacity=parameter.amount?parameter.amount:0.5;//透明度\nvar t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});t1.to(object,duration,{autoAlpha:opacity,ease:parameter.tweenEase});return t1;};//补色\nanimproto.getEffectComplementaryColor=function(parameter,object,duration,delay,repeat){var zIndex=Number(object.css(\"z-index\"));if(isNaN(zIndex)){zIndex=10;console.log(\"The Z-index property for this object to get error.\");}var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object,{\"z-Index\":zIndex+100}],onComplete:this.completeHandler,onCompleteParams:[parameter,object,{\"z-Index\":zIndex}]});t1.to(object,duration,{autoAlpha:1});return t1;};//闪烁(一次)\nanimproto.getEffectFlashOnce=function(parameter,object,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var time=duration/3;t1.to(object,0.001,{css:{visibility:\"hidden\"}}).to(object,time*2,{}).to(object,time,{css:{visibility:\"visible\"}});return t1;};//路径动画\nanimproto.getPathAnimation=function(parameter,object,duration,delay,repeat){var t1=new TimelineMax({delay:delay,repeat:repeat,onStart:this.startHandler,onStartParams:[parameter,object],onComplete:this.completeHandler,onCompleteParams:[parameter,object]});var path=parameter.path?parameter.path:\"\";//路径\nif(!path||path==\"\")return t1;var autoReverse=parameter.autoReverse==1?true:false;//自动翻转(系统自带,实为沿路径返回)\nvar subRepeat=autoReverse==true?1:0;//如果autoReverse为真而子动画必须为1，否则默认为0\nvar autoRotate=parameter.objFollow==1?true:false;//是否跟随路径旋转对象(Z轴)\nvar autoTurn=parameter.objFollow==2?true:false;//反向运动时自动翻转对象(Y轴)\n//连续行为参数处理\nvar axis=0;var degree=0;//旋转角度\nvar scaleFactor=null;//缩放比例(未设置时必须为null才能不影响其它动画效果)\n// var motionScript = \"\"; //连续脚本\nif(parameter.attrAlongPath){axis=parameter.attrAlongPath.axis?parameter.attrAlongPath.axis:0;degree=Math.abs(parameter.attrAlongPath.degree)>0?Number(parameter.attrAlongPath.degree):0;scaleFactor=parameter.attrAlongPath.scaleFactor>0?parameter.attrAlongPath.scaleFactor:null;// motionScript = parameter.attrAlongPath.motionScript;\n}var currentFrame=0;//当前帧\nvar currentDegree=0;//当前翻转角度\nvar currentOffset=object.offset();//对象当前位置\nvar turnState=\"\";//当前运动状态(左/右)\n//对象原点坐标（相对页面原点）\nvar objInfo={top:currentOffset.top,left:currentOffset.left,oX:currentOffset.left+object.width()/2,//计算object的中心点x坐标\noY:currentOffset.top+object.height()/2//计算object的中心点有y坐标\n};//移动起点坐标（默认为对象原点0,0）\nvar x0=0,y0=0;//对象当前坐标\nvar cx=0,cy=0;function resetStartPoint(x,y){//如果路径动画为：EffectPathStairsDown向下阶梯、EffectPathBounceLeft向左弹跳、EffectPathBounceRight 向右弹跳，则需要重置起点坐标(此问题待验证,暂取消)\n/*if (parameter.animationName == \"EffectPathStairsDown\" || parameter.animationName == \"EffectPathBounceLeft\" || parameter.animationName == \"EffectPathBounceRight\") {\r\n            \tx0 = x;\r\n            \ty0 = y;\r\n            }*///更新当前坐标\ncx=x;cy=y;}var isCurve=path.indexOf(\"C\")<0&&path.indexOf(\"c\")<0;//是否为曲线路径\nvar ArrPath=path.split(' ');var svgPath='';//VML路径转SVG路径(测试)\nvar quArr=[];var x,y;for(var k=0;k<ArrPath.length;k++){var str=ArrPath[k];switch(str){case\"M\"://移动（开始）\ncase\"m\":x=Math.round(ArrPath[k+1]*this.screenWidth);y=Math.round(ArrPath[k+2]*this.screenHeight);/*t1.add(TweenMax.to(object, 0.001, {\r\n                    \tx: x,\r\n                    \ty: y\r\n                    }));*/quArr.push({x:x,y:y});k=k+2;resetStartPoint(x,y);svgPath+='M '+(objInfo.oX+x)+' '+(objInfo.oY+y);break;case\"C\"://曲线\ncase\"c\":var x1=x0+Math.round(ArrPath[k+1]*this.screenWidth);var y1=y0+Math.round(ArrPath[k+2]*this.screenHeight);var x2=x0+Math.round(ArrPath[k+3]*this.screenWidth);var y2=y0+Math.round(ArrPath[k+4]*this.screenHeight);var x3=x0+Math.round(ArrPath[k+5]*this.screenWidth);var y3=y0+Math.round(ArrPath[k+6]*this.screenHeight);quArr.push({x:x1,y:y1},{x:x2,y:y2},{x:x3,y:y3});k=k+6;resetStartPoint(x3,y3);svgPath+=' C '+(objInfo.oX+x1)+' '+(objInfo.oY+y1)+' '+(objInfo.oX+x2)+' '+(objInfo.oY+y2)+' '+(objInfo.oX+x3)+' '+(objInfo.oY+y3);break;case\"L\"://直线\ncase\"l\":x=x0+Math.round(ArrPath[k+1]*this.screenWidth);y=y0+Math.round(ArrPath[k+2]*this.screenHeight);if(x==cx&&y==cy){k=k+2;break;}quArr.push({x:x,y:y});k=k+2;resetStartPoint(x,y);svgPath+=' L '+(objInfo.oX+x)+' '+(objInfo.oY+y);break;case\"Z\"://闭合\nif(quArr[0].x!=quArr[quArr.length-1].x||quArr[0].y!=quArr[quArr.length-1].y){quArr.push({x:quArr[0].x,y:quArr[0].y});}svgPath+=' Z';break;case\"E\"://结束\nbreak;}}//启用手势\nif(parameter.gesture){t1=new TimelineMax({paused:true,useFrames:true});parameter.tweenEase=\"Linear.easeNone\";//手势控制必须为匀速运动\n//创建SVG路径(用于测试)\n/*if (isDesktop) {\r\n            \tif ($(\"#svgPathContainer\").length == 0)\r\n            \t\tthis.container.append('<div id=\"svgPathContainer\" style=\"position:absolute;width:100%;height:100%;\"><svg width=\"100%\" height=\"100%\"  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"></svg></div>');\r\n            \tvar svgDocument = $(\"#svgPathContainer\").find(\"svg\")[0];\r\n            \t//创建当前路径\r\n            \tvar p = makeShape(\"Path\", {\r\n            \t\tid: \"Path_\" + object[0].id,\r\n            \t\td: svgPath\r\n            \t});\r\n            \tsvgDocument.appendChild(p);\r\n            }*///创建手势控制区域\nvar controlId=object[0].id;//控制区ID\nif(parameter.gesture.controlType==1){if(parameter.pathContent>0){controlId=controlId.replace(/\\d+$/,parameter.pathContent);}else{controlId=\"Cont_\"+object[0].id;// var expandArea = 20; //最小可触摸尺寸(扩展外框)\n//     var rect = p.getBoundingClientRect();\n//     this.container.append('<div id=\"' + controlId + '\" style=\"z-index:9999;position:absolute;left:' + (rect.left - expandArea) + 'px;top:' + (rect.top - expandArea) + 'px;width:' + (rect.width + expandArea * 2) + 'px;height:' + (rect.height + expandArea * 2) + 'px;\"></div>');\n}}//计算路径距离\nvar distance=0;//distance = p.getTotalLength(); //SVG路径获取长度\nvar sprotInfo=[];for(var m=1;m<quArr.length;m++){//获取距离\ndistance+=(0,_util.calculateDistance)(quArr[m],quArr[m-1]);sprotInfo.push({start:0,end:distance,quadrant:(0,_util.calculateDirection)(quArr[m],quArr[m-1])});}//修改时间为帧数(距离转换为帧)\nduration=Math.floor(distance);//触发点列表\nvar cuePoints=[];if(parameter.gesture.cuePoints){for(var i=0;i<parameter.gesture.cuePoints.length;i++){cuePoints.push({cueStart:Math.floor(parameter.gesture.cuePoints[i].cueStart*duration),cueEnd:Math.floor(parameter.gesture.cuePoints[i].cueEnd*duration),valueStart:parameter.gesture.cuePoints[i].valueStart,valueEnd:parameter.gesture.cuePoints[i].valueEnd,mouseEnter:false,mouseLeave:false});}}//绑定手势事件\nvar historyPoint=null;var startEvent=function startEvent(e){historyPoint={x:_support.hasTouch?e.changedTouches[0].pageX:e.clientX,y:_support.hasTouch?e.changedTouches[0].pageY:e.clientY};};var moveEnd=function moveEnd(){historyPoint=null;//松手后行为(辅助对象ID)\nif(parameter.gesture.afterTouch>0)Xut.Assist.Run(parameter.pageType,parameter.gesture.afterTouch,null);};var moveEvent=function moveEvent(e){var i;var currentPoint={x:_support.hasTouch?e.changedTouches[0].pageX:e.clientX,y:_support.hasTouch?e.changedTouches[0].pageY:e.clientY};var d=(0,_util.calculateDistance)(currentPoint,historyPoint);//鼠示移动距离\nvar quadrant1=0;//对象移动方向\nfor(i=0;i<sprotInfo.length;i++){if(currentFrame<=sprotInfo[i].end){quadrant1=sprotInfo[i].quadrant;break;}}var quadrant2=(0,_util.calculateDirection)(currentPoint,historyPoint);//鼠标移动方向\nswitch(quadrant1){case\"1\":case\"2\":if(quadrant2==\"1\"||quadrant2==\"2\")currentFrame=currentFrame+d;else if(quadrant2==\"3\"||quadrant2==\"4\")currentFrame=currentFrame-d;else if(quadrant2==\"+x\"||quadrant2==\"-x\")currentFrame=currentFrame+(currentPoint.x-historyPoint.x);else if(quadrant1==\"1\"&&(quadrant2==\"+y\"||quadrant2==\"-y\"))currentFrame=currentFrame-(currentPoint.y-historyPoint.y);else if(quadrant1==\"2\"&&(quadrant2==\"+y\"||quadrant2==\"-y\"))currentFrame=currentFrame+(currentPoint.y-historyPoint.y);break;case\"3\":case\"4\":if(quadrant2==\"3\"||quadrant2==\"4\")currentFrame=currentFrame+d;else if(quadrant2==\"1\"||quadrant2==\"2\")currentFrame=currentFrame-d;else if(quadrant2==\"+x\"||quadrant2==\"-x\")currentFrame=currentFrame-(currentPoint.x-historyPoint.x);else if(quadrant1==\"3\"&&(quadrant2==\"+y\"||quadrant2==\"-y\"))currentFrame=currentFrame+(currentPoint.y-historyPoint.y);else if(quadrant1==\"4\"&&(quadrant2==\"+y\"||quadrant2==\"-y\"))currentFrame=currentFrame-(currentPoint.y-historyPoint.y);break;case\"+x\":if(quadrant2==\"1\"||quadrant2==\"2\")currentFrame=currentFrame+d;else if(quadrant2==\"3\"||quadrant2==\"4\")currentFrame=currentFrame-d;else if(quadrant2==\"+x\"||quadrant2==\"-x\")currentFrame=currentFrame+(currentPoint.x-historyPoint.x);break;case\"-x\":if(quadrant2==\"1\"||quadrant2==\"2\")currentFrame=currentFrame-d;else if(quadrant2==\"3\"||quadrant2==\"4\")currentFrame=currentFrame+d;else if(quadrant2==\"+x\"||quadrant2==\"-x\")currentFrame=currentFrame-(currentPoint.x-historyPoint.x);break;case\"+y\":if(quadrant2==\"1\"||quadrant2==\"4\")currentFrame=currentFrame-d;else if(quadrant2==\"2\"||quadrant2==\"3\")currentFrame=currentFrame+d;else if(quadrant2==\"+y\"||quadrant2==\"-y\")currentFrame=currentFrame+(currentPoint.y-historyPoint.y);break;case\"-y\":if(quadrant2==\"1\"||quadrant2==\"4\")currentFrame=currentFrame+d;else if(quadrant2==\"2\"||quadrant2==\"3\")currentFrame=currentFrame-d;else if(quadrant2==\"+y\"||quadrant2==\"-y\")currentFrame=currentFrame-(currentPoint.y-historyPoint.y);break;}if(currentFrame<=0)currentFrame=0;if(currentFrame>=duration)currentFrame=duration;t1.seek(currentFrame);updateTurnState();historyPoint=currentPoint;//处理触发点列表\nfor(i=0;i<cuePoints.length;i++){if(cuePoints[i].mouseEnter==false&&currentFrame>=cuePoints[i].cueStart&&currentFrame<=cuePoints[i].cueEnd){cuePoints[i].mouseEnter=true;cuePoints[i].mouseLeave=false;if(cuePoints[i].valueStart>0)Xut.Assist.Run(parameter.pageType,cuePoints[i].valueStart,null);break;}else if(cuePoints[i].mouseEnter==true&&cuePoints[i].mouseLeave==false&&(currentFrame<cuePoints[i].cueStart||currentFrame>cuePoints[i].cueEnd)){cuePoints[i].mouseEnter=false;cuePoints[i].mouseLeave=true;if(cuePoints[i].valueEnd>0)Xut.Assist.Run(parameter.pageType,cuePoints[i].valueEnd,null);break;}}};var objectId=object[0].id;if(parameter.gesture.controlType==1)objectId=controlId;new _support.onTouchMove(parameter.pageType,controlId,objectId,startEvent,moveEvent,moveEnd);}//贝赛尔曲线参数构造\nvar bezierObj={type:\"soft\",values:quArr,autoRotate:autoRotate};if(isCurve==true)bezierObj={curviness:0,//curviness圆滑度(数字越大越圆滑),默认为1,0是直线运动\nvalues:quArr,autoRotate:autoRotate};//实例化动画参数\nif(degree==0){t1.to(object,duration,{scale:scaleFactor,bezier:bezierObj,repeat:subRepeat,yoyo:autoReverse,onUpdate:updateTurnState,ease:parameter.tweenEase});}else{switch(axis){default:case 0://Z轴\nt1.to(object,duration,{scale:scaleFactor,rotation:degree+\"deg\",bezier:bezierObj,repeat:subRepeat,yoyo:autoReverse,onUpdate:updateTurnState,ease:parameter.tweenEase});break;case 1://X轴\nt1.to(object,duration,{scale:scaleFactor,rotationX:degree+\"deg\",bezier:bezierObj,repeat:subRepeat,yoyo:autoReverse,onUpdate:updateTurnState,ease:parameter.tweenEase});break;case 2://Y轴\nt1.to(object,duration,{scale:scaleFactor,rotationY:degree+\"deg\",bezier:bezierObj,repeat:subRepeat,yoyo:autoReverse,onUpdate:updateTurnState,ease:parameter.tweenEase});break;}}//初始化定位(百分比)\nif(parameter.gesture&&parameter.gesture.initPos>0){currentFrame=duration*parameter.gesture.initPos;t1.seek(currentFrame);}return t1;function updateTurnState(){/*var sel=object[0]\r\n            sel.style.display = 'none';\r\n            sel.offsetHeight;\r\n            sel.style.display = 'block';*/if(autoTurn==false)return;var oldOffset=currentOffset;currentOffset=object.offset();if(turnState==\"\"){if(currentOffset.left>oldOffset.left){turnState=\"left\";}else if(currentOffset.left<oldOffset.left){turnState=\"right\";}}else{if(currentOffset.left>oldOffset.left){if(turnState==\"right\"){if(currentDegree==0)currentDegree=180;else currentDegree=0;TweenLite.set(object.children(),{rotationY:currentDegree});turnState=\"left\";}}else if(currentOffset.left<oldOffset.left){if(turnState==\"left\"){if(currentDegree==0)currentDegree=180;else currentDegree=0;TweenLite.set(object.children(),{rotationY:currentDegree});turnState=\"right\";}}}}};/**\r\n     * rect切割效果更新\r\n     * @param  {[type]}  t1        [description]\r\n     * @param  {[type]}  object    [description]\r\n     * @param  {Boolean} isExit    [description]\r\n     * @param  {[type]}  direction [description]\r\n     * @param  {[type]}  objInfo   [description]\r\n     * @return {[type]}            [description]\r\n     */animproto._updateClipRect=function(t1,object,isExit,direction,objInfo){var progress=t1.progress();var len=progress;var width,left,top,height;if(isExit==false){top=objInfo.height*(1-len);height=objInfo.height-top;left=objInfo.width*(1-len);width=objInfo.width-left;switch(direction){case\"DirectionUp\":object.css(\"clip\",\"rect(0px \"+objInfo.width+\"px \"+height+\"px 0px)\");break;case\"DirectionDown\":object.css(\"clip\",\"rect(\"+top+\"px \"+objInfo.width+\"px \"+objInfo.height+\"px 0px)\");break;case\"DirectionLeft\":object.css(\"clip\",\"rect(0px \"+width+\"px \"+objInfo.height+\"px 0px)\");break;case\"DirectionRight\":object.css(\"clip\",\"rect(0px \"+objInfo.width+\"px \"+objInfo.height+\"px \"+left+\"px)\");break;default:console.log(\"_updateClipRect:parameter error.\");break;}}else{top=objInfo.height*len;height=objInfo.height-top;left=objInfo.width*len;width=objInfo.width-left;switch(direction){case\"DirectionUp\":object.css(\"clip\",\"rect(\"+top+\"px \"+objInfo.width+\"px \"+objInfo.height+\"px 0px)\");break;case\"DirectionDown\":object.css(\"clip\",\"rect(0px \"+objInfo.width+\"px \"+height+\"px 0px)\");break;case\"DirectionLeft\":object.css(\"clip\",\"rect(0px \"+objInfo.width+\"px \"+objInfo.height+\"px \"+left+\"px)\");break;case\"DirectionRight\":object.css(\"clip\",\"rect(0px \"+width+\"px \"+objInfo.height+\"px 0px)\");break;default:console.log(\"_updateClipRect:parameter error.\");break;}}};/**\r\n     * 获取对象至屏幕中心的距离\r\n     * @param  {[type]} object [description]\r\n     * @return {[type]}        [description]\r\n     */animproto._getDirectionInCenter=function(object){var objInfo=this._getObjectInfo(object);var x=Math.round(this.screenWidth/2-objInfo.offsetLeft-objInfo.width/2);var y=Math.round(this.screenHeight/2-objInfo.offsetTop-objInfo.height/2);return{x:x,y:y};};/**\r\n     * 获取对象相关信息\r\n     * @param  {[type]} object [description]\r\n     * @return {[type]}        [description]\r\n     */animproto._getObjectInfo=function(object){var width=Math.round(object.width());//四舍五入取整\nvar height=Math.round(object.height());var top=Math.round(object.css(\"top\").replace(\"px\",\"\"));var left=Math.round(object.css(\"left\").replace(\"px\",\"\"));var offsetTop=Math.round(object.offset().top);if(object.attr(\"offsetTop\"))offsetTop=parseInt(object.attr(\"offsetTop\"));else object.attr(\"offsetTop\",offsetTop);var offsetBottom=Math.ceil(this.screenHeight-offsetTop-height);var offsetLeft=Math.round(object.offset().left);if(object.attr(\"offsetLeft\"))offsetLeft=parseInt(object.attr(\"offsetLeft\"));else object.attr(\"offsetLeft\",offsetLeft);var offsetRight=Math.ceil(this.screenWidth-offsetLeft-width);return{width:width,height:height,top:top,left:left,offsetTop:offsetTop,offsetLeft:offsetLeft,offsetBottom:offsetBottom,offsetRight:offsetRight};};}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/ppt/internal.js\n ** module id = 88\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.calculateDistance = calculateDistance;\nexports.calculateDirection = calculateDirection;\nexports.colorHexToRGB = colorHexToRGB;\nexports.colorRGBToHex = colorRGBToHex;\n\nvar ceil = Math.ceil;\nvar pow = Math.pow;\nvar regexpRGB = /^(rgb|RGB)\\([0-9]{1,3},\\s?[0-9]{1,3},\\s?[0-9]{1,3}\\)$/; //RGB\nvar regexpHex = /^#[0-9a-fA-F]{3,6}$/; //Hex\n\n/**\r\n * 计算两点直线距离\r\n */\nfunction calculateDistance(currentPoint, historyPoint) {\n    var xdiff = currentPoint.x - historyPoint.x;\n    var ydiff = currentPoint.y - historyPoint.y;\n    return ceil(pow(xdiff * xdiff + ydiff * ydiff, 0.5));\n}\n\n/**\r\n * 区间计算\r\n */\nfunction calculateDirection(currentPoint, historyPoint) {\n    var quadrant = \"\"; //象限\n    if (currentPoint.y == historyPoint.y && currentPoint.x > historyPoint.x) quadrant = \"+x\"; //水平正方向\n    else if (currentPoint.y == historyPoint.y && currentPoint.x < historyPoint.x) quadrant = \"-x\"; //水平负方向\n        else if (currentPoint.x == historyPoint.x && currentPoint.y > historyPoint.y) quadrant = \"+y\"; //垂直正方向\n            else if (currentPoint.x == historyPoint.x && currentPoint.y < historyPoint.y) quadrant = \"-y\"; //垂直负方向\n                else if (currentPoint.x > historyPoint.x && currentPoint.y < historyPoint.y) quadrant = \"1\"; //第一象限\n                    else if (currentPoint.x > historyPoint.x && currentPoint.y > historyPoint.y) quadrant = \"2\"; //第二象限\n                        else if (currentPoint.x < historyPoint.x && currentPoint.y > historyPoint.y) quadrant = \"3\"; //第三象限\n                            else if (currentPoint.x < historyPoint.x && currentPoint.y < historyPoint.y) quadrant = \"4\"; //第四象限\n    return quadrant;\n}\n\n/**\r\n * 十六进制颜色转换为RGB颜色\r\n * @param color 要转换的十六进制颜色\r\n * @return RGB颜色\r\n */\nfunction colorHexToRGB(color, opacity) {\n    color = color.toUpperCase();\n    if (regexpHex.test(color)) {\n        var hexArray = new Array();\n        var count = 1;\n        for (var i = 1; i <= 3; i++) {\n            if (color.length - 2 * i > 3 - i) {\n                hexArray.push(Number(\"0x\" + color.substring(count, count + 2)));\n                count += 2;\n            } else {\n                hexArray.push(Number(\"0x\" + color.charAt(count) + color.charAt(count)));\n                count += 1;\n            }\n        }\n        if (opacity && opacity > 0) return \"RGBA(\" + hexArray.join(\",\") + \",\" + opacity + \")\";else return \"RGB(\" + hexArray.join(\",\") + \")\";\n    } else {\n        console.error(\"Hex Color string(\" + color + \") format conversion error.\");\n        return color;\n    }\n}\n\n/**\r\n * RGB颜色转换为十六进制颜色\r\n * @param color 要转换的RGB颜色\r\n * @return 十六进制颜色\r\n */\nfunction colorRGBToHex(color) {\n    if (regexpRGB.test(color)) {\n        color = color.replace(/(\\(|\\)|rgb|RGB)*/g, \"\").split(\",\");\n        var colorHex = \"#\";\n        for (var i = 0; i < color.length; i++) {\n            var hex = Number(color[i]).toString(16);\n            if (hex.length == 1) hex = \"0\" + hex;\n            colorHex += hex;\n        }\n        return colorHex;\n    } else {\n        console.error(\"RGB Color string(\" + color + \") format conversion error.\");\n        return color;\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/plugin/ppt/util.js\n ** module id = 89\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//检测是否支持HTML5的video播放\nvar supportVideo = function () {\n    var video = document.createElement('video');\n    var type = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n    return !!video.canPlayType && \"probably\" == video.canPlayType(type);\n}();\n\n//检测是否安装了flash插件\nvar supportFlash = function () {\n    var i_flash = false;\n    if (navigator.plugins) {\n        for (var i = 0; i < navigator.plugins.length; i++) {\n            if (navigator.plugins[i].name.toLowerCase().indexOf(\"shockwave flash\") != -1) {\n                i_flash = true;\n            }\n        }\n    }\n    return i_flash;\n}();\n\nexports.supportVideo = supportVideo;\nexports.supportFlash = supportFlash;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/video/support.js\n ** module id = 90\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Adapter = Adapter;\n\nvar _iframe = require('./iframe');\n\nvar _index = require('./page/index');\n\nvar _dom = require('../../util/dom');\n\nvar _index2 = require('../../config/index');\n\n/********************************************************************\r\n *\r\n *                   零件适配器\r\n *\r\n *              1 数据过滤\r\n *              构件5种类型\r\n *\r\n * *******************************************************************/\nvar proportion = void 0;\nvar screenSize = void 0;\nvar appId = void 0;\n\nvar loadWidget = function loadWidget(type, data, widgetClass) {\n    Xut.Application.injectionComponent({\n        'pageType': data.pageType, //标记类型区分\n        'pageIndex': data.pageIndex,\n        'widget': new widgetClass(data)\n    });\n};\n\n/**\r\n * 构建5中零件类型\r\n *  1、iframe零件\r\n *  2、页面零件\r\n *  3、SVG零件\r\n *  4、canvas零件\r\n *  5、webGL零件\r\n * @type {Object}\r\n */\nvar adapterType = {\n\n    /**\r\n     * iframe零件类型\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    'iframe': function iframe(data) {\n        loadWidget('widget', data, _iframe.IframeWidget);\n    },\n    'widget': function widget(data) {\n        loadWidget('widget', data, _iframe.IframeWidget);\n    },\n\n\n    /**\r\n     * js零件类型处理\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    'js': function js(data) {\n        loadWidget('js', data, _index.PageWidget);\n    },\n    'page': function page(data) {\n        loadWidget('page', data, _index.PageWidget);\n    },\n    'svg': function svg(data) {\n        loadWidget('svg', data, _index.PageWidget);\n    },\n    'canvas': function canvas(data) {\n        loadWidget('canvas', data, _index.PageWidget);\n    },\n    'webgL': function webgL(data) {\n        loadWidget('webgL', data, _index.PageWidget);\n    }\n};\n\n/**\r\n * 过滤出数据\r\n * @return {[type]} [description]\r\n */\nvar filterData = function filterData(data) {\n    //直接通过id查询数据\n    if (data.widgetId) {\n        _.extend(data, Xut.data.query('Widget', data.widgetId));\n    } else {\n        //直接通过activityId查询数据\n        _.extend(data, Xut.data.query('Widget', data.activityId, 'activityId'));\n    }\n    return data;\n};\n\n/**\r\n * 获取widget数据\r\n * @return {[type]} [description]\r\n */\nvar filtrateDas = function filtrateDas(data) {\n    data = filterData(data);\n    return proportion.calculateElement(data);\n};\n\n/**\r\n * ifarme内部，请求返回数据\r\n * @return {[type]} [description]\r\n */\nvar parsePara = function parsePara(data) {\n    var inputPara, //输入数据\n    outputPara; //输出数据\n    if (inputPara = data.inputPara) {\n        outputPara = (0, _dom.parseJSON)(inputPara);\n    }\n    return outputPara;\n};\n\nfunction Adapter(para) {\n\n    var data = void 0;\n\n    proportion = _index2.config.proportion;\n    screenSize = _index2.config.screenSize;\n    appId = _index2.config.appId;\n\n    //获取数据\n    data = filtrateDas(para);\n\n    para = null;\n\n    data.id = data.activityId;\n\n    //解析数据\n    data.inputPara = parsePara(data);\n\n    if (!data.inputPara) {\n        data.inputPara = {};\n    }\n\n    //增加属性参数\n    if (data.widgetType === 'page') {\n        data.inputPara.container = data.rootNode;\n    }\n\n    data.inputPara.uuid = appId + '-' + data.activityId; //唯一ID标示\n    data.inputPara.id = data.activityId;\n    data.inputPara.screenSize = screenSize;\n    //content的命名前缀\n    data.inputPara.contentPrefix = Xut.Presentation.MakeContentPrefix(data.pageIndex, data.pageType);\n\n    //画轴模式\n    data.scrollPaintingMode = _index2.config.scrollPaintingMode;\n    data.calculate = _index2.config.proportion.calculateContainer();\n\n    //执行类构建\n    adapterType[(data.widgetType || 'widget').toLowerCase()](data);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/adapter.js\n ** module id = 91\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IframeWidget = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _manager = require('../../component/video/manager');\n\nvar _nexttick = require('../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 创建iframe零件包装器\r\n */\nvar IframeWidget = exports.IframeWidget = function () {\n    function IframeWidget(data) {\n        var _this = this;\n\n        _classCallCheck(this, IframeWidget);\n\n        _.extend(this, data);\n        this.$wapper = this._createWapper();\n        (0, _nexttick2.default)({\n            'container': this.rootNode,\n            'content': this.$wapper\n        }, function () {\n            _this.rootNode = null;\n            _this._bindPMS();\n        });\n        return this;\n    }\n\n    /**\r\n     * 创建包含容器\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(IframeWidget, [{\n        key: '_createWapper',\n        value: function _createWapper() {\n            var zIndex, str, dom, ifr;\n\n            if (this.zIndex === 0) {\n                zIndex = this.zIndex;\n            } else {\n                zIndex = this.zIndex || Xut.zIndexlevel();\n            }\n\n            this.zIndex = zIndex;\n\n            dom = String.format('<div' + ' id=\"iframeWidget_{0}\"' + ' style=\"z-index:{1};' + ' width:{2}px;' + ' height:{3}px;' + ' top:{4}px;' + ' left:{5}px;' + ' position:absolute;\">' + ' </div>', this.id, zIndex, this.width, this.height, this.top, this.left);\n\n            ifr = this._createIframe();\n            this._iframe = ifr;\n\n            return $(dom).append(ifr);\n        }\n\n        /**\r\n         * 加载iframe\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_createIframe',\n        value: function _createIframe() {\n            var _this2 = this;\n\n            var ifr = document.createElement('iframe');\n            var path = 'widget/' + this.widgetId + '/index.html?xxtParaIn=' + this.key;\n            var rootPath = Xut.config.pathAddress.replace('gallery/', '');\n\n            path = rootPath + path;\n\n            ifr.id = 'iframe_' + this.id;\n            ifr.src = path;\n            ifr.style.width = '100%';\n            ifr.style.height = '100%';\n            ifr.sandbox = \"allow-scripts allow-same-origin\";\n            ifr.frameborder = 0;\n\n            if (ifr.attachEvent) {\n                ifr.attachEvent('onload', function () {\n                    _this2._iframeComplete();\n                });\n            } else {\n                ifr.onload = function () {\n                    _this2._iframeComplete();\n                };\n            }\n            return ifr;\n        }\n\n        /**\r\n         * iframe加载完毕回调\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_iframeComplete',\n        value: function _iframeComplete() {\n            var me = this;\n            var dataSource = this._loadData();\n            var width = me._iframe.offsetWidth;\n            var height = me._iframe.offsetHeight;\n\n            if (dataSource.screenSize.width * 0.98 <= width && dataSource.screenSize.height * 0.98 <= height) {\n                Xut.View.Toolbar({\n                    show: 'button',\n                    hide: 'controlBar'\n                });\n            } else if (dataSource.screenSize.width * 0.7 <= width && dataSource.screenSize.height * 0.7 <= height) {\n                Xut.View.Toolbar({\n                    show: 'button'\n                });\n            }\n\n            this.PMS.send({\n                target: me._iframe.contentWindow,\n                origin: '*',\n                type: 'loadData',\n                data: dataSource,\n                //消息传递完毕后的回调\n                success: success,\n                error: function error() {}\n            });\n\n            function success() {}\n            // console.log('完毕')\n\n\n            //iframe加载的状态\n            me.state = true;\n        }\n\n        /**\r\n         * ifarme内部，请求返回数据\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_loadData',\n        value: function _loadData() {\n            var item,\n                field,\n                source_export = [],\n                images = Xut.data['Image'],\n                token = null,\n                outputPara = this.inputPara,\n                items = outputPara.source;\n\n            for (item in items) {\n                if (items.hasOwnProperty(item)) {\n                    field = {};\n                    token = images.item((parseInt(items[item]) || 1) - 1);\n                    field['img'] = '../gallery/' + token.md5;\n                    field['thumb'] = '';\n                    field['title'] = token.imageTitle;\n                    source_export.push(field);\n                }\n            }\n\n            outputPara.source = source_export;\n\n            return outputPara;\n        }\n\n        /**\r\n         * 与iframe通讯接口\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_bindPMS',\n        value: function _bindPMS() {\n            var me = this,\n                markId = this.id;\n\n            this.PMS = PMS;\n            //隐藏widget \n            PMS.bind(\"onHideWapper\" + markId, function () {\n                var $wapper = me.$wapper;\n                $wapper.hide();\n                me.state = false;\n            }, '*');\n\n            //全屏操作\n            PMS.bind(\"onFullscreen\" + markId, function (e) {\n                var $wapper = me.$wapper,\n                    $iframe = $(me._iframe);\n\n                if (!$iframe.length) return;\n                //关闭视频\n                (0, _manager.clearVideo)();\n\n                $wapper.css({\n                    width: '100%',\n                    height: '100%',\n                    zIndex: Xut.zIndexlevel(),\n                    top: 0,\n                    left: 0\n                });\n\n                //Widget全屏尺寸自动调整\n                if (e.full == false) {\n                    var body = document.body,\n                        width = parseInt(body.clientWidth),\n                        height = parseInt(body.clientHeight),\n                        rote = me.width / me.height,\n                        getRote = function getRote(width, height, rote) {\n                        var w = width,\n                            h = width / rote;\n                        if (h > height) {\n                            h = height;\n                            w = h * rote;\n                        }\n                        return {\n                            w: parseInt(w),\n                            h: parseInt(h)\n                        };\n                    },\n                        size = getRote(width, height, rote),\n                        left = (width - size.w) / 2,\n                        top = (height - size.h) / 2;\n\n                    $iframe.css({\n                        width: size.w,\n                        height: size.h,\n                        position: 'absolute',\n                        top: top,\n                        left: left\n                    });\n                }\n                //隐藏工作条\n                Xut.View.Toolbar(\"hide\");\n            }, '*');\n\n            //还原初始窗口操作\n            PMS.bind(\"onReset\" + markId, function () {\n                var $wapper = me.$wapper,\n                    $iframe = $(me._iframe);\n\n                if (!$iframe.length) return;\n\n                $wapper.css({\n                    zIndex: me.zIndex,\n                    width: me.width + 'px',\n                    height: me.height + 'px',\n                    top: me.top + 'px',\n                    left: me.left + 'px'\n                });\n\n                //还原iframe样式\n                $iframe.css({\n                    width: '100%',\n                    height: '100%',\n                    position: '',\n                    top: '0',\n                    left: '0'\n                });\n\n                Xut.View.Toolbar(\"show\");\n            }, '*');\n\n            //显示工作条\n            PMS.bind(\"onShowToolbar\" + markId, function () {\n                // Xut.View.ShowToolbar();\n            }, '*');\n\n            //隐藏工作条\n            PMS.bind(\"onHideToolbar\" + markId, function () {\n                Xut.View.HideToolbar();\n            }, '*');\n\n            //跳转页面\n            PMS.bind('scrollToPage' + markId, function (data) {\n                Xut.View.GotoSlide(data['ppts'], data['pageIndex']);\n            }, '*');\n        }\n\n        /**\r\n         * 外部调用接口\r\n         * 显示隐藏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'dispatchProcess',\n        value: function dispatchProcess() {\n            if (this.state) {\n                this.stop();\n            } else {\n                this.start();\n            }\n        }\n\n        /**\r\n         * 开始\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'start',\n        value: function start() {\n            var _this3 = this;\n\n            this.domWapper();\n            this.PMS.send({\n                target: this._iframe.contentWindow,\n                url: this._iframe.src,\n                origin: '*',\n                type: 'onShow',\n                success: function success() {\n                    // alert(123)\n                }\n            });\n            setTimeout(function () {\n                _this3.state = true;\n            }, 0);\n        }\n\n        /**\r\n         * 暂停\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'stop',\n        value: function stop() {\n            var _this4 = this;\n\n            this.domWapper();\n            this.PMS.send({\n                target: this._iframe.contentWindow,\n                url: this._iframe.src,\n                origin: '*',\n                type: 'onHide',\n                success: function success() {}\n            });\n            setTimeout(function () {\n                _this4.state = false;\n            }, 0);\n        }\n\n        /**\r\n         * 处理包装容器的状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'domWapper',\n        value: function domWapper() {\n            if (this.state) {\n                this.$wapper.hide();\n            } else {\n                this.$wapper.show();\n            }\n        }\n\n        /**\r\n         * 复位\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'recovery',\n        value: function recovery() {\n            var me = this;\n            if (me.state) {\n                me.PMS.send({\n                    target: me._iframe.contentWindow,\n                    url: me._iframe.src,\n                    origin: '*',\n                    type: 'onHide',\n                    success: function success() {}\n                });\n                me.domWapper();\n                me.state = false;\n                return true;\n            }\n            return false;\n        }\n\n        /**\r\n         * 销毁接口\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this5 = this;\n\n            //销毁内部事件\n            this.PMS.send({\n                target: this._iframe.contentWindow,\n                url: this._iframe.src,\n                origin: '*',\n                type: 'onDestory',\n                success: function success() {}\n            });\n\n            //销毁事件绑定\n            this.PMS.unbind();\n\n            //销魂节点\n            setTimeout(function () {\n                _this5._iframe = null;\n                _this5.$wapper.remove();\n                _this5.$wapper = null;\n            }, 0);\n        }\n    }]);\n\n    return IframeWidget;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/iframe.js\n ** module id = 92\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createData = createData;\n/**\r\n * 创建数据\r\n * @return {[type]} [description]\r\n */\nfunction createData(outputPara, scrollPaintingMode, calculate) {\n    var item,\n        field,\n        source = [],\n        images = Xut.data['Image'],\n        token = null,\n        items = outputPara.source;\n\n    for (item in items) {\n        if (items.hasOwnProperty(item)) {\n            field = {};\n            token = images.item((parseInt(items[item]) || 1) - 1);\n            field['img'] = token.md5;\n            field['thumb'] = '';\n            field['title'] = token.imageTitle;\n            source.push(field);\n        }\n    }\n\n    outputPara.source = source;\n    outputPara.scrollPaintingMode = scrollPaintingMode;\n    outputPara.calculate = calculate;\n\n    /**\r\n     * 2016.8.3\r\n     * 给妙妙学的js零件增加前缀\r\n     * @type {[type]}\r\n     */\n    outputPara.rootPath = Xut.config.jsWidgetPath();\n\n    return outputPara;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/page/data.js\n ** module id = 93\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PageWidget = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /********************************************************************\r\nr\n创建所有的JS页面零件类\r\njs\r\npage\r\nsvg\r\ncanvas\r\nwebgL\r\nr\nn\nvar _loader = require('./loader');\n\nvar _data = require('./data');\n\nvar _advsprite = require('./advsprite');\n\nvar _advsprite2 = _interopRequireDefault(_advsprite);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 解析数据,获取content对象\r\n * @return {[type]} [description]\r\n */\nvar parseContentObjs = function parseContentObjs(pageType, inputPara) {\n    var contentIds = [];\n    inputPara.content && _.each(inputPara.content, function (contentId) {\n        contentIds.push(contentId);\n    });\n    return Xut.Contents.GetPageWidgetData(pageType, contentIds);\n};\n\n/**\r\n * 页面零件\r\n * @param {[type]} data [description]\r\n */\n\nvar PageWidget = exports.PageWidget = function () {\n    function PageWidget(data) {\n        _classCallCheck(this, PageWidget);\n\n        _.extend(this, data);\n        this.pageObj = null;\n        this._init();\n    }\n\n    /**\r\n     * 获取参数\r\n     * 得到content对象与数据\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(PageWidget, [{\n        key: '_getOptions',\n        value: function _getOptions() {\n            return [(0, _data.createData)(this.inputPara, this.scrollPaintingMode, this.calculate), parseContentObjs(this.pageType, this.inputPara)];\n        }\n\n        /**\r\n         * 初始化,加载文件\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_init',\n        value: function _init() {\n            //Load the localized code first\n            //Combined advanced Sprite\n            if (this.widgetId == \"72\" && this.widgetName == \"spirit\") {\n                var arg = this._getOptions();\n                this.pageObj = (0, _advsprite2.default)(arg[0], arg[1]);\n            } else {\n                //If there is no\n                if (typeof window[this.widgetName + \"Widget\"] != \"function\") {\n                    (0, _loader.loader)(this._executive, this);\n                } else {\n                    this._executive();\n                }\n            }\n        }\n\n        /**\r\n         * 执行函数\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_executive',\n        value: function _executive() {\n            if (typeof window[this.widgetName + \"Widget\"] == \"function\") {\n                var arg = this._getOptions();\n                this.pageObj = new window[this.widgetName + \"Widget\"](arg[0], arg[1]);\n            } else {\n                console.error(\"Function [\" + this.widgetName + \"Widget] does not exist.\");\n            }\n        }\n    }, {\n        key: 'play',\n        value: function play() {\n            return this.pageObj.play();\n        }\n    }, {\n        key: 'getIdName',\n        value: function getIdName() {\n            return this.pageObj.getIdName();\n        }\n\n        /**\r\n         * 外部调用接口\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'dispatchProcess',\n        value: function dispatchProcess() {\n            this.pageObj.toggle();\n        }\n\n        /**\r\n         * 处理包装容器的状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'domWapper',\n        value: function domWapper() {\n            if (!this.wapper) return;\n            if (this.state) {\n                this.$wapper.hide();\n            } else {\n                this.$wapper.show();\n            }\n        }\n\n        /**\r\n         * 销毁页面零件\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            if (this.pageObj && this.pageObj.destroy) {\n                this.pageObj.destroy();\n            }\n        }\n    }]);\n\n    return PageWidget;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/page/index.js\n ** module id = 94\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.loader = loader;\n\nvar _loader = require('../../../util/loader');\n\n/**\r\n * 路径地址\r\n * @param  {[type]} name [description]\r\n * @return {[type]}      [description]\r\n */\nfunction path(fileName, widgetId) {\n    return 'content/widget/' + widgetId + '/' + fileName;\n}\n\n/**\r\n * 加载js,css文件\r\n * @return {[type]} [description]\r\n */\nfunction loader(callback, base) {\n    var jsPath,\n        cssPath,\n        completeCount,\n        widgetId = base.widgetId,\n\n    //定义css,js的命名\n    jsName = base.widgetName + '.min.js',\n        cssName = base.widgetType == 'page' || base.widgetType == 'js' ? 'style.min.css' : 0;\n\n    //需要等待完成\n    var completeCount = function () {\n        var count = 0;\n        jsName && count++;\n        cssName && count++;\n        return function () {\n            if (count === 1) {\n                return callback && callback.call(base);\n            }\n            count--;\n        };\n    }();\n\n    //加载css\n    if (cssName) {\n        cssPath = path(cssName, widgetId);\n        (0, _loader.loadfile)(cssPath, function () {\n            completeCount();\n        });\n    }\n\n    //加载js\n    if (jsName) {\n        jsPath = path(jsName, widgetId);\n        (0, _loader.loadfile)(jsPath, function () {\n            completeCount();\n        });\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/component/widget/page/loader.js\n ** module id = 95\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _default = require('./default');\n\nvar isIOS = Xut.plat.isIOS;\nvar isAndroid = Xut.plat.isAndroid;\nvar DUKUCONFIG = window.DUKUCONFIG;\nvar MMXCONFIG = window.MMXCONFIG;\nvar CLIENTCONFIGT = window.CLIENTCONFIGT;\nvar SUbCONFIGT = window.SUbCONFIGT;\n\n/**\r\n * 读酷模式下的路径\r\n * @param  {[type]} DUKUCONFIG [description]\r\n * @return {[type]}                   [description]\r\n */\nif (DUKUCONFIG) {\n    DUKUCONFIG.path = DUKUCONFIG.path.replace('//', '/');\n}\n\n/**\r\n * 除右端的\"/\"\r\n * @param  {[type]} str [description]\r\n * @return {[type]}     [description]\r\n */\nvar rtrim = function rtrim(str) {\n    if (typeof str != 'string') return str;\n    var lastIndex = str.length - 1;\n    if (str.charAt(lastIndex) === '/') {\n        return str.substr(0, lastIndex);\n    } else {\n        return str;\n    }\n};\n\n// var MMXCONFIGPath = '.'\n// if (MMXCONFIG && MMXCONFIG.path) {\n//     MMXCONFIGPath = location.href.replace(/^file:\\/\\/\\/?/i, '/').replace(/[^\\/]*$/, '');\n// }\nvar MMXCONFIGPath = location.href.replace(/^file:\\/\\/\\/?/i, '/').replace(/[^\\/]*$/, '');\nif (MMXCONFIG && MMXCONFIG.path) {\n    MMXCONFIGPath = rtrim(MMXCONFIG.path);\n}\n\n/**\r\n *  通过iframe加载判断当前的加载方式\r\n *  1 本地iframe打开子文档\r\n *  2 读酷加载电子杂志\r\n *  3 读酷加载电子杂志打开子文档\r\n */\nvar iframeMode = function () {\n    var mode = void 0;\n    if (SUbCONFIGT && DUKUCONFIG) {\n        //通过读酷客户端开打子文档方式\n        mode = 'iframeDuKuSubDoc';\n    } else {\n        //子文档加载\n        if (SUbCONFIGT) {\n            mode = 'iframeSubDoc';\n        }\n        //读酷客户端加载\n        if (DUKUCONFIG) {\n            mode = 'iframeDuKu';\n        }\n        //客户端模式\n        //通过零件加载\n        if (CLIENTCONFIGT) {\n            mode = 'iframeClient';\n        }\n        //秒秒学客户端加载\n        if (MMXCONFIG) {\n            mode = 'iframeMiaomiaoxue';\n        }\n    }\n    return mode;\n}();\n\n//iframe嵌套配置\n//1 新阅读\n//2 子文档\n//3 秒秒学\nexports.default = {\n\n    /**\r\n     * 资源图片\r\n     * @return {[type]} [description]\r\n     */\n    resources: function resources() {\n        if (isIOS) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeDuKuSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n\n        if (isAndroid) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return '/android_asset/www/content/subdoc/' + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeDuKuSubDoc':\n                    return DUKUCONFIG.path.replace('gallery', 'subdoc') + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n    },\n\n\n    /**\r\n     * 视频路径\r\n     * @return {[type]} [description]\r\n     */\n    video: function video() {\n        if (isIOS) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeDuKuSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n\n        if (isAndroid) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return 'android.resource://#packagename#/raw/';\n                case 'iframeDuKuSubDoc':\n                    return DUKUCONFIG.path.replace('gallery', 'subdoc') + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n    },\n\n\n    /**\r\n     * 音频路径\r\n     * @return {[type]} [description]\r\n     */\n    audio: function audio() {\n        if (isIOS) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeDuKuSubDoc':\n                    return (0, _default.getSourcePath)();\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n        if (isAndroid) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return '/android_asset/www/content/subdoc/' + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeDuKuSubDoc':\n                    return DUKUCONFIG.path.replace('gallery', 'subdoc') + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n    },\n\n\n    /**\r\n     * 调用插件处理\r\n     * @return {[type]} [description]\r\n     */\n    svg: function svg() {\n        if (isIOS) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    //www/content/subdoc/00c83e668a6b6bad7eda8eedbd2110ad/content/gallery/\n                    return 'www/content/subdoc/' + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeDuKuSubDoc':\n                    return DUKUCONFIG.path.replace('gallery', 'subdoc') + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n\n        if (isAndroid) {\n            switch (iframeMode) {\n                case 'iframeDuKu':\n                    return DUKUCONFIG.path;\n                case 'iframeSubDoc':\n                    return 'www/content/subdoc/' + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeDuKuSubDoc':\n                    return DUKUCONFIG.path.replace('gallery', 'subdoc') + SUbCONFIGT.path + '/content/gallery/';\n                case 'iframeClient':\n                    return CLIENTCONFIGT.path;\n                case 'iframeMiaomiaoxue':\n                    return MMXCONFIGPath + '/content/gallery/';\n            }\n        }\n    },\n\n\n    /**\r\n     * js零件\r\n     * 2016.8.3 喵喵学\r\n     * @return {[type]} [description]\r\n     */\n    jsWidget: function jsWidget() {\n        return MMXCONFIGPath + '/content/widget/';\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/config/iframe.js\n ** module id = 96\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports._screen = _screen;\nexports._layer = _layer;\nexports._scale = _scale;\nexports._fixProportion = _fixProportion;\nvar isBrowser = Xut.plat.isBrowser;\nvar FLOOR = Math.floor;\nvar CEIL = Math.ceil;\n\n/**\r\n * 屏幕尺寸\r\n * @return {[type]} [description]\r\n */\nfunction _screen() {\n    //如果是IBooks模式处理\n    if (Xut.IBooks.Enabled) {\n        var screen = Xut.IBooks.CONFIG.screenSize;\n        if (screen) {\n            return {\n                \"width\": screen.width,\n                \"height\": screen.height\n            };\n        }\n    }\n    return {\n        \"width\": $(window).width(),\n        \"height\": $(window).height()\n    };\n}\n\n/**\r\n * 排版判断\r\n * @return {[type]} [description]\r\n */\nfunction _layer(screenSize) {\n    return screenSize.width > screenSize.height ? \"horizontal\" : \"vertical\";\n}\n\n/**\r\n * 缩放比例\r\n * @param  {[type]} pptWidth  [description]\r\n * @param  {[type]} pptHeight [description]\r\n * @return {[type]}           [description]\r\n */\nfunction _scale(config, pptWidth, pptHeight) {\n    var dbmode,\n        scaleWidth,\n        scaleHeight,\n        width = config.screenSize.width,\n        height = config.screenSize.height,\n\n    // 根据设备判断设备的横竖屏 1 横板 0 竖版\n    horizontalMode = width > height ? 1 : 0,\n\n\n    //默认ppt尺寸\n    defaultWidth = pptWidth ? pptWidth : horizontalMode ? 1024 : 768,\n        defaultHeight = pptHeight ? pptHeight : horizontalMode ? 720 : 976,\n\n\n    //当前屏幕的尺寸与数据库设计的尺寸，比例\n    wProp = width / defaultWidth,\n        hProp = height / defaultHeight,\n\n\n    //布局的偏移量，可能是采用了画轴模式，一个可视区可以容纳3个页面\n    offsetTop = 0,\n        offsetLeft = 0;\n\n    if (pptWidth && pptHeight && isBrowser) {\n        dbmode = pptWidth > pptHeight ? 1 : 0; // 根据数据库判断横杂志的竖屏 1 横板 0 竖版\n        if (dbmode != horizontalMode) {\n            if (dbmode === 1) {\n                hProp = wProp;\n            } else {\n                wProp = hProp;\n            }\n        }\n    }\n\n    //画轴模式\n    if (config.scrollPaintingMode) {\n        //    Dw       width - 2 * left \n        //   ----  =  -------------------\n        //    Dh       height - 2 * top\n\n        if (horizontalMode) {\n            scaleWidth = defaultWidth * hProp;\n            offsetLeft = (width - scaleWidth) / 2;\n            wProp = hProp;\n        } else {\n            scaleHeight = defaultHeight * hProp;\n            offsetTop = (height - scaleHeight) / 2;\n            hProp = wProp;\n        }\n    }\n\n    //word模式下的竖版\n    if (config.virtualMode && !horizontalMode) {\n        //假设高度不会溢出,按两倍屏宽计算\n        var _prop = 2 * width / defaultWidth;\n        offsetLeft = 0;\n        scaleHeight = defaultHeight * _prop;\n        offsetTop = (height - scaleHeight) / 2;\n\n        //如果高度溢出,按屏高计算\n        if (scaleHeight > height) {\n            _prop = height / defaultHeight;\n            scaleWidth = defaultWidth * _prop;\n\n            offsetTop = 0;\n            offsetLeft = (2 * width - scaleWidth) / 2;\n        }\n\n        wProp = hProp = _prop;\n    }\n\n    return {\n        width: wProp,\n        height: hProp,\n        left: wProp,\n        top: hProp,\n        offsetTop: offsetTop,\n        offsetLeft: offsetLeft,\n        pptWidth: pptWidth,\n        pptHeight: pptHeight\n    };\n}\n\n/**\r\n * 修复缩放比\r\n * 如果PPT有编辑指定的宽度与高度\r\n */\nfunction _fixProportion(config, pptWidth, pptHeight) {\n\n    /**\r\n     * 计算新的缩放比\r\n     * @type {[type]}\r\n     */\n    var proportion = config.proportion = _scale(config, pptWidth, pptHeight);\n\n    /**\r\n     * 计算容器的宽高比\r\n     * @param  {[type]} () [description]\r\n     * @return {[type]}    [description]\r\n     */\n    proportion.calculateContainer = function () {\n        var pptWidth = proportion.pptWidth;\n        var pptHeight = proportion.pptHeight;\n        var scaleWidth = proportion.width;\n        var scaleHeight = proportion.height;\n        return function (width, height, left, top) {\n            var screenSize = config.screenSize;\n            width = width || screenSize.width;\n            height = height || screenSize.height;\n            left = left || 0;\n            top = top || 0;\n\n            if (pptWidth && pptHeight && isBrowser) {\n                //维持竖版的缩放比\n                var _width = scaleWidth * pptWidth;\n                var _height = scaleHeight * pptHeight;\n\n                //虚拟模式并且是竖版\n                if (config.virtualMode && height > width) {\n                    return {\n                        width: FLOOR(_width),\n                        height: FLOOR(_height),\n                        left: FLOOR((width - _width / 2) / 2),\n                        top: FLOOR((height - _height) / 2)\n                    };\n                }\n                //横版模式\n                return {\n                    width: FLOOR(_width),\n                    height: FLOOR(_height),\n                    left: FLOOR((width - _width) / 2),\n                    top: FLOOR((height - _height) / 2)\n                };\n            } else {\n                return {\n                    width: FLOOR(width),\n                    height: FLOOR(height),\n                    left: FLOOR(left),\n                    top: FLOOR(top)\n                };\n            }\n        };\n    }();\n\n    /**\r\n     * 计算元素的缩放比\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    proportion.calculateElement = function (data) {\n        var data = _.extend({}, data);\n        data.width = CEIL(data.width * proportion.width);\n        data.height = CEIL(data.height * proportion.height);\n        data.top = FLOOR(data.top * proportion.top);\n        data.left = FLOOR(data.left * proportion.left);\n        return data;\n    };\n\n    return proportion;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/config/judge.js\n ** module id = 97\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _default = require(\"./default\");\n\nvar isIOS = Xut.plat.isIOS;\nvar isAndroid = Xut.plat.isAndroid;\n\n//杂志直接打开\nexports.default = {\n\n    /**\r\n     * 资源图片\r\n     * @return {[type]} [description]\r\n     */\n    resources: function resources(config) {\n        if (isIOS) {\n            return (0, _default.getSourcePath)();\n        }\n        if (isAndroid) {\n            if (parseInt(config.storageMode)) {\n                //sd卡加载资源数据\n                return \"/sdcard/appcarrier/magazine/\" + config.appId + \"/\" + (0, _default.getSourcePath)();\n            } else {\n                //android_asset缓存加载资源\n                return \"/android_asset/www/\" + (0, _default.getSourcePath)();\n            }\n        }\n    },\n\n\n    /**\r\n     * 视频路径\r\n     * ios平台在缓存\r\n     * 安卓在编译raw中\r\n     */\n    video: function video() {\n        if (isIOS) {\n            return (0, _default.getSourcePath)();\n        }\n        if (isAndroid) {\n            return 'android.resource://#packagename#/raw/';\n        }\n    },\n\n\n    /**\r\n     * 音频路径\r\n     * ios平台在缓存\r\n     * 安卓在缓存中\r\n     * @return {[type]} [description]\r\n     */\n    audio: function audio() {\n        if (isIOS) {\n            return (0, _default.getSourcePath)();\n        }\n        if (isAndroid) {\n            return \"/android_asset/www/\" + (0, _default.getSourcePath)();\n        }\n    },\n\n\n    /**\r\n     * 读取svg路径前缀\r\n     * @return {[type]} [description]\r\n     */\n    svg: function svg() {\n        return 'www/' + (0, _default.getSourcePath)();\n    },\n\n\n    /**\r\n     * js零件\r\n     * 2016.8.3 喵喵学\r\n     * @return {[type]} [description]\r\n     */\n    jsWidget: function jsWidget() {\n        if (isIOS) {\n            return (0, _default.getWidgetPath)();\n        }\n        if (isAndroid) {\n            return \"/android_asset/www/\" + (0, _default.getWidgetPath)();\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/config/native.js\n ** module id = 98\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Destroy;\n\nvar _results = require('./results');\n\nvar _cache = require('./cache');\n\n/**\r\n * 数据销毁\r\n */\nfunction Destroy() {\n  (0, _results.removeResults)();\n  (0, _cache.removeCache)();\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/destroy.js\n ** module id = 99\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createStore = createStore;\n\nvar _query = require('./query');\n\nvar _cache = require('./cache');\n\n/**\r\n * 初始化数据类\r\n * 获取ppt总数\r\n * @return {[type]} [description]\r\n */\nfunction createStore(callback) {\n    (0, _query.dataQuery)(function (results, collectError) {\n        //保存缓存\n        (0, _cache.saveCache)(results, collectError);\n        //数据缓存转化\n        (0, _cache.convertCache)();\n        //设置API\n        (0, _cache.setApi)(results.Novel.item(0)['_id']);\n        callback(results);\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/index.js\n ** module id = 100\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 计算数据偏移量\r\n * @param  {[type]} tableName [description]\r\n * @return {[type]}           [description]\r\n */\nvar dataOffset = exports.dataOffset = function dataOffset(dataCache) {\n\n    var set = function set(tableName) {\n        var start = void 0;\n        var data = dataCache[tableName];\n        if (data.length) {\n            if (data.item(0)) {\n                if (start = data.item(0)._id) {\n                    dataCache[tableName].start = start;\n                }\n            }\n        }\n    };\n\n    //数据段标记\n    for (var key in dataCache) {\n        if (dataCache[key].item) {\n            set(key);\n        }\n    }\n\n    return dataCache;\n};\n\n/**\r\n * 转化video的activtiy信息\r\n * 因为Video不是靠id关联的 是靠activtiy关联\r\n * [description]\r\n * @return {[type]} [description]\r\n */\nvar transformVideoActivity = exports.transformVideoActivity = function transformVideoActivity(dataCache) {\n    var data = void 0;\n    var activityIds = {};\n    var video = dataCache.Video;\n    _.each(video, function (_, index) {\n        data = video.item(index);\n\n        //确保activityIdID是有值，\n        //这样才是靠activity关联的video,\n        //而不是动画的video\n        if (data && data.activityId) {\n            activityIds[data.activityId] = data._id;\n        }\n    });\n    return activityIds;\n};\n\n/**\r\n * chpater分段\r\n * 转化section信息\r\n * 带有场景处理\r\n * @return {[type]} [description]\r\n */\nvar transformSectionRelated = exports.transformSectionRelated = function transformSectionRelated(dataCache) {\n    var seasonId,\n        start,\n        length,\n        sid,\n        i,\n        id,\n        seasonInfo,\n        toolbar,\n        Chapters,\n        container = {},\n        Chapter = dataCache.Chapter,\n        l = Chapter.length,\n        end = 0;\n\n    //找到指定的season信息\n    var findSeasonInfo = function findSeasonInfo(seasonId) {\n        var temp,\n            seasonNum = dataCache.Season.length;\n        while (seasonNum--) {\n            if (temp = dataCache.Season.item(seasonNum)) {\n                if (temp._id == seasonId) {\n                    return temp;\n                }\n            }\n        }\n    };\n\n    for (i = 0; i < l; i++) {\n        Chapters = Chapter.item(i);\n        if (Chapters) {\n            id = Chapters._id - 1; //保存兼容性,用0开头\n            seasonId = Chapters.seasonId;\n            sid = 'seasonId->' + seasonId;\n            //如果不在集合,先创建\n            if (!container[sid]) {\n                //场景工具栏配置信息\n                if (seasonInfo = findSeasonInfo(seasonId)) {\n                    toolbar = seasonInfo.parameter;\n                }\n                container[sid] = {\n                    start: id,\n                    length: 1,\n                    end: id,\n                    toolbar: toolbar\n                };\n            } else {\n                container[sid].end = id;\n                container[sid].length = container[sid].length + 1;\n            }\n        }\n    }\n\n    return container;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/database/transform.js\n ** module id = 101\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _index = require('../component/action/index');\n\nexports.default = {\n\n    /**\r\n     * 是否阻止全局事件派发\r\n     * @type {Boolean}\r\n     *   false 事件由全局接管派发\r\n     *   false 事件由hotspot处理触发\r\n     *   全局提供的事件接口\r\n     *   {\r\n     *       globalTouchStart\r\n     *       globalTouchMove\r\n     *       globalTouchEnd\r\n     *   }\r\n     */\n    stopDelegate: false,\n\n    /**\r\n     * touchEnd 全局派发的点击事件\r\n     * 如果stopGlobalEvent == ture 事件由全局派发\r\n     */\n    eventDelegate: function eventDelegate(data) {\n        new _index.ActionClass(data);\n    },\n\n\n    /**\r\n     * 复位对象\r\n     * 通过按物理键，关闭当前热点\r\n     * 如果当前没有需要处理的Action\r\n     * 需要返回一个状态标示告诉当前是否应该退出应用\r\n     * @param  {[type]} opts [description]\r\n     * @return {[type]}      [description]\r\n     */\n    recovery: function recovery(opts) {\n        if (this.state) {\n            this.state = false;\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n\n    /**\r\n     * 创建节点\r\n     * @param  {[type]} activityData [description]\r\n     * @param  {[type]} chpaterData  [description]\r\n     * @param  {[type]} chapterId    [description]\r\n     * @param  {[type]} pageIndex    [description]\r\n     * @param  {[type]} zIndex       [description]\r\n     * @param  {[type]} pageType     [description]\r\n     * @return {[type]}              [description]\r\n     */\n    createDom: function createDom() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var _id = _ref._id;\n        var md5 = _ref.md5;\n        var actType = _ref.actType;\n        var scaleWidth = _ref.scaleWidth;\n        var scaleHeight = _ref.scaleHeight;\n        var scaleTop = _ref.scaleTop;\n        var scaleLeft = _ref.scaleLeft;\n        var chpaterData = arguments[1];\n        var chapterId = arguments[2];\n        var pageIndex = arguments[3];\n        var zIndex = arguments[4];\n        var pageType = arguments[5];\n\n\n        //热点背景图\n        var backgroundImage = '';\n        if (md5) {\n            backgroundImage = \"background-image: url(\" + Xut.config.pathAddress + md5 + \");\";\n        }\n\n        var id = actType + \"_\" + _id;\n\n        var html = '<div id=\"' + id + '\"\\n                        data-belong=\"' + pageType + '\" \\n                        data-delegate=\"Action\" \\n                        style=\"\\n                            cursor:pointer;\\n                            width:' + scaleWidth + 'px;\\n                            height:' + scaleHeight + 'px;\\n                            left:' + scaleLeft + 'px;\\n                            top:' + scaleTop + 'px;\\n                            background-size:100% 100%;\\n                            position:absolute;\\n                            z-index:' + zIndex + ';\\n                            ' + backgroundImage + '\">\\n                      </div>';\n\n        return String.styleFormat(html);\n    }\n}; /**\r\n    * 动作热点\r\n    * 1. 跳转页面\r\n    * 2. 打开系统应用程序\r\n    */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/action.js\n ** module id = 102\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * 文本类型\r\n */\nexports.default = {\n\n  /**\r\n   * 创建热点元素结构（用于布局可触发点\r\n   * 预创建\r\n   * @param  {[type]} opts [description]\r\n   * @return {[type]}      [description]\r\n   */\n  createDom: function createDom(opts) {\n    var sqlRet = opts.sqlRet,\n        pageIndex = opts.pageIndex;\n    return function (rootEle, pageIndex) {\n      sqlRet['container'] = rootEle || opts.rootEle;\n      return sqlRet;\n    };\n  },\n\n\n  /**\r\n   * 绑定热点事件\r\n   * 用户交互动作产生Action或者widget对象\r\n   */\n  bindEvent: function bindEvent() {},\n\n\n  /**\r\n   * 在当前页面自动触发的通知\r\n   *\r\n   * 作用：\r\n   *   生成Action或者widget触发点对象\r\n   *\r\n   * 有一种情况，如果当前Action对象，已存在必须要做重复处理\r\n   *\r\n   * Xut.ActionMgr.getOne(key) 接口，是获取当前是否有实例对象的引用\r\n   *\r\n   */\n  autoPlay: function autoPlay(scopeComplete) {\n    return this.autoPlay && this.autoPlay(scopeComplete);\n  },\n\n\n  /**\r\n   * 开始翻页\r\n   *\r\n   * 滑动页面的时候触发\r\n   *\r\n   * 处理要关闭的对象\r\n   *\r\n   * 比如（音频，视频），不能停留到下一个页面,滑动必须立刻关闭或者清理销毁\r\n   *\r\n   * @param  {[type]} this  当前活动对象\r\n   *\r\n   */\n  flipOver: function flipOver() {\n    return this.flipOver();\n  },\n\n\n  /**\r\n   * 翻页完成\r\n   * @return {[type]} [description]\r\n   */\n  flipComplete: function flipComplete() {\n    return this.flipComplete();\n  },\n\n\n  /**\r\n   * 销毁接口\r\n   *\r\n   * 1 销毁页面绑定的事件\r\n   *   A hotspotBind 接口绑定的的热点触发事件\r\n   *   B autoPlay 等接口 产生的具体Action对象事件\r\n   *\r\n   * 2 销毁热点元素的在控制器中的引用\r\n   *\r\n   * 3 清理页面结构\r\n   *\r\n   * 注：\r\n   *   2,3操作暂时由控制器已经内部统一完成了,暂时只需要处理1销毁绑定的事件\r\n   *\r\n   * @param  {[type]} pageIndex    [页码标示]\r\n   * @param  {[type]} rootEle      [根元素]\r\n   * @return {[type]}              [description]\r\n   */\n  destroy: function destroy() {\n    return this.destroy();\n  },\n\n\n  /**\r\n   *  复位状态通知\r\n   *\r\n   *  作用：用户按页面右上角返回，或者pad手机上的物理返回键\r\n   *\r\n   *  那么：\r\n   *      1 按一次， 如果当前页面有活动热点，并且热点对象还在可视活动状态（比如文本，是显示，音频正在播放）\r\n   *        那么则调用此方法，做复位处理，即文本隐藏，音频关闭\r\n   *        然后返回true, 用于反馈给控制器,停止下一步调用\r\n   *        按第二次,则退出页面\r\n   *\r\n   *     2 按一次，如果没有活动的对象，return false,这直接退出页面\r\n   *\r\n   * @param  {[type]} activeObejct [description]\r\n   * @return {[type]}              [description]\r\n   */\n  recovery: function recovery(opts) {\n    return this.recovery && this.recovery();\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/content.js\n ** module id = 103\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _index = require('../util/index');\n\nvar _index2 = require('../config/index');\n\nvar _manager = require('../component/audio/manager');\n\nvar _manager2 = require('../component/video/manager');\n\n//临时音频动作数据\nvar tempData = {};\n\nexports.default = {\n    createDom: function createDom() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var _id = _ref._id;\n        var md5 = _ref.md5;\n        var actType = _ref.actType;\n        var category = _ref.category;\n        var itemArray = _ref.itemArray;\n        var scaleWidth = _ref.scaleWidth;\n        var scaleHeight = _ref.scaleHeight;\n        var scaleTop = _ref.scaleTop;\n        var scaleLeft = _ref.scaleLeft;\n        var chpaterData = arguments[1];\n        var chapterId = arguments[2];\n        var pageIndex = arguments[3];\n        var zIndex = arguments[4];\n        var pageType = arguments[5];\n\n\n        var html = void 0,\n            mediaIcon = '',\n            startImage = '';\n\n        //如果没有宽高则不创建绑定节点\n        if (!scaleWidth || !scaleHeight) return '';\n\n        var screenSize = _index2.config.screenSize;\n\n        //解析音乐动作\n        //冒泡动作靠节点传递数据\n        if (itemArray) {\n            itemArray = (0, _index.parseJSON)(itemArray);\n            var start = itemArray[0];\n            var stop = itemArray[1];\n            tempData[_id] = {};\n            if (start) {\n                if (start.startImg) {\n                    startImage = start.startImg;\n                    tempData[_id]['startImg'] = startImage;\n                    startImage = 'background-image:url(' + startImage + ');';\n                }\n                if (start.script) {\n                    tempData[_id]['startScript'] = start.script;\n                }\n            }\n            if (stop) {\n                if (stop.stopImg) {\n                    tempData[_id]['stopImg'] = stop.stopImg;\n                }\n                if (stop.script) {\n                    tempData[_id]['stopScript'] = stop.script;\n                }\n            }\n        }\n\n        //首字母大写\n        var mediaType = category.replace(/(\\w)/, function (v) {\n            return v.toUpperCase();\n        });\n\n        //只针对网页插件增加单独的点击界面\n        //如果有视频图标\n        if (category == 'webpage' && scaleWidth > 200 && scaleHeight > 100 && scaleWidth <= screenSize.width && scaleHeight <= screenSize.height) {\n\n            var mediaIconSize = 74;\n            var posX = (scaleWidth - mediaIconSize) / 2;\n            var posY = (scaleHeight - mediaIconSize) / 2;\n            var icon = 'background-image:url(images/icons/web_hotspot.png)';\n            mediaIcon = '<div \\n                               id=\"icon_' + _id + '\" \\n                               type=\"icon\" \\n                               style=\"\\n                                 width:' + mediaIconSize + 'px;\\n                                 height:' + mediaIconSize + 'px;\\n                                 top:' + posY + 'px;\\n                                 left:' + posX + 'px;\\n                                 position:absolute;\\n                                 ' + icon + '\">\\n                            </div>';\n        }\n\n        //创建音频对象\n        //Webpage_1\n        //Audio_1\n        //Video_1\n        return String.styleFormat('<div \\n                      id=\"' + (mediaType + \"_\" + _id) + '\" \\n                      data-belong=\"' + pageType + '\" \\n                      data-delegate=\"' + category + '\" \\n                      style=\"\\n                        width:' + scaleWidth + 'px;\\n                        height:' + scaleHeight + 'px;\\n                        left:' + scaleLeft + 'px;\\n                        top:' + scaleTop + 'px;\\n                        z-index:' + zIndex + ';\\n                        ' + startImage + '\\n                        background-size:100% 100%;\\n                        position:absolute;\">\\n                            ' + mediaIcon + '\\n                    </div>');\n    },\n\n\n    /**\r\n     * 仅创建一次\r\n     * data传递参数问题\r\n     * @param  {[type]} id [description]\r\n     * @return {[type]}    [description]\r\n     */\n    onlyCreateOnce: function onlyCreateOnce(id) {\n        var data;\n        if (data = tempData[id]) {\n            delete tempData[id];\n            return data;\n        }\n    },\n\n\n    /**\r\n     * touchEnd 全局派发的点击事件\r\n     * 如果stopGlobalEvent == ture 事件由全局派发\r\n     */\n    eventDelegate: function eventDelegate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var id = _ref2.id;\n        var target = _ref2.target;\n        var rootNode = _ref2.rootNode;\n        var pageIndex = _ref2.pageIndex;\n        var activityId = _ref2.activityId;\n\n        var category = target.getAttribute('data-delegate');\n        if (category) {\n            var chapterId = Xut.Presentation.GetPageId(pageIndex);\n            /**\r\n             * 传入chapterId 页面ID\r\n             * activityId    视频ID\r\n             * eleName       节点名  //切换控制\r\n             * 根节点\r\n             */\n            if (category == 'audio') {\n                (0, _manager.triggerAudio)(chapterId, activityId, this.onlyCreateOnce(id));\n            } else {\n                (0, _manager2.triggerVideo)(chapterId, activityId, $(rootNode));\n            }\n        }\n    },\n\n\n    /**\r\n     * 自动运行\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    autoPlay: function autoPlay() {\n        var _ref3 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var id = _ref3.id;\n        var _autoPlay = _ref3.autoPlay;\n        var category = _ref3.category;\n        var rootNode = _ref3.rootNode;\n        var pageIndex = _ref3.pageIndex;\n        var chapterId = _ref3.chapterId;\n\n        if (!category) return;\n        if (category == 'audio') {\n            (0, _manager.autoAudio)(chapterId, id, this.onlyCreateOnce(id));\n        } else {\n            (0, _manager2.autoVideo)(chapterId, id, rootNode);\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/media.js\n ** module id = 104\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _index = require('../component/note/index');\n\nvar _index2 = require('../config/index');\n\nexports.default = {\n\n    /**\r\n     * 创建热点元素结构（用于布局可触发点）\r\n     * 根据数据创建自己的热点元素结构（用于拼接结构字符串）\r\n     * 要retrun返回这个结构，主要是多人操作时,保证只有最终的dom渲染只有一次\r\n     * actType + \"_\" + _id\r\n     * @return {[type]}              [description]\r\n     */\n    createDom: function createDom(activityData, chpaterData, chapterId, pageIndex, zIndex, pageType) {\n\n        var newWidth, id, width, height, retStr;\n\n        retStr = \"\";\n        id = activityData['_id'];\n        width = activityData.scaleWidth;\n        height = activityData.scaleHeight;\n        newWidth = (width + height) / 2 * _index2.config.iconHeight;\n\n        retStr += '<div id=\"ShowNote_{0}\" ' + ' class=\"xut-showNote\" ' + ' data-belong =\"{1}\"  ' + ' data-delegate=\"ShowNote\" ' + ' style=\"width:{2}px;height:{3}px\">\" ' + '</div>';\n\n        return String.format(retStr, id, pageType, newWidth, newWidth);\n    },\n\n\n    /**\r\n     * touchEnd 全局派发的点击事件\r\n     * 如果stopGlobalEvent == ture 事件由全局派发\r\n     */\n    eventDelegate: function eventDelegate(data) {\n        data.data = Xut.Presentation.GetPageData(data.pageIndex);\n        new _index.ShowNote(data);\n    },\n\n\n    /**\r\n     * 自动运行生成Action或者widget触发点对象\r\n     * @param  {[type]} opts [description]\r\n     * @return {[type]}      [description]\r\n     */\n    autoPlay: function autoPlay(opts) {},\n\n\n    /**\r\n     * 翻页后处理页面中活动热点的状态\r\n     * @param  {[type]} activeObejct [需要处理的活动对象]\r\n     *\r\n     * 比如音频,视频 翻页需要暂停，也可以销毁\r\n     */\n    flipOver: function flipOver(opts) {\n        //console.log('翻页处理活动对象', activeObejct ,pageIndex);\n    },\n\n\n    /**\r\n     * 销毁页面hotspot事件与Action或widget事件\r\n     * @param  {[type]} activeObejct [需要处理的活动对象]\r\n     * @param  {[type]} pageIndex    [页码标示]\r\n     * @param  {[type]} rootEle      [根元素]\r\n     * @return {[type]}              [description]\r\n     */\n    destroy: function destroy(opts) {\n        this && this.destroy();\n    },\n\n\n    /**\r\n     * 复位对象\r\n     * 通过按物理键，关闭当前热点\r\n     *  @return 如果当前没有需要处理的Action\r\n     *  需要返回一个状态标示告诉当前是否应该退出应用\r\n     * @param  {[type]} opts [description]\r\n     * @return {[type]}      [description]\r\n     */\n    recovery: function recovery(opts) {\n        if (this.state) {\n            this.dispatchProcess();\n            return true;\n        }\n        return false;\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/shownote.js\n ** module id = 105\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _adapter = require('../component/widget/adapter');\n\nexports.default = {\n\n    /**\r\n     * 创建热点元素结构（用于布局可触发点\r\n     * 要retrun返回这个结构，主要是多人操作时,保证只有最终的dom渲染只有一次\r\n     * 根据数据创建自己的热点元素结构（用于拼接结构字符串）\r\n     * @return {[type]}              [description]\r\n     */\n    createDom: function createDom() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var _id = _ref._id;\n        var md5 = _ref.md5;\n        var autoPlay = _ref.autoPlay;\n        var actType = _ref.actType;\n        var scaleWidth = _ref.scaleWidth;\n        var scaleHeight = _ref.scaleHeight;\n        var scaleTop = _ref.scaleTop;\n        var scaleLeft = _ref.scaleLeft;\n        var chpaterData = arguments[1];\n        var chapterId = arguments[2];\n        var pageIndex = arguments[3];\n        var zIndex = arguments[4];\n        var pageType = arguments[5];\n\n\n        var backgroundImage = '';\n\n        //如果是自动播放,则不创建结构\n        if (autoPlay) {\n            return '';\n        }\n\n        //热点背景图\n        if (md5) {\n            backgroundImage = \"background-image: url(\" + Xut.config.pathAddress + md5 + \");\";\n        }\n\n        var html = '<div id=\"{{id}}\" ' + 'data-belong=\"{{pageType}}\" ' + 'data-delegate=\"{{actType}}\" ' + 'style=' + '\"' + 'cursor: pointer;' + 'background-size:100% 100%;' + 'position:absolute;' + 'width:{{width}}px;height:{{height}}px;left:{{left}}px;top:{{top}}px;' + 'z-index:{{zIndex}};' + '{{backgroundImage}}' + '\"' + '></div>';\n\n        return _.template(html, {\n            id: actType + \"_\" + _id,\n            pageType: pageType,\n            actType: actType,\n            autoPlay: autoPlay,\n            width: scaleWidth,\n            height: scaleHeight,\n            left: scaleLeft,\n            top: scaleTop,\n            zIndex: zIndex,\n            backgroundImage: backgroundImage\n        });\n    },\n\n\n    /**\r\n     * 事件委托\r\n     * 通过点击触发\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    eventDelegate: function eventDelegate(data) {\n        return (0, _adapter.Adapter)(data);\n    },\n\n\n    /**\r\n     * 在当前页面自动触发的通知\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    autoPlay: function autoPlay(data) {\n        (0, _adapter.Adapter)({\n            'rootNode': data.rootNode,\n            \"type\": data.type,\n            \"pageType\": data.pageType,\n            \"activityId\": data.id,\n            \"pageIndex\": data.pageIndex,\n            \"isAutoPlay\": true\n        });\n    },\n\n\n    /**\r\n     *  复位状态通知\r\n     *\r\n     *  作用：用户按页面右上角返回，或者pad手机上的物理返回键\r\n     *\r\n     *  那么：\r\n     *      1 按一次， 如果当前页面有活动热点，并且热点对象还在可视活动状态（比如文本，是显示，音频正在播放）\r\n     *        那么则调用此方法，做复位处理，即文本隐藏，音频关闭\r\n     *        然后返回true, 用于反馈给控制器,停止下一步调用\r\n     *        按第二次,则退出页面\r\n     *\r\n     *     2 按一次，如果没有活动的对象，return false,这直接退出页面\r\n     *\r\n     * @param  {[type]} activeObejct [description]\r\n     * @return {[type]}              [description]\r\n     */\n    recovery: function recovery(opts) {\n        return this.recovery();\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/directive/widget.js\n ** module id = 106\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = overrideApi;\n\nvar _option = require('./util/option');\n\nvar typeFilter = ['page', 'master'];\n\n/**\r\n * 合并参数设置\r\n * 1 pageMgr\r\n * 2 masterMgr\r\n * 3 修正pageType\r\n * 4 args参数\r\n * 5 回调每一个上下文\r\n */\n/**\r\n * 应用对外接口\r\n * 此模块的所有方法都是动态修正上下文，自动切换场景\r\n * 1.   Xut.Application\r\n *          a)  整个应用程序的接口，执行应用级别的操作，例如退出应用之类。\r\n * 2.   Xut.DocumentWindow\r\n *          a)  窗口的接口。窗口就是电子杂志的展示区域，可以操作诸如宽度、高度、长宽比之类。\r\n * 3.   Xut.View\r\n *          a)  视图接口。视图是窗口的展示方式，和页面相关的接口，都在这里。\r\n * 4.   Xut.Presentation\r\n *          a)  数据接口。和电子杂志的数据相关的接口，都在这里。\r\n * 5.   Xut.Slides\r\n *          a)  所有页面的集合\r\n * 6.   Xut.Slide\r\n *          a)  单个页面\r\n * 7.   Xut.Master\r\n *          a)  页面的母版\r\n * @return {[type]} [description]\r\n */\n\nvar createaAccess = function createaAccess(mgr) {\n    return function (callback, pageType, args, eachContext) {\n        //如果第一个参数不是pageType模式\n        //参数移位\n        if (pageType !== undefined && -1 === typeFilter.indexOf(pageType)) {\n            var temp = args;\n            args = pageType;\n            eachContext = temp;\n            pageType = 'page';\n        }\n\n        //pageIndex为pageType参数\n        if (-1 !== typeFilter.indexOf(args)) {\n            pageType = args;\n            args = null;\n        }\n\n        pageType = pageType || 'page';\n\n        if (mgr[pageType]) {\n            return callback(mgr[pageType], pageType, args, eachContext);\n        } else {\n            console.log('传递到access的pageType错误！');\n        }\n    };\n};\n\n/**\r\n * 判断是否存在页码索引\r\n * 如果不存在默认取当前页面\r\n */\nvar createExistIndex = function createExistIndex($globalEvent) {\n    return function (pageIndex) {\n        //如果不存在\n        if (pageIndex == undefined) {\n            pageIndex = $globalEvent.getHindex(); //当前页面\n        }\n        return pageIndex;\n    };\n};\n\nfunction overrideApi(vm) {\n\n    var $globalEvent = vm.$globalEvent;\n    var options = vm.options;\n    var $dispatch = vm.$dispatch;\n\n    //页面与母版的管理器\n    var access = createaAccess({\n        page: $dispatch.pageMgr,\n        master: $dispatch.masterMgr\n    });\n\n    var isExistIndex = createExistIndex($globalEvent);\n\n    //***************************************************************\n    //\n    //  数据接口\n    //\n    //***************************************************************\n\n    var Presentation = Xut.Presentation;\n\n    /**\r\n     * 获取当前页码\r\n     */\n    Presentation.GetPageIndex = function () {\n        return $globalEvent.getHindex();\n    };\n\n    /**\r\n     * [获取页面的总数据]\r\n     * 1 chapter数据\r\n     * 2 section数据\r\n     * @return {[type]}\r\n     */\n    _.each([\"Section\", \"Page\"], function (apiName) {\n        Presentation['GetApp' + apiName + 'Data'] = function (callback) {\n            var i = 0,\n                temp = [],\n                cps = Xut.data.query('app' + apiName),\n                cpsLength = cps.length;\n            for (i; i < cpsLength; i++) {\n                temp.push(cps.item(i));\n            }\n            return temp;\n        };\n    });\n\n    /**\r\n     * 获取首页的pageId\r\n     * @param {[type]} seasonId [description]\r\n     */\n    Presentation.GetFirstPageId = function (seasonId) {\n        var sectionRang = Xut.data.query('sectionRelated', seasonId);\n        var pageData = Xut.data.query('appPage');\n        return pageData.item(sectionRang.start);\n    };\n\n    /**\r\n     *  四大数据接口\r\n     *  快速获取一个页面的nodes值\r\n     *  获取当前页面的页码编号 - chapterId\r\n     *  快速获取指定页面的chapter数据\r\n     *  pagebase页面管理对象\r\n     * @return {[type]}            [description]\r\n     */\n    _.each([\"GetPageId\", \"GetPageNode\", \"GetPageData\", \"GetPageObj\"], function (apiName) {\n        Presentation[apiName] = function (pageType, pageIndex) {\n            return access(function (manager, pageType, pageIndex) {\n                pageIndex = isExistIndex(pageIndex);\n                return manager[\"abstract\" + apiName](pageIndex, pageType);\n            }, pageType, pageIndex);\n        };\n    });\n\n    /**\r\n     * 得到页面根节点\r\n     * li节点\r\n     */\n    Presentation.GetPageElement = function () {\n        var obj = Presentation.GetPageObj();\n        return obj.element;\n    };\n\n    /**\r\n     * 获取页码标记\r\n     * 因为非线性的关系，页面都是按chpater组合的\r\n     * page_0\r\n     * page_10\r\n     * 但是每一个章节页面的索引是从0开始的\r\n     * 区分pageIndex\r\n     */\n    Presentation.GetPagePrefix = function (pageType, pageIndex) {\n        var pageObj = Presentation.GetPageObj(pageType, pageIndex);\n        return pageObj.pid;\n    };\n\n    //命名前缀\n    var prefix = 'Content_';\n\n    /**\r\n     * 创建一个content的命名规则\r\n     */\n    Presentation.MakeContentPrefix = function (pageIndex) {\n        return prefix + Presentation.GetPagePrefix(pageIndex) + \"_\";\n    };\n\n    /**\r\n     * 获取命名规则\r\n     */\n    Presentation.GetContentName = function (id) {\n        if (id) {\n            return prefix + Presentation.GetPagePrefix() + \"_\" + id;\n        } else {\n            return prefix + Presentation.GetPagePrefix();\n        }\n    };\n\n    //***************************************************************\n    //\n    //  视图接口\n    //\n    //***************************************************************\n\n    var View = Xut.View;\n\n    /**\r\n     * 设置页面的potion编码\r\n     * 为分栏修改\r\n     */\n    View.setPointer = function (pageIndex) {\n        $globalEvent.setPointer(pageIndex);\n    };\n\n    /**\r\n     * 更新页码\r\n     * @param {[type]} point [description]\r\n     */\n    View.pageUpdate = function (pageIndex) {\n        vm.$emit('change:pageUpdate', pageIndex);\n    };\n\n    /**\r\n     * 显示工具栏\r\n     * 没有参数显示 工具栏与控制翻页按钮\r\n     * 有参数单独显示指定的\r\n     */\n    View.ShowToolbar = function (point) {\n        vm.$emit('change:toggleToolbar', 'show', point);\n    };\n\n    /**\r\n     * 隐藏工具栏\r\n     * 没有参数隐藏 工具栏与控制翻页按钮\r\n     * 有参数单独隐藏指定\r\n     */\n    View.HideToolbar = function (point) {\n        vm.$emit('change:toggleToolbar', 'hide', point);\n    };\n\n    /**\r\n     * 指定特定的显示与隐藏\r\n     *  Xut.View.Toolbar({\r\n     *       show :'bottom',\r\n     *       hide :'controlBar'\r\n     *   })\r\n     *\r\n     *  //工具栏与翻页按钮全部显示/隐藏\r\n     *  Xut.View.Toolbar('show')\r\n     *  Xut.View.Toolbar('hide')\r\n     *\r\n     * @return {[type]} [description]\r\n     */\n    View.Toolbar = function (cfg) {\n        vm.$emit('change:toggleToolbar', cfg);\n    };\n\n    /**\r\n     * 跳转到上一个页面\r\n     */\n    View.GotoPrevSlide = function (seasonId, chapterId) {\n        if (seasonId && chapterId) {\n            Xut.View.LoadScenario({\n                'scenarioId': seasonId,\n                'chapterId': chapterId\n            });\n            return;\n        }\n\n        //ibooks模式下的跳转\n        //全部转化成超链接\n        if (Xut.IBooks.Enabled && Xut.IBooks.runMode()) {\n            location.href = Xut.IBooks.pageIndex - 1 + \".xhtml\";\n            return;\n        }\n\n        options.multiplePages && $globalEvent.prev();\n    };\n\n    /**\r\n     * 跳转到下一个页面\r\n     */\n    View.GotoNextSlide = function (seasonId, chapterId) {\n        if (seasonId && chapterId) {\n            Xut.View.LoadScenario({\n                'scenarioId': seasonId,\n                'chapterId': chapterId\n            });\n            return;\n        }\n\n        //ibooks模式下的跳转\n        //全部转化成超链接\n        if (Xut.IBooks.Enabled && Xut.IBooks.runMode()) {\n            location.href = Xut.IBooks.pageIndex + 1 + \".xhtml\";\n            return;\n        }\n\n        options.multiplePages && $globalEvent.next();\n    };\n\n    /**\r\n     * 跳转页面\r\n     * 场景内部切换\r\n     * 跳转到指定编号的页面\r\n     * Action 类型跳转\r\n     * xxtlink 超连接跳转,svg内嵌跳转标记处理\r\n     * 文本框跳转\r\n     * ........\r\n     */\n    View.GotoSlide = function (seasonId, chapterId) {\n        var count,\n            sceneObj,\n            currscene,\n            sceneController,\n\n        //修正参数\n        fixParameter = function fixParameter(pageIndex) {\n            pageIndex = Number(pageIndex) - 1;\n            if (pageIndex < 0) {\n                pageIndex = 0;\n            }\n            return pageIndex;\n        };\n\n        //ibooks模式下的跳转\n        //全部转化成超链接\n        if (Xut.IBooks.Enabled && Xut.IBooks.runMode() && chapterId) {\n            location.href = chapterId + \".xhtml\";\n            return;\n        }\n\n        //兼容数据错误\n        if (!seasonId && !chapterId) return;\n\n        //如果是一个参数是传递页码数,则为内部跳转\n        if (arguments.length === 1) {\n            //复位翻页按钮\n            vm.$emit('change:showNext');\n            return $globalEvent.scrollToPage(fixParameter(seasonId));\n        }\n\n        //场景模式内部跳转\n        if (options.scenarioId == seasonId) {\n            //chpaterId 转化成实际页码\n            var sectionRang = Xut.data.query('sectionRelated', seasonId);\n            var pageIndex = chapterId - sectionRang.start;\n            vm.$emit('change:showNext');\n            return $globalEvent.scrollToPage(fixParameter(pageIndex));\n        }\n        //场景与场景的跳转\n        return View.LoadScenario({\n            'scenarioId': seasonId,\n            'chapterId': chapterId\n        });\n    };\n\n    /**\r\n     * 页面滑动\r\n     * @param {[type]} distance  [description]\r\n     * @param {[type]} speed     [description]\r\n     * @param {[type]} direction [description]\r\n     * @param {[type]} action    [description]\r\n     */\n    View.MovePage = function (distance, speed, direction, action) {\n\n        //如果禁止翻页模式 || 如果是滑动,不是边界\n        if (!options.multiplePages || $globalEvent.isMoveimg() || action === 'flipMove' && $globalEvent.isBorder(distance)) {\n            return;\n        }\n\n        var pagePointer = $globalEvent.getPointer();\n        var data = {\n            'distance': distance,\n            'speed': speed,\n            'direction': direction,\n            'action': action,\n            'leftIndex': pagePointer.leftIndex,\n            'pageIndex': pagePointer.currIndex,\n            'rightIndex': pagePointer.rightIndex\n        };\n        $dispatch.move(data);\n    };\n\n    //***************************************************************\n    //\n    //  辅助对象的控制接口\n    //\n    //***************************************************************\n\n    /**\r\n     * 运行辅助动画\r\n     * 辅助对象的activityId,或者合集activityId\r\n     * Run\r\n     * stop\r\n     * 1 零件\r\n     * 2 音频动画\r\n     */\n    var Assist = Xut.Assist;\n\n    _.each([\"Run\", \"Stop\"], function (apiName) {\n        Assist[apiName] = function (pageType, activityId, outCallBack) {\n            access(function (manager, pageType, activityId, outCallBack) {\n                //数组\n                if (_.isArray(activityId)) {\n                    //完成通知\n                    var markComplete = function () {\n                        var completeStatistics = activityId.length; //动画完成统计\n                        return function () {\n                            if (completeStatistics === 1) {\n                                outCallBack && outCallBack();\n                                markComplete = null;\n                            }\n                            completeStatistics--;\n                        };\n                    }();\n                    _.each(activityId, function (id) {\n                        manager.abstractAssistAppoint(id, $globalEvent.getHindex(), markComplete, apiName);\n                    });\n                } else {\n                    manager.abstractAssistAppoint(activityId, $globalEvent.getHindex(), outCallBack, apiName);\n                }\n            }, pageType, activityId, outCallBack);\n        };\n    });\n\n    //***************************************************************\n    //\n    //  针对page页面的content类型操作接口\n    //\n    //***************************************************************\n\n    var Contents = Xut.Contents;\n\n    /**\r\n     * 获取指定的对象\r\n     * 传递参数\r\n     * 单一 id\r\n     * 数据id合集 [1,2,4,5,6]\r\n     * @param {[type]}   contentIds  [description]\r\n     * @param {Function} eachContext 回调遍历每一个上下文\r\n     */\n    Contents.Get = function (pageType, contentIds, eachContext) {\n\n        return access(function (manager, pageType, contentIds, eachContext) {\n\n            var contentObj,\n                contentObjs,\n                pageIndex = Presentation.GetPageIndex();\n\n            function findContent(currIndex, contentId) {\n                var pageObj;\n                if (pageObj = manager.abstractGetPageObj(currIndex)) {\n                    return pageObj.baseGetContentObject(contentId);\n                }\n            }\n\n            //如果传递是数组合集\n            if (_.isArray(contentIds)) {\n                contentObjs = [];\n                _.each(contentIds, function (id) {\n                    contentObj = findContent(pageIndex, id);\n                    if (eachContext) {\n                        //传递每一个处理的上下文\n                        eachContext(id, contentObj);\n                    } else {\n                        if (contentObj) {\n                            contentObjs.push(contentObj);\n                        } else {\n                            Xut.log('error', '找不到对应的content数据' + id);\n                        }\n                    }\n                });\n                return contentObjs;\n            }\n\n            //如果传递的是Content_1_3组合情况\n            if (/_/.test(contentIds)) {\n                var expr = contentIds.split('_');\n                if (expr.length > 1) {\n                    return findContent(expr[1], expr[2]);\n                }\n            }\n\n            //单一content id\n            contentObj = findContent(pageIndex, contentIds);\n\n            if (eachContext) {\n                eachContext(contentObj);\n            } else {\n                return contentObj;\n            }\n        }, pageType, contentIds, eachContext);\n    };\n\n    /**\r\n     * 得到指定页面零件的数据\r\n     * 获取指定的content数据\r\n     * @param  {[type]} contentId [description]\r\n     * @return {[type]}           [description]\r\n     */\n    Contents.GetPageWidgetData = function (pageType, contentId) {\n\n        //如果没有传递pageType取默认\n        if (-1 === typeFilter.indexOf(pageType)) {\n            contentId = pageType;\n            pageType = 'page';\n        }\n\n        //必须有数据\n        if (!contentId || !contentId.length) {\n            return;\n        }\n\n        //保证是数组格式\n        if (_.isString(contentId)) {\n            contentId = [contentId];\n        }\n\n        var contentDas,\n            contents = [];\n\n        Contents.Get(pageType, contentId, function (cid, content) {\n            //是内部对象\n            if (content && (contentDas = content.contentDas)) {\n                //通过内部管理获取对象\n                contents.push({\n                    'id': content.id,\n                    'idName': content.actName,\n                    'element': content.$contentProcess,\n                    'theTitle': contentDas.theTitle,\n                    'scaleHeight': contentDas.scaleHeight,\n                    'scaleLeft': contentDas.scaleLeft,\n                    'scaleTop': contentDas.scaleTop,\n                    'scaleWidth': contentDas.scaleWidth,\n                    'contentData': contentDas,\n                    'source': 'innerObjet' //获取方式内部对象\n                });\n            } else {\n                //如果通过内部找不到对象的content数据,则直接查找数据库\n                //可能是一个事件的钩子对象\n                if (contentDas = seekQuery(cid)) {\n                    var actName = Presentation.GetContentName(cid);\n                    var element;\n                    //如果对象是事件钩子或者是浮动对象\n                    //没有具体的数据\n                    if (content && content.$contentProcess) {\n                        element = content.$contentProcess;\n                    } else {\n                        element = $('#' + actName);\n                    }\n                    contents.push({\n                        'id': cid,\n                        'idName': actName,\n                        'element': element,\n                        'theTitle': contentDas.theTitle,\n                        'scaleHeight': contentDas.scaleHeight,\n                        'scaleLeft': contentDas.scaleLeft,\n                        'scaleTop': contentDas.scaleTop,\n                        'scaleWidth': contentDas.scaleWidth,\n                        'contentData': contentDas,\n                        'source': 'dataBase'\n                    });\n                } else {\n                    Xut.log('error', '找不到对应的GetPageWidgetData数据' + cid);\n                }\n            }\n        });\n        return contents;\n    };\n\n    //数据库查找\n    function seekQuery(id) {\n        var contentData = Xut.data.query('Content', id);\n        if (contentData) {\n            return (0, _option.reviseSize)(_.extend({}, contentData));\n        }\n    }\n\n    //******************************************\n    //\n    //      互斥接口\n    //      直接显示\\隐藏\\停止动画\n    //\n    //*******************************************\n\n    //检测类型为字符串\n    function typeCheck(objNameList) {\n        return !objNameList || typeof objNameList !== 'string' ? true : false;\n    }\n\n    /**\r\n     * 针对文本对象的直接操作\r\n     * 显示\r\n     * 隐藏\r\n     * 停止动画\r\n     */\n    _.each([\"Show\", \"Hide\", \"StopAnim\"], function (operate) {\n        Contents[operate] = function (pageType, nameList) {\n            access(function (manager, pageType, nameList) {\n                if (typeCheck(nameList)) return;\n                var pageBaseObj;\n                if (!(pageBaseObj = manager.abstractAssistPocess($globalEvent.getHindex()))) {\n                    console.log('注入互斥接口数据错误！');\n                    return;\n                }\n                _.each(nameList.split(','), function (contentId) {\n                    pageBaseObj.baseContentMutex(contentId, operate);\n                });\n            }, pageType, nameList);\n        };\n    });\n\n    //******************************************\n    //\n    //      Application\n    //      应用接口\n    //\n    //*******************************************\n\n    var Application = Xut.Application;\n\n    /**\r\n     * 获取一个存在的实例对象\r\n     * 区分不同层级page/master\r\n     * 不同类型    content/widget\r\n     */\n    Application.GetSpecifiedObject = function (pageType, data) {\n        return access(function (manager, pageType) {\n            var pageObj;\n            if (pageObj = manager.abstractGetPageObj(data.pageIndex)) {\n                if (data.type === 'Content') {\n                    return pageObj.baseSpecifiedContent(data);\n                } else {\n                    return pageObj.baseSpecifiedComponent(data);\n                }\n            }\n        }, pageType);\n    };\n\n    /**\r\n     * 应用滑动接口\r\n     * @return {[type]}\r\n     */\n    _.each([\"closeSwipe\", \"openSwipe\"], function (operate) {\n        Application[operate] = function () {\n            $globalEvent[operate]();\n        };\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/dynamic-api.js\n ** module id = 107\n ** module chunks = 0\n **/","'use strict';\n\nvar _index = require('./config/index');\n\nvar _controller = require('./scenario/controller');\n\nvar _index2 = require('./command/index');\n\nvar _factory = require('./scenario/factory');\n\nvar _globalStop = require('./global-stop');\n\nvar _globalDestroy = require('./global-destroy');\n\nvar _globalDestroy2 = _interopRequireDefault(_globalDestroy);\n\nvar _scene = require('./main/scene');\n\nvar _scene2 = _interopRequireDefault(_scene);\n\nvar _cursor = require('./util/cursor');\n\nvar _index3 = require('./util/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plat = Xut.plat; /**\r\n                      *\r\n                      * 杂志全局API\r\n                      *\r\n                      *  *** 有方法体的是全局接口，不会被重载***\r\n                      *  *** 无方法体的是场景接口，总会切换到当前可视区域场景***\r\n                      *\r\n                      * 1.   Xut.Application\r\n                      *          a)  整个应用程序的接口，执行应用级别的操作，例如退出应用之类。\r\n                      * 2.   Xut.DocumentWindow\r\n                      *          a)  窗口的接口。窗口就是电子杂志的展示区域，可以操作诸如宽度、高度、长宽比之类。\r\n                      * 3.   Xut.View\r\n                      *          a)  视图接口。视图是窗口的展示方式，和页面相关的接口，都在这里。\r\n                      * 4.   Xut.Presentation\r\n                      *          a)  数据接口。和电子杂志的数据相关的接口，都在这里。\r\n                      * 5.   Xut.Slides\r\n                      *          a)  所有页面的集合\r\n                      * 6.   Xut.Slide\r\n                      *          a)  单个页面\r\n                      * 7.   Xut.Master\r\n                      *          a)  页面的母版\r\n                      *\r\n                      *\r\n                      * @return {[type]} [description]\r\n                      */\n\nvar Presentation = Xut.Presentation = (0, _index3.hash)();\nvar _View = Xut.View = (0, _index3.hash)();\nvar Contents = Xut.Contents = (0, _index3.hash)();\nvar Application = Xut.Application = (0, _index3.hash)();\n\nXut.Assist = (0, _index3.hash)();\n\n/**\r\n * 获取缓存\r\n * @param  {[type]} name [description]\r\n * @return {[type]}      [description]\r\n */\nvar getStorage = function getStorage(name) {\n    return parseInt((0, _index3._get)(name));\n};\n\n/**\r\n * 忙碌光标\r\n * */\n(0, _index3._extend)(_View, {\n    ShowBusy: _cursor.ShowBusy,\n    HideBusy: _cursor.HideBusy,\n    ShowTextBusy: _cursor.ShowTextBusy\n});\n\n//重复点击\nvar repeatClick = false;\n\n/**\r\n * 场景\r\n * */\n(0, _index3._extend)(_View, {\n\n    /**\r\n     * 关闭场景\r\n     */\n    CloseScenario: function CloseScenario() {\n        if (repeatClick) return;\n        repeatClick = true;\n        var serial = _controller.sceneController.takeOutPrevChainId();\n        _View.LoadScenario({\n            'scenarioId': serial.scenarioId,\n            'chapterId': serial.chapterId,\n            'createMode': 'sysClose'\n        }, function () {\n            repeatClick = false;\n        });\n    },\n\n\n    /**\r\n     * 加载一个新的场景\r\n     * 1 节与节跳\r\n     *    单场景情况\r\n     *    多场景情况\r\n     * 2 章与章跳\r\n     * useUnlockCallBack 用来解锁回调,重复判断\r\n     * isInApp 是否跳转到提示页面\r\n     */\n    LoadScenario: function LoadScenario(options, useUnlockCallBack) {\n\n        var seasonId = (0, _index3.toNumber)(options.scenarioId),\n            chapterId = (0, _index3.toNumber)(options.chapterId),\n            pageIndex = (0, _index3.toNumber)(options.pageIndex),\n            createMode = options.createMode,\n            isInApp = options.isInApp;\n\n        //ibooks模式下的跳转\n        //全部转化成超链接\n        if (!options.main && Xut.IBooks.Enabled && Xut.IBooks.runMode()) {\n            location.href = chapterId + \".xhtml\";\n            return;\n        }\n\n        //用户指定的跳转入口，而不是通过内部关闭按钮处理的\n        var userAssign = createMode === 'sysClose' ? false : true,\n\n        //当前活动场景容器对象\n        current = _controller.sceneController.containerObj('current');\n\n        //获取到当前的页面对象\n        //用于跳转去重复\n        if (current && current.vm) {\n            var curVmPage;\n            if (curVmPage = current.vm.$curVmPage) {\n                if (curVmPage.scenarioId == seasonId && curVmPage.chapterId == chapterId) {\n                    console.log('无效的重复触发');\n                    return;\n                }\n            }\n        }\n\n        //==================场景内部跳转===============================\n        //\n        //  节相同，章与章的跳转\n        //  用户指定跳转模式,如果目标对象是当前应用页面，按内部跳转处理\n        //\n        //=============================================================\n        if (userAssign && current && current.scenarioId === seasonId) {\n            _View.GotoSlide(seasonId, chapterId);\n            return;\n        }\n\n        //==================场景外部跳转===============================\n        //\n        //  节与节的跳转,需要对场景的处理\n        //\n        //=============================================================\n\n        //清理热点动作\n        current && current.vm.$suspend();\n\n        //通过内部关闭按钮加载新场景处理\n        if (current && userAssign) {\n            //检测是不是往回跳转,重复处理\n            _controller.sceneController.checkToRepeat(seasonId);\n        }\n\n        //================加载新的场景=================\n\n        //读酷启动时不需要忙碌光标\n        if (window.DUKUCONFIG && options.main) {\n            _View.HideBusy();\n        } else {\n            _View.ShowBusy();\n        }\n\n        /**\r\n         * 跳出去\r\n         * $multiScenario\r\n         * 场景模式\r\n         * $multiScenario\r\n         *      true  多场景\r\n         *      false 单场景模式\r\n         * 如果当前是从主场景加载副场景\r\n         * 关闭系统工具栏\r\n         */\n        if (current && !current.vm.$multiScenario) {\n            _View.HideToolbar();\n        }\n\n        /**\r\n         * 重写场景的顺序编号\r\n         * 用于记录场景最后记录\r\n         */\n        var pageId;\n        if (current && (pageId = Xut.Presentation.GetPageId())) {\n            _controller.sceneController.rewrite(current.scenarioId, pageId);\n        }\n\n        /**\r\n         * 场景信息\r\n         * @type {[type]}\r\n         */\n        var sectionRang = Xut.data.query('sectionRelated', seasonId);\n        var barInfo = sectionRang.toolbar; //场景工具栏配置信息\n\n\n        var pageTotal = sectionRang.length;\n\n        //通过chapterId转化为实际页码指标\n        //season 2\n        //       {\n        //          chapterId : 1  => 0\n        //          chpaterId : 2  => 1\n        //       }\n        //\n        var parseInitIndex = function parseInitIndex() {\n            return chapterId ? function () {\n                //如果节点内部跳转方式加载,无需转化页码\n                if (createMode === 'GotoSlide') {\n                    return chapterId;\n                }\n                //初始页从0开始，减去下标1\n                return chapterId - sectionRang.start - 1;\n            }() : 0;\n        };\n\n        //如果启动了虚拟模式\n        if (_index.config.virtualMode) {\n            pageTotal = pageTotal * 2;\n        }\n\n        /**\r\n         * 传递的参数\r\n         * seasonId    节ID\r\n         * chapterId   页面ID\r\n         * pageIndex   指定页码\r\n         * isInApp     是否跳到收费提示页\r\n         * pageTotal   页面总数\r\n         * barInfo     工具栏配置文件\r\n         * history     历史记录\r\n         * sectionRang 节信息\r\n         * complete    构件完毕回调\r\n         * @type {Object}\r\n         */\n        var data = {\n            seasonId: seasonId,\n            chapterId: chapterId,\n            pageIndex: pageIndex || parseInitIndex(),\n            isInApp: isInApp,\n            pageTotal: pageTotal,\n            barInfo: barInfo,\n            history: options.history,\n            sectionRang: sectionRang,\n            //制作场景切换后处理\n            complete: function complete(nextBack) {\n                //销毁多余场景\n                current && current.destroy();\n                //下一个任务存在,执行切换回调后,在执行页面任务\n                nextBack && nextBack();\n                //去掉忙碌\n                _View.HideBusy();\n                //解锁回调\n                useUnlockCallBack && useUnlockCallBack();\n            }\n        };\n\n        //主场景判断（第一个节,因为工具栏的配置不同）\n        if (options.main || _controller.sceneController.mianId === seasonId) {\n            //清理缓存\n            (0, _index3._remove)(\"history\");\n            //确定主场景\n            _controller.sceneController.mianId = seasonId;\n            //是否主场景\n            data.isMain = true;\n        }\n        new _factory.SceneFactory(data);\n    }\n});\n\n/**\r\n * 行为\r\n * */\n(0, _index3._extend)(_View, {\n    /**\r\n     * 通过插件打开一个新view窗口\r\n     */\n    Open: function Open(pageUrl, width, height, left, top) {\n        Xut.Plugin.WebView.open(pageUrl, left, top, height, width, 1);\n    },\n\n\n    //关闭view窗口\n    Close: function Close() {\n        Xut.Plugin.WebView.close();\n    }\n});\n\n/**\r\n * content\r\n * */\n(0, _index3._extend)(Contents, {\n\n    //存在文档碎片\n    //针对音频字幕增加的快捷查找\n    contentsFragment: {},\n\n    /**\r\n     * 是否为canvas元素\r\n     * 用来判断事件冒泡\r\n     * 判断当前元素是否支持滑动\r\n     * 默认任何元素都支持滑动\r\n     * @type {Boolean}\r\n     */\n    Canvas: {\n\n        /**\r\n         * 是否允许滑动\r\n         * @type {Boolean}\r\n         */\n        SupportSwipe: true,\n\n        /**\r\n         * 对象是否滑动\r\n         * @type {Boolean}\r\n         */\n        isSwipe: false,\n\n        /**\r\n         * 对象是否点击\r\n         */\n        isTap: false,\n\n        /**\r\n         * 复位标记\r\n         */\n        Reset: function Reset() {\n            Contents.Canvas.SupportSwipe = true;\n            Contents.Canvas.isSwipe = false;\n        },\n\n\n        /**\r\n         * 判断是否可以滑动\r\n         * @return {[type]} [description]\r\n         */\n        getSupportState: function getSupportState() {\n            var state;\n            if (Contents.Canvas.SupportSwipe) {\n                state = true;\n            } else {\n                state = false;\n            }\n            //清空状态\n            Contents.Canvas.Reset();\n            return state;\n        },\n\n\n        /**\r\n         * 判断是否绑定了滑动事件\r\n         * @return {Boolean} [description]\r\n         */\n        getIsSwipe: function getIsSwipe() {\n            var state;\n            if (Contents.Canvas.isSwipe) {\n                state = true;\n            } else {\n                state = false;\n            }\n            //清空状态\n            Contents.Canvas.Reset();\n            return state;\n        },\n\n\n        /**\r\n         * 是否绑定了点击事件\r\n         */\n        getIsTap: function getIsTap() {\n            var state = Contents.Canvas.isTap;\n            Contents.Canvas.isTap = false;\n            return state;\n        }\n    },\n\n    /**\r\n     * 恢复节点的默认控制\r\n     * 默认是系统接管\r\n     * 如果'drag', 'dragTag', 'swipeleft', 'swiperight', 'swipeup', 'swipedown'等事件会重写\r\n     * 还需要考虑第三方调用，所以需要给一个重写的接口\r\n     * @return {[type]} [description]\r\n     * Content_1_3\r\n     * [Content_1_3,Content_1_4,Content_1_5]\r\n     */\n    ResetDefaultControl: function ResetDefaultControl(pageType, id, value) {\n        if (!id) return;\n        var elements;\n        var handle = function handle(ele) {\n            if (value) {\n                ele.attr('data-behavior', value);\n            } else {\n                ele.attr('data-behavior', 'disable');\n            }\n        };\n        if ((elements = Contents.Get(pageType, id)) && elements.$contentProcess) {\n            handle(elements.$contentProcess);\n        } else {\n            elements = $(\"#\" + id);\n            elements.length && handle(elements);\n        }\n    },\n\n\n    /**\r\n     * 针对SVG无节点操作\r\n     * 关闭控制\r\n     */\n    DisableControl: function DisableControl(callback) {\n        return {\n            behavior: 'data-behavior',\n            value: 'disable'\n        };\n    },\n\n\n    /**\r\n     * 针对SVG无节点操作\r\n     * 启动控制\r\n     */\n    EnableControl: function EnableControl(Value) {\n        return {\n            behavior: 'data-behavior',\n            value: Value || 'click-swipe'\n        };\n    }\n});\n\n(0, _index3._extend)(Application, {\n\n    /**\r\n     * 应用平台\r\n     * @type {[type]}\r\n     */\n    Platform: function () {\n        //平台缩写\n        var platformName = ['duku', 'pc', 'ios', 'android'];\n        if (window.GLOBALIFRAME) {\n            //嵌套iframe平台\n            return platformName[0];\n        } else {\n            if (_index.config.isBrowser) {\n                return platformName[1];\n            } else if (Xut.plat.isIOS) {\n                return platformName[2];\n            } else if (Xut.plat.isAndroid) {\n                return platformName[3];\n            }\n        }\n    }(),\n\n    /**\r\n     * 刷新页面\r\n     */\n    Resize: function Resize() {\n        //清理对象\n        _controller.sceneController.destroyAllScene();\n\n        //清理节点\n        $(\"#xut-scene-container\").empty();\n\n        //加载新的页面\n        var novelId,\n            pageIndex = getStorage('pageIndex');\n\n        //缓存加载\n        if (pageIndex !== undefined) {\n            novelId = getStorage(\"novelId\");\n            //加强判断\n            if (novelId) {\n                (0, _scene2.default)({\n                    \"novelId\": novelId,\n                    \"pageIndex\": pageIndex,\n                    'history': (0, _index3._get)('history')\n                });\n            }\n        }\n    },\n\n\n    /**\r\n     * 后台运行\r\n     * @type {Number}\r\n     */\n    backstage: 0,\n\n    /**\r\n     * home隐藏\r\n     * 后台运行的时候,恢复到初始化状态\r\n     * 用于进来的时候激活Activate\r\n     */\n    Original: function Original() {\n        Application.backstage = 1;\n\n        //传递一个完全关闭的参数\n        (0, _index2.suspend)('', '', true);\n        (0, _index2.original)();\n    },\n\n\n    /**\r\n     * home显示\r\n     * 后台弹回来\r\n     * 激活应用行为\r\n     */\n    Activate: function Activate() {\n        Application.backstage = 0;\n        (0, _index2.autoRun)();\n    },\n\n\n    /**\r\n     * 销毁应用\r\n     */\n    Destroy: function Destroy() {\n        (0, _globalDestroy2.default)();\n    },\n\n\n    /**\r\n     * 退出app\r\n     */\n    DropApp: function DropApp() {\n\n        /**\r\n         * 并且是安卓情况下\r\n         * 安卓销毁按键事件\r\n         * @return {[type]} [description]\r\n         */\n        var unEvent = function unEvent() {\n            if (Xut.plat.isAndroid) {\n                window.GLOBALCONTEXT.document.removeEventListener(\"backbutton\", _index.config._event.back, false);\n                window.GLOBALCONTEXT.document.removeEventListener(\"pause\", _index.config._event.pause, false);\n            }\n        };\n\n        /**\r\n         * iframe模式,退出处理\r\n         * @return {[type]} [description]\r\n         */\n        var destroy = function destroy() {\n            //销毁内存对象\n            Application.Destroy();\n            window.GLOBALCONTEXT = null;\n        };\n\n        /**\r\n         * 动态配置\r\n         * @param  {[type]} window.DYNAMICCONFIGT [description]\r\n         * @return {[type]}                       [description]\r\n         */\n        if (window.DYNAMICCONFIGT) {\n            unEvent();\n            destroy();\n            return;\n        }\n\n        //如果读酷\n        if (window.DUKUCONFIG) {\n            //外部回调通知\n            if (window.DUKUCONFIG.iframeDrop) {\n                var appId = (0, _index3._get)('appId');\n                window.DUKUCONFIG.iframeDrop(['appId-' + appId, 'novelId-' + appId, 'pageIndex-' + appId]);\n            }\n            window.DUKUCONFIG = null;\n            unEvent();\n            destroy();\n            return;\n        }\n\n        //客户端模式\n        if (window.CLIENTCONFIGT) {\n            //外部回调通知\n            if (window.CLIENTCONFIGT.iframeDrop) {\n                window.CLIENTCONFIGT.iframeDrop();\n            }\n            window.CLIENTCONFIGT = null;\n            unEvent();\n            destroy();\n            return;\n        }\n\n        //妙妙学客户端\n        if (window.MMXCONFIG) {\n            //外部回调通知\n            if (window.MMXCONFIG.iframeDrop) {\n                window.MMXCONFIG.iframeDrop();\n            }\n            window.MMXCONFIG = null;\n            destroy();\n            return;\n        }\n\n        //单应用dialogs\n        if (!plat.isBrowser) {\n            window.GLOBALCONTEXT.navigator.notification.confirm('您确认要退出吗？', function (button) {\n                if (1 == button) {\n                    window.GLOBALCONTEXT.navigator.app.exitApp();\n                }\n            }, '退出', '确定,取消');\n        }\n    },\n\n\n    /**\r\n     * 暂停应用\r\n     * skipMedia 跳过音频你处理(跨页面)\r\n     * dispose   成功处理回调\r\n     * processed 处理完毕回调\r\n     */\n    Suspend: function Suspend(opts) {\n        if ((0, _globalStop.suspendHandles)(opts.skipMedia)) {\n            //停止热点动作\n            if (opts.dispose) {\n                opts.dispose(_globalStop.promptMessage);\n            }\n        } else {\n            opts.processed && opts.processed();\n        }\n    },\n\n\n    /**\r\n     * 注册所有组件对象\r\n     * 2 widget 包括 视频 音频 Action 子文档 弹出口 类型\r\n     * 这种类型是冒泡处理，无法传递钩子，直接用这个接口与场景对接\r\n     * @param  {[type]} regData [description]\r\n     * @return {[type]}         [description]\r\n     */\n    injectionComponent: function injectionComponent(regData) {\n        var sceneObj = _controller.sceneController.containerObj('current');\n        sceneObj.vm.$injectionComponent = regData;\n    }\n});\n\n(0, _index3._extend)(Application, {\n\n    /**\r\n     * 启动应用\r\n     */\n    Launch: function Launch() {},\n\n\n    /**\r\n     * 应用加载状态\r\n     * false未加载\r\n     * true 已加载\r\n     * @type {Boolean}\r\n     */\n    appState: false,\n\n    /**\r\n     * 设置应用状态\r\n     */\n    setAppState: function setAppState() {\n        Application.appState = true;\n    },\n\n\n    /**\r\n     * 删除应用状态\r\n     * @return {[type]} [description]\r\n     */\n    delAppState: function delAppState() {\n        Application.appState = false;\n    },\n\n\n    /**\r\n     * 获取应用加载状态\r\n     * @return {[type]} [description]\r\n     */\n    getAppState: function getAppState() {\n        return Application.appState;\n    },\n\n\n    /**\r\n     * 延时APP运用\r\n     * 一般是在等待视频先加载完毕\r\n     * @return {[type]} [description]\r\n     */\n    delayAppRun: function delayAppRun() {\n        Application.setAppState();\n    },\n\n\n    /**\r\n     * 启动app\r\n     * 重载启动方法\r\n     * 如果调用在重载之前，就删除，\r\n     * 否则被启动方法重载\r\n     * @type {[type]}\r\n     */\n    LaunchApp: function LaunchApp() {\n        Application.delAppState();\n    },\n\n\n    /**\r\n     * 应用加载完毕\r\n     */\n    AddEventListener: function AddEventListener() {}\n});\n\n/**\r\n * u3d接口\r\n */\nXut.U3d = {\n    /**\r\n     * 跳转接口\r\n     * @param {[type]} seasonId  [description]\r\n     * @param {[type]} chapterId [description]\r\n     */\n    View: function View(seasonId, chapterId) {\n        _View.LoadScenario({\n            'scenarioId': seasonId,\n            'chapterId': chapterId\n        });\n    }\n};\n\n/**\r\n * 脚本注入接口\r\n * @type {Object}\r\n */\nwindow.XXTAPI = {\n\n    /**\r\n     *读取系统中保存的变量的值。\r\n     *如果变量不存在，则新建这个全局变量\r\n     *如果系统中没有保存的值，用默认值进行赋值\r\n     *这个函数，将是创建全局变量的默认函数。\r\n     */\n    ReadVar: function ReadVar(variable, defaultValue) {\n        var temp;\n        if (temp = (0, _index3._get)(variable)) {\n            return temp;\n        } else {\n            (0, _index3._set)(variable, defaultValue);\n            return defaultValue;\n        }\n    },\n\n\n    /**\r\n     * 将变量的值保存起来\r\n     */\n    SaveVar: function SaveVar(variable, value) {\n        (0, _index3._set)(variable, value);\n    },\n\n\n    /*\r\n     *对变量赋值，然后保存变量的值\r\n     *对于全局变量，这个函数将是主要使用的，替代简单的“=”赋值\r\n     */\n    SetVar: function SetVar(variable, value) {\n        (0, _index3._set)(variable, value);\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/global-api.js\n ** module id = 108\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = Destroy;\n\nvar _controller = require('./scenario/controller');\n\nvar _index = require('./toolbar/navbar/index');\n\nvar _manager = require('./component/audio/manager');\n\nvar _manager2 = require('./component/video/manager');\n\nvar _destroy = require('./database/destroy');\n\nvar _destroy2 = _interopRequireDefault(_destroy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 销毁接口\r\n */\nfunction Destroy() {\n    if (Xut.plat.isBrowser) {\n        //销毁桌面控制\n        $(document).off();\n    }\n\n    //DYNAMICCONFIGT模式销毁节点\n    if (window.DYNAMICCONFIGT) {\n        window.DYNAMICCONFIGT.removeNode();\n    }\n\n    //销毁所有场景\n    _controller.sceneController.destroyAllScene();\n\n    //删除数据库\n    (0, _destroy2.default)();\n\n    //导航\n    (0, _index.close)();\n\n    //音视频\n    (0, _manager.clearAudio)();\n    (0, _manager2.clearVideo)();\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/global-destroy.js\n ** module id = 109\n ** module chunks = 0\n **/","'use strict';\n\nvar _index = require('./config/index');\n\nvar _globalApi = require('./global-api');\n\nvar _manager = require('./component/audio/manager');\n\nvar _manager2 = require('./component/video/manager');\n\nvar _fix = require('./component/audio/fix');\n\nvar _cursor = require('./util/cursor');\n\nvar _nexttick = require('./nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nvar _index2 = require('./main/index');\n\nvar _index3 = _interopRequireDefault(_index2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//nextTick\n//Pre initialized\nXut.Version = 836;\n//A predictable state container for apps.\n// import store from './redex/store'\n\n\nif (Xut.plat.isBrowser) {\n    //Mobile browser automatically broadcast platform media processing\n    if (Xut.plat.noAutoPlayMedia) {\n        (0, _fix.fixAudio)();\n    }\n\n    //Desktop binding mouse control\n    $(document).keyup(function (event) {\n        switch (event.keyCode) {\n            case 37:\n                Xut.View.GotoPrevSlide();\n                break;\n            case 39:\n                Xut.View.GotoNextSlide();\n                break;\n        }\n    });\n}\n\nXut.Application.Launch = function () {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var el = _ref.el;\n    var paths = _ref.paths;\n    var cursor = _ref.cursor;\n\n\n    /**\r\n     * add dynamic config\r\n     * @type {Object}\r\n     */\n    window.DYNAMICCONFIGT = {\n        resource: paths.resource,\n        database: paths.database\n    };\n\n    var busyIcon = '<div id=\"xut-busyIcon\" class=\"xut-busy-wrap xut-fullScreen\"></div>';\n\n    //disable cursor\n    if (!cursor) {\n        (0, _cursor.disable)(true);\n        busyIcon = '';\n    }\n\n    var $html = $('\\n    ' + busyIcon + '\\n    <div class=\"xut-removelayer\"></div>\\n    <div class=\"xut-startupPage xut-fullScreen\"></div>\\n    <div id=\"xut-scene-container\" class=\"xut-chapter xut-fullScreen xut-overflow\"></div>');\n\n    var $el = $(el);\n    $el.css('z-index', 99999);\n\n    window.DYNAMICCONFIGT.removeNode = function () {\n        $html.remove();\n        $html = null;\n        $el = null;\n    };\n\n    (0, _nexttick2.default)({\n        container: $el,\n        content: $html\n    }, _index3.default);\n};\n\nvar createMain = function createMain() {\n    var rootNode = $(\"#xxtppt-app-container\");\n    var nodeHhtml = '<div id=\"xxtppt-app-container\" class=\"xut-chapter xut-fullScreen xut-overflow\"></div>';\n    var tempHtml = '<div id=\"xut-busyIcon\" class=\"xut-busy-wrap xut-fullScreen\"></div>\\n                    <div class=\"xut-removelayer\"></div>\\n                    <div class=\"xut-startupPage xut-fullScreen\"></div>\\n                    <div id=\"xut-scene-container\" class=\"xut-chapter xut-fullScreen xut-overflow\"></div>';\n\n    var $html = void 0;\n    if (rootNode.length) {\n        $html = $(tempHtml);\n    } else {\n        rootNode = $('body');\n        $html = $('<div id=\"xxtppt-app-container\" class=\"xut-chapter xut-fullScreen xut-overflow\">' + tempHtml + '</div>');\n    }\n    (0, _nexttick2.default)({\n        container: rootNode,\n        content: $html\n    }, function () {\n        (0, _index3.default)();\n    });\n};\n\nsetTimeout(function () {\n    //External interface call\n    if (!Xut.Application.supportLaunch) {\n        Xut.Application.Launch = function () {};\n        $(\"#xxtppt-app-container\").remove();\n        (0, _index3.default)();\n    }\n}, 0);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/index.js\n ** module id = 110\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = button;\n\nvar _video = require('./video');\n\n/**\r\n * 退出加锁,防止过快点击\r\n * @type {Boolean}\r\n */\nvar outLock = false;\n\n/**\r\n * 回退按钮状态控制器\r\n * @param  {[type]} state [description]\r\n * @return {[type]}       [description]\r\n */\nvar controller = function controller(state) {\n    //如果是子文档处理\n    if (Xut.isRunSubDoc) {\n        //通过Action动作激活的,需要到Action类中处理\n        Xut.publish('subdoc:dropApp');\n        return;\n    }\n\n    //正常逻辑\n    outLock = true;\n\n    Xut.Application.Suspend({\n\n        /**\r\n         * 停止热点动作\r\n         * @return {[type]} [description]\r\n         */\n        dispose: function dispose() {\n            setTimeout(function () {\n                outLock = false;\n            }, 100);\n        },\n\n\n        /**\r\n         * 退出应用\r\n         * @return {[type]} [description]\r\n         */\n        processed: function processed() {\n            state === 'back' && Xut.Application.DropApp();\n        }\n    });\n};\n\n/**\r\n * 绑定控制案例事件\r\n * @param  {[type]} config [description]\r\n * @return {[type]}        [description]\r\n */\nfunction button(config) {\n    /**\r\n     * 存放绑定事件\r\n     * @type {Object}\r\n     */\n    config._event = {\n\n        /**\r\n         * 回退键\r\n         * @return {[type]} [description]\r\n         */\n        back: function back() {\n            //如果是预加载视频\n            if ((0, _video.getPlugVideoState)()) {\n                (0, _video.closePlugVideo)();\n            } else {\n                controller('back');\n            }\n        },\n\n\n        /**\r\n         * 暂停键\r\n         * @return {[type]} [description]\r\n         */\n        pause: function pause() {\n            controller('pause');\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/button.js\n ** module id = 111\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (callback) {\n    supportTransaction(function () {\n        return setStore(callback);\n    });\n};\n\nvar _index = require('../database/index');\n\nvar _filter = require('../component/activity/filter');\n\nvar _index2 = require('../config/index');\n\nvar _index3 = require('../util/index');\n\n/**\r\n * 新增模式,用于记录浏览器退出记录\r\n * 默认启动\r\n * 是否回到退出的页面\r\n * set表中写一个recordHistory\r\n * 是   1\r\n * 否   0\r\n * [description]\r\n * @param  {[type]} data [description]\r\n * @return {[type]}      [description]\r\n */\nvar cfgHistory = function cfgHistory(data) {\n\n    var recordHistory = 1; //默认启动\n    if (data.recordHistory !== undefined) {\n        recordHistory = Number(data.recordHistory);\n    }\n\n    //如果启动桌面调试模式\n    //自动打开缓存加载\n    if (!recordHistory && _index2.config.isBrowser && _index2.config.debugMode) {\n        recordHistory = 1;\n    }\n\n    _index2.config.recordHistory = recordHistory;\n};\n\n/**\r\n * 默认工具栏配置\r\n * @type {Object}\r\n */\nvar defaults = {\n    ToolbarPos: 0, //工具栏[0顶部,1底部]\n    NavbarPos: 1, //左右翻页按钮[0顶部, 1中间, 2底部]\n    HomeBut: 1, //主页按钮[0不显示,1显示]\n    ContentBut: 1, //目录按钮[0不显示,1显示]\n    PageBut: 1, //页码按钮[0不显示,1显示]\n    NavLeft: 1, //左翻页按钮[0不显示,1显示]\n    NavRight: 1, //右翻页按钮[0不显示,1显示]\n    customButton: 0, //自定义翻页按钮\n    CloseBut: window.SUbDOCCONTEXT ? 1 : 0 //关闭按钮[0不显示,1显示]\n};\n\n/**\r\n * 配置默认数据\r\n * @return {[type]} [description]\r\n */\nvar initDefaults = function initDefaults(SettData) {\n    var rs = void 0;\n    var data = {};\n    var setConfig = {};\n\n    _.each(SettData, function (key, index) {\n        rs = SettData.item(index);\n        data[rs.name] = rs.value;\n    });\n\n    _.defaults(data, defaults);\n\n    for (var i in defaults) {\n        setConfig[i] = Number(data[i]);\n    }\n\n    _index2.config.settings = setConfig;\n    _index2.config.appId = data.appId; //应用配置唯一标示符\n    _index2.config.shortName = data.shortName;\n    _index2.config.Inapp = data.Inapp; //是否为应用内购买\n\n    //应用的唯一标识符\n    //生成时间+appid\n    _index2.config.appUUID = data.adUpdateTime ? data.appId + '-' + /\\S*/.exec(data.adUpdateTime)[0] : data.adUpdateTime;\n\n    //缓存应用ID\n    (0, _index3._set)({\n        'appId': data.appId\n    });\n\n    //新增模式,用于记录浏览器退出记录\n    cfgHistory(data);\n\n    //广告Id\n    //2014.9.2\n    Xut.Presentation.AdsId = data.adsId;\n\n    //2015.2.26\n    //启动画轴模式\n    //防止是布尔0成立\n    if (data.scrollPaintingMode && data.scrollPaintingMode == 1) {\n        _index2.config.scrollPaintingMode = true;\n    }\n\n    //假如启用了画轴模式，看看是不是竖版的情况，需要切半模版virtualMode\n    if (_index2.config.scrollPaintingMode) {\n        if (_index2.config.screenSize.width < _index2.config.screenSize.height) {\n            _index2.config.virtualMode = true;\n        }\n    }\n\n    //创建过滤器\n    Xut.CreateFilter = (0, _filter.contentFilter)('createFilter');\n    Xut.TransformFilter = (0, _filter.contentFilter)('transformFilter');\n};\n\n/**\r\n * 根据set表初始化数据\r\n * @return {[type]} [description]\r\n */\nvar setStore = function setStore(callback) {\n    (0, _index.createStore)(function (dataRet) {\n        var novelData = dataRet.Novel.item(0);\n        initDefaults(dataRet.Setting);\n        callback(novelData);\n    });\n};\n\n/**\r\n * 数据库支持\r\n * @return {[type]} [description]\r\n */\nvar supportTransaction = function supportTransaction(callback) {\n    if (window.openDatabase) {\n        try {\n            //数据库链接对象\n            Xut.config.db = window.openDatabase(_index2.config.dbName, \"1.0\", \"Xxtebook Database\", _index2.config.dbSize);\n        } catch (err) {\n            console.log('window.openDatabase出错');\n        }\n    }\n    //如果读不出数据\n    if (Xut.config.db) {\n        Xut.config.db.transaction(function (tx) {\n            tx.executeSql('SELECT * FROM Novel', [], function (tx, rs) {\n                callback();\n            }, function () {\n                Xut.config.db = null;\n                callback();\n            });\n        });\n    } else {\n        callback();\n    }\n};\n\n/**\r\n * 初始化\r\n * 数据结构\r\n */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/data.js\n ** module id = 112\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = dynamic;\n\nvar _cursor = require('../util/cursor');\n\nvar _layout = require('../component/flow/layout');\n\nvar _results = require('../database/results');\n\nvar _index = require('../util/index');\n\nvar _index2 = require('../config/index');\n\nvar _data = require('./data');\n\nvar _data2 = _interopRequireDefault(_data);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 加载css\r\n * @return {[type]} [description]\r\n */\nvar loadStyle = function loadStyle(callback) {\n\n    var svgsheet = window.DYNAMICCONFIGT ? window.DYNAMICCONFIGT.resource + '/gallery/svgsheet.css' : 'content/gallery/svgsheet.css';\n\n    //加载横版或者竖版css\n    //nodeBuildMode 是node build下的test.html文件\n    //加载build/*.css压缩文件\n    //否则就是默认的css/*.css\n    var baseCss = window.nodeBuildMode ? window.nodeBuildMode.csspath : './css/' + _index2.config.layoutMode + '.css';\n    var cssArr = [baseCss, svgsheet];\n\n    //是否需要加载svg\n    //如果是ibooks模式\n    //并且没有svg\n    //兼容安卓2.x\n    if (Xut.IBooks.Enabled && !Xut.IBooks.existSvg) {\n        cssArr = [baseCss];\n    }\n\n    _index.loader.load(cssArr, callback, null, true);\n};\n\n/**\r\n * 修正尺寸\r\n * 修正实际分辨率\r\n * @return {[type]} [description]\r\n */\nvar fixedSize = function fixedSize(novelData) {\n    if (novelData) {\n        if (novelData.pptWidth || novelData.pptHeight) {\n            (0, _index2.fixProportion)(novelData.pptWidth, novelData.pptHeight);\n        }\n    }\n};\n\n/**\r\n * 动态代码变动区域\r\n */\nfunction dynamic(callback) {\n    //导入数据缓存\n    (0, _results.importResults)(function () {\n        //初始化数据库设置\n        (0, _data2.default)(function (novelData) {\n\n            //重置数据API接口\n            (0, _index2.resetDataAPI)();\n\n            //跟字体大小\n            (0, _index.setRootfont)();\n\n            //创建忙碌光标\n            if (!Xut.IBooks.Enabled) {\n                (0, _cursor.createCursor)();\n            }\n\n            //修复地址配置\n            (0, _index2.fixResourcesPath)();\n\n            // ppt尺寸修正\n            fixedSize(novelData);\n\n            //flows排版\n            //嵌入index\n            (0, _layout.initFlows)();\n            //iframe要要Xut.config\n            loadStyle(function () {\n                return callback(novelData);\n            });\n        });\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/dynamic.js\n ** module id = 113\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = init;\n\nvar _index = require('../config/index');\n\nvar _video = require('./video');\n\nvar _dynamic = require('./dynamic');\n\nvar _dynamic2 = _interopRequireDefault(_dynamic);\n\nvar _button = require('./button');\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _scene = require('./scene');\n\nvar _scene2 = _interopRequireDefault(_scene);\n\nvar _index2 = require('../util/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getCache = function getCache(name) {\n    return parseInt((0, _index2._get)(name));\n};\n\n/**\r\n * 进入主页面\r\n * @return {[type]} [description]\r\n */\nvar initMain = function initMain(novelData) {\n\n    var novelId = void 0;\n    var parameter = void 0;\n    var pageIndex = getCache('pageIndex');\n    var pageFlip = getCache('pageFlip') || 0;\n\n    /**\r\n     * IBOOS模式\r\n     */\n    if (Xut.IBooks.Enabled) {\n        //删除背景图\n        $(\".xut-removelayer\").remove();\n        (0, _scene2.default)({\n            \"pageIndex\": Xut.IBooks.CONFIG.pageIndex\n        });\n        return;\n    }\n\n    /**\r\n     * 多模式判断\r\n     * 全局翻页模式\r\n     * 0 滑动翻页\r\n     * 1 直接换\r\n     * 所以pageFlip只有在左面的情况下\r\n     */\n    if (parameter = novelData.parameter) {\n        //拿出pageflip的值\n        parameter = (0, _index2.parseJSON)(parameter);\n        //获取pageflip的值得\n        //pageflip用来标\n        //不能翻页\n        //直接切换模式\n        pageFlip = parameter.pageflip;\n        if (pageFlip !== undefined) {\n            (0, _index2._set)({ 'pageFlip': pageFlip });\n        }\n    }\n\n    /**\r\n     * 缓存加载\r\n     * 如果启动recordHistory记录\r\n     * [if description]\r\n     */\n    if (_index.config.recordHistory && pageIndex !== undefined) {\n        //加强判断\n        if (novelId = getCache(\"novelId\")) {\n            return (0, _scene2.default)({\n                'pageFlip': pageFlip,\n                \"novelId\": novelId,\n                \"pageIndex\": pageIndex,\n                'history': (0, _index2._get)('history')\n            });\n        }\n    }\n\n    //第一次加载\n    //没有缓存\n    (0, _scene2.default)({\n        \"novelId\": novelData._id,\n        \"pageIndex\": 0,\n        'pageFlip': pageFlip\n    });\n};\n\n/**\r\n * 加载app应用\r\n * @param  {[type]} config [description]\r\n * @return {[type]}        [description]\r\n */\nvar initApp = function initApp() {\n    return (0, _dynamic2.default)(initMain);\n};\n\n/**\r\n * 如果是安卓桌面端\r\n * 绑定事件\r\n * @return {[type]} [description]\r\n */\nvar operation = function operation() {\n    //安卓上\n    if (Xut.plat.isAndroid) {\n        //预加载处理视频\n        //妙妙学不加载视频\n        //读库不加载视频\n        if (!window.MMXCONFIG && !window.DUKUCONFIG) {\n            (0, _video.plugVideo)();\n        }\n\n        //不是子文档指定绑定按键\n        if (!window.SUbCONFIGT) {\n            Xut.Application.AddEventListener = function () {\n                window.GLOBALCONTEXT.document.addEventListener(\"backbutton\", _index.config._event.back, false);\n                window.GLOBALCONTEXT.document.addEventListener(\"pause\", _index.config._event.pause, false);\n            };\n        }\n    }\n\n    if (window.DUKUCONFIG) {\n        PMS.bind(\"MagazineExit\", function () {\n            PMS.unbind();\n            Xut.Application.DropApp();\n        }, \"*\");\n    }\n\n    initApp();\n};\n\nfunction init() {\n\n    //安卓按键\n    (0, _button2.default)(_index.config);\n\n    //如果不是读库模式\n    //播放HTML5视频\n    //在IOS\n    if (!window.DUKUCONFIG && !window.GLOBALIFRAME && Xut.plat.isIOS) {\n        (0, _video.html5Video)();\n    }\n\n    //Ifarme嵌套处理\n    //1 新阅读\n    //2 子文档\n    //3 pc\n    //4 ios/android\n    if (window.GLOBALIFRAME) {\n        operation();\n    } else {\n        //brower or mobile(apk or ipa)\n        if (_index.config.isBrowser) {\n            initApp();\n        } else {\n            window.openDatabase(_index.config.dbName, \"1.0\", \"Xxtebook Database\", _index.config.dbSize);\n            document.addEventListener(\"deviceready\", function () {\n                Xut.Plugin.XXTEbookInit.startup(_index.config.dbName, operation, function () {});\n            }, false);\n        }\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/main/index.js\n ** module id = 114\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Dispatch = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*********************************************************************\r\n调度器 生成页面模块\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *\r\n处理：事件动作分派\r\n调度：\r\nageMgr     模块\r\nasterMgr 模块\r\nr\nn\n\nvar _stroage = require('../../util/stroage');\n\nvar _page = require('../page');\n\nvar _page2 = _interopRequireDefault(_page);\n\nvar _master = require('../master');\n\nvar _master2 = _interopRequireDefault(_master);\n\nvar _switch = require('./switch');\n\nvar _switch2 = _interopRequireDefault(_switch);\n\nvar _controller = require('../../scenario/controller');\n\nvar _index = require('../../toolbar/navbar/index');\n\nvar _depend = require('./depend');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Dispatch = exports.Dispatch = function () {\n    function Dispatch(vm) {\n        _classCallCheck(this, Dispatch);\n\n        this.vm = vm;\n\n        this.options = vm.options;\n\n        /**\r\n         * 创建前景页面管理模块\r\n         * @type {PageMgr}\r\n         */\n        this.pageMgr = new _page2.default(vm);\n\n        /**\r\n         * 检测是否需要创母版模块\r\n         * @return {[type]} [description]\r\n         */\n        if ((0, _depend.checkMasterCreate)()) {\n            this.masterMgr = new _master2.default(vm);\n        }\n    }\n\n    /**\r\n     * 初始化页面创建\r\n     * 因为多个页面的问题，所以不是创建调用\r\n     * 统一回调\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Dispatch, [{\n        key: 'initCreate',\n        value: function initCreate() {\n            var options = this.options;\n\n            //createPointer,\n            //initPointer\n            var pointer = (0, _depend.initPointer)(options.initIndex, options.pagetotal, options.multiplePages);\n\n            this.pagePointer = pointer.initPointer;\n\n            //始化构建页面\n            this.create(pointer.createPointer, options.initIndex, 'init');\n        }\n\n        /**\r\n         *  创建普通页面\r\n         *  创建母版页面\r\n         *  createPointer  需要创建的页面索引\r\n         *  visiblePage       当前可视区页面索引\r\n         *  action         toPage/init/flipOver\r\n         *  toPageCallback 跳转页面支持回调通知\r\n         *  userStyle      规定创建的style属性\r\n         **/\n\n    }, {\n        key: 'create',\n        value: function create(createPage, visiblePage, action, toPageCallback, userStyle) {\n\n            //2016.1.20\n            //修正苗苗学问题 确保createPage不是undefined\n            if (undefined === createPage[0]) {\n                return;\n            }\n\n            var virtualMode = Xut.config.virtualMode,\n                self = this,\n                multiplePages = this.options.multiplePages,\n                //是否线性\n            total = createPage.length,\n                toPageAction = action === 'toPage',\n                //如果是跳转\n            filpOverAction = action === 'flipOver',\n                //如果是翻页\n\n            //使用第一个是分解可见页面\n            //将页码pageIndex转化成对应的chapter\n            createPids = _depend.conversionCid.call(this, createPage, visiblePage),\n\n\n            //收集创建的页面对象\n            //用于处理2个页面在切换的时候闪屏问题\n            //主要是传递createStyle自定义样式的处理\n            collectCreatePageBase = [],\n\n\n            //是否触发母版的自动时间\n            //因为页面每次翻页都会驱动auto事件\n            //但是母版可能是共享的\n            createMaster = false,\n\n\n            //收集完成回调\n            collectCallback = function () {\n                //收集创建页码的数量\n                var createContent = 0;\n                return function (callback) {\n                    ++createContent;\n                    if (createContent === total) {\n                        callback();\n                    }\n                };\n            }(),\n\n\n            //构建执行代码\n            callbackAction = {\n                //初始化\n                init: function init() {\n                    collectCallback(function () {\n                        self._loadPage('init');\n                    });\n                },\n\n                //翻页\n                flipOver: function flipOver() {\n                    collectCallback(function () {\n                        self.autoRun({ //翻页\n                            'createPointer': createPids,\n                            'createMaster': createMaster\n                        });\n                    });\n                },\n\n                //跳转\n                toPage: function toPage() {\n                    collectCallback(function () {\n                        toPageCallback(collectCreatePageBase);\n                    });\n                }\n            };\n\n            //pid=>chpterData\n            var results = (0, _depend.conversionPids)(createPids);\n\n            //如果是最后一页\n            //没有对应的虚拟数据，取前一页的\n            if (virtualMode && !results.length) {\n                (function () {\n                    var virtualPid = _.extend([], createPids);\n                    createPids.forEach(function (pid, index) {\n                        virtualPid.splice(index, 1, --pid);\n                    });\n                    results = (0, _depend.conversionPids)(virtualPid);\n                })();\n            }\n\n            //页码转成数据\n            _.each(results, function (chapterData, index) {\n\n                //转化值\n                //chapterId => createPid\n                var createPid = createPids[index];\n\n                //createPid\n                //pageIndex\n                var conversion = _depend.conversionPageOpts.call(self, createPid, visiblePage);\n                var visiblePid = conversion.visiblePid;\n                var pageIndex = conversion.pageIndex;\n\n                ////////////////\n                // 如果启动了虚拟页面模式 //\n                ////////////////\n                var virtualPid = false; //虚拟页面的pid编号\n                var virtualOffset = false; //页面坐标left,right\n                if (virtualMode) {\n                    //页面位置\n                    virtualOffset = (0, _depend.offsetPage)(pageIndex);\n\n                    //获取新的chpater数据\n                    var fixCids = function fixCids(originalIndex) {\n                        var originalPid = _depend.conversionCid.call(self, [originalIndex]);\n                        return (0, _depend.conversionPids)([originalPid])[0];\n                    };\n\n                    ////////////\n                    //如果是翻页创建 //\n                    //由于是拼接的所以chapter移位了\n                    ////////////\n                    if (virtualOffset === 'left') {\n                        chapterData = fixCids(pageIndex / 2);\n                    }\n                    //修正右边chapter\n                    if (virtualOffset === 'right') {\n                        chapterData = fixCids((pageIndex - 1) / 2);\n                    }\n                }\n\n                if (total === 1) {\n                    self.options.chapterId = chapterData._id;\n                }\n\n                /**\r\n                 * 构件新的页面\r\n                 * masterFilter 母板过滤器回调函数\r\n                 * @param  {[type]} masterFilter [description]\r\n                 * @return {[type]}              [description]\r\n                 */\n                var createMgr = function createMgr(masterFilter) {\n\n                    //跳转的时候，创建新页面可以自动样式信息\n                    //优化设置，只是改变当前页面即可\n                    if (toPageAction && visiblePid !== createPid) {\n                        userStyle = undefined;\n                    }\n\n                    var dataOpts = {\n                        'pageIndex': pageIndex,\n                        'multiplePages': multiplePages,\n                        'pid': createPid, //页码chapterId\n                        'chapterDas': chapterData, //当前页面的chpater数据\n                        'visiblePid': visiblePid, //实际中页面显示的索引\n                        'userStyle': userStyle,\n                        'virtualPid': virtualPid, //pid\n                        'virtualOffset': virtualOffset //虚拟页面位置\n                    };\n\n                    //初始化构建页面对象\n                    //page\n                    //master\n                    var pageBase = this.create(dataOpts, pageIndex, masterFilter);\n\n                    //构建页面对象后\n                    //开始执行\n                    if (pageBase) {\n                        //开始线程任务\n                        //当为滑动模式,支持快速创建\n                        pageBase.startThreadTask(filpOverAction, function () {\n                            return callbackAction[action]();\n                        });\n\n                        //收集自定义样式的页面对象\n                        if (userStyle) {\n                            collectCreatePageBase.push(pageBase);\n                        }\n                    }\n                };\n\n                //母版层\n                if (chapterData.pptMaster && self.masterMgr) {\n                    createMgr.call(self.masterMgr, function () {\n                        //母版是否创建等待通知\n                        //母版是共享的所以不一定每次翻页都会创建\n                        //如果需要创建,则叠加总数\n                        ++total;\n                        createMaster = true;\n                    });\n                }\n\n                //页面层\n                createMgr.call(self.pageMgr);\n            });\n        }\n\n        /**\r\n         * 自动运行处理\r\n         *  流程四:执行自动触发动作\r\n         *   1.初始化创建页面完毕\r\n         *   2.翻页完毕\r\n         */\n\n    }, {\n        key: 'autoRun',\n        value: function autoRun(para) {\n            var options = this.options,\n                pagePointer = this.pagePointer,\n                prevIndex = pagePointer.leftIndex,\n                currIndex = pagePointer.currIndex,\n                nextIndex = pagePointer.rightIndex,\n                action = para ? para.action : '',\n                createPointer = para ? para.createPointer : '',\n                direction = this.direction,\n\n            //暂停的页面索引autorun\n            suspendIndex = action === 'init' ? '' : direction === 'next' ? prevIndex : nextIndex;\n\n            /**\r\n             * 存在2中模式的情况下\r\n             * 转化页码标记\r\n             */\n            if (createPointer) {\n                createPointer = _depend.conversionPageOpts.call(this, createPointer);\n            }\n\n            var data = {\n                'prevIndex': prevIndex,\n                'currIndex': currIndex,\n                'nextIndex': nextIndex,\n                'suspendIndex': suspendIndex,\n                'createPointer': createPointer,\n                'direction': direction,\n                'isQuickTurn': this.isQuickTurn,\n                //中断通知\n                'suspendCallback': options.suspendAutoCallback,\n                //构建完毕通知\n                'buildComplete': function buildComplete(scenarioId) {\n                    //==========================================\n                    //\n                    //      构建完成通知,用于处理历史缓存记录\n                    //      如果是调试模式\n                    //      && 不是收费提示页面\n                    //      && 多场景应用\n                    //\n                    //==========================================\n                    if (Xut.config.recordHistory && !options.isInApp && options.multiScenario) {\n                        var history;\n                        if (history = _controller.sceneController.sequence(scenarioId, currIndex)) {\n                            (0, _stroage._set)(\"history\", history);\n                        }\n                    }\n                },\n\n\n                //流程结束通知\n                //包括动画都已经结束了\n                'processComplete': function processComplete() {}\n            };\n\n            //页面自动运行\n            this.pageMgr.autoRun(data);\n\n            //模板自动运行\n            this.masterContext(function () {\n                //如果动作是初始化，或者触发了母版自动运行\n                //如果是越界处理\n                //console.log(action,this.isBoundary,para.createMaster)\n                if (action || this.isBoundary) {\n                    this.autoRun(data);\n                }\n            });\n\n            /**\r\n             * 触发自动通知\r\n             * @type {[type]}\r\n             */\n            var vm = this.vm;\n\n            switch (action) {\n                case 'init':\n                    //更新页码标示\n                    vm.$emit('change:pageUpdate', currIndex);\n                    resetToolbar.call(this);\n                    setTimeout(function () {\n                        $(\".xut-startupPage\").hide().remove();\n                        $(\".xut-removelayer\").hide().remove();\n                    }, 0);\n                    break;\n                case 'toPage':\n                    //更新页码标示\n                    vm.$emit('change:pageUpdate', currIndex);\n                    resetToolbar.call(this);\n                    break;\n            }\n\n            /**\r\n             * 初始化与跳转针对翻页案例的设置逻辑\r\n             * @return {[type]} [description]\r\n             */\n            function resetToolbar() {\n                //不显示首尾对应的按钮\n                if (currIndex == 0) {\n                    vm.$emit('change:hidePrev');\n                } else if (currIndex == options.pagetotal - 1) {\n                    vm.$emit('change:hideNext');\n                    vm.$emit('change:showPrev');\n                } else {\n                    vm.$emit('change:showNext');\n                    vm.$emit('change:showPrev');\n                }\n            }\n\n            /**\r\n             * 线性结构\r\n             * 保存目录索引\r\n             */\n            if (!options.multiScenario) {\n                (0, _stroage._set)(\"pageIndex\", currIndex);\n            }\n\n            /**\r\n             * 解锁翻页\r\n             * 允许继续执行下一个翻页作用\r\n             */\n            if (this.unfliplock) {\n                this.unfliplock();\n                this.unfliplock = null;\n            }\n\n            //关闭快速翻页\n            this.isQuickTurn = false;\n        }\n\n        /**\r\n         * 滑动处理\r\n         *  1 滑动\r\n         *  2 反弹\r\n         *  3 翻页\r\n         */\n\n    }, {\n        key: 'move',\n        value: function move() {\n            var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n            var action = _ref.action;\n            var speed = _ref.speed;\n            var distance = _ref.distance;\n            var leftIndex = _ref.leftIndex;\n            var pageIndex = _ref.pageIndex;\n            var rightIndex = _ref.rightIndex;\n            var direction = _ref.direction;\n\n\n            var currIndex = pageIndex;\n\n            //用户强制直接切换模式\n            //禁止页面跟随滑动\n            if (this.options.pageFlip && action == 'flipMove') {\n                return;\n            }\n\n            //移动的距离\n            var moveDistance = (0, _depend.calculateDistance)(action, distance, direction);\n\n            //视觉差页面滑动\n            var currObj = this.pageMgr.abstractGetPageObj(currIndex);\n\n            // if(!currObj) return\n            var chapterData = currObj.chapterDas;\n            var nodes = void 0;\n            if (chapterData && chapterData.nodes) {\n                nodes = chapterData.nodes;\n            }\n\n            //通知page模块\n            this.pageMgr.move(leftIndex, currIndex, rightIndex, direction, speed, action, moveDistance);\n\n            //通知视觉差模块\n            this.masterContext(function () {\n                this.move(leftIndex, currIndex, rightIndex, direction, moveDistance, action, speed, nodes);\n            });\n\n            //更新页码标示\n            'flipOver' === action && setTimeout(function () {\n                this.vm.$emit('change:pageUpdate', direction === 'next' ? rightIndex : leftIndex);\n            }.bind(this), 0);\n        }\n\n        /**\r\n         * 翻页松手后\r\n         * 暂停页面的各种活动动作\r\n         * @param  {[type]} pointers [description]\r\n         * @return {[type]}          [description]\r\n         */\n\n    }, {\n        key: 'suspend',\n        value: function suspend(pointers) {\n            //关闭层事件\n            this.pageMgr.suspend(pointers);\n            this.masterContext(function () {\n                this.suspend(pointers);\n            });\n\n            //目录栏\n            (0, _index.close)();\n            //复位工具栏\n            this.vm.$emit('change:resetToolbar');\n        }\n\n        /**\r\n         * 翻页动画完毕后\r\n         * @return {[type]}              [description]\r\n         */\n\n    }, {\n        key: 'complete',\n        value: function complete(direction, pagePointer, unfliplock, isQuickTurn) {\n            //方向\n            this.direction = direction;\n            //是否快速翻页\n            this.isQuickTurn = isQuickTurn || false;\n            //解锁\n            this.unfliplock = unfliplock;\n            //清理上一个页面\n            this._clearPage(pagePointer.destroyPointer);\n            this._updatePointer(pagePointer);\n            //预创建下一页\n            this._advanceCreate(direction, pagePointer);\n        }\n\n        /**\r\n         * 页面跳转切换处\r\n         * @param  {[type]} data [description]\r\n         * @return {[type]}      [description]\r\n         */\n\n    }, {\n        key: 'jumpPage',\n        value: function jumpPage(data) {\n\n            Xut.View.ShowBusy();\n\n            //如果是非线性,创建页面修改\n            if (!this.options.multiplePages) {\n                data.create = [data.targetIndex];\n                data.destroy = [data.currIndex];\n                data.ruleOut = [data.targetIndex];\n                data.pagePointer = {\n                    currIndex: data.targetIndex\n                };\n            }\n\n            //执行页面切换\n            (0, _switch2.default)(this, data, function (data) {\n                this._updatePointer(data.pagePointer);\n                this.autoRun({\n                    'action': 'toPage',\n                    'createPointer': data['create']\n                });\n                Xut.View.HideBusy();\n            });\n        }\n\n        /**\r\n         * 调用母版管理器\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'masterContext',\n        value: function masterContext(callback) {\n            if (this.masterMgr) {\n                callback.call(this.masterMgr);\n            }\n        }\n\n        /**\r\n         * 销毁接口\r\n         * 对应多场景操作\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.pageMgr.destroy();\n            this.masterContext(function () {\n                this.destroy();\n            });\n        }\n\n        /**\r\n         * 清理页面结构\r\n         * @param  {[type]} clearPageIndex [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_clearPage',\n        value: function _clearPage(clearPageIndex) {\n            this.pageMgr.clearPage(clearPageIndex);\n        }\n\n        /**\r\n         * 更新页码索引标示\r\n         * @param  {[type]} pagePointer [description]\r\n         * @return {[type]}             [description]\r\n         */\n\n    }, {\n        key: '_updatePointer',\n        value: function _updatePointer(pagePointer) {\n            this.pagePointer = pagePointer;\n        }\n\n        /**\r\n         * 预创建新页面\r\n         * @param  {[type]} direction   [description]\r\n         * @param  {[type]} pagePointer [description]\r\n         * @return {[type]}             [description]\r\n         */\n\n    }, {\n        key: '_advanceCreate',\n        value: function _advanceCreate(direction, pagePointer) {\n            var pagetotal = this.options.pagetotal,\n                vm = this.vm,\n                createPointer = pagePointer.createPointer,\n                destroyPointer = pagePointer.destroyPointer,\n\n            //清理页码\n            clear = function clear() {\n                delete pagePointer.createPointer;\n                delete pagePointer.destroyPointer;\n            },\n\n            //创建新的页面对象\n            createNextContainer = function createNextContainer(createPointer, currIndex) {\n                this.create([createPointer], currIndex, 'flipOver');\n            };\n\n            //如果是右边翻页\n            if (direction === 'next') {\n                //首尾无须创建页面\n                if (pagePointer.currIndex === pagetotal - 1) {\n                    this.autoRun();\n                    //如果总数只有2页，那么首页的按钮是关闭的，需要显示\n                    if (pagetotal == 2) {\n                        vm.$emit('change:showPrev');\n                    }\n                    //多页处理\n                    vm.$emit('change:hideNext');\n                    return;\n                }\n                if (createPointer < pagetotal) {\n                    //创建的页面\n                    createNextContainer.call(this, createPointer, pagePointer.currIndex);\n                    clear();\n                    vm.$emit('change:showPrev');\n                    return;\n                }\n            }\n\n            //如果是左边翻页\n            if (direction === 'prev') {\n                //首尾无须创建页面\n                if (pagePointer.currIndex === 0) {\n                    this.autoRun();\n                    //如果总数只有2页，那么首页的按钮是关闭的，需要显示\n                    if (pagetotal == 2) {\n                        vm.$emit('change:showNext');\n                    }\n                    vm.$emit('change:hidePrev');\n                    return;\n                }\n                if (pagePointer.currIndex > -1) {\n                    //创建的页面\n                    createNextContainer.call(this, createPointer, pagePointer.currIndex);\n                    clear();\n                    vm.$emit('change:showNext');\n                    return;\n                }\n            }\n\n            clear();\n\n            return;\n        }\n\n        /**\r\n         * 加载页面事件与动作\r\n         * @param  {[type]} action [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: '_loadPage',\n        value: function _loadPage(action) {\n            var self = this;\n\n            //触发自动任务\n            function trigger() {\n                self.autoRun({\n                    'action': 'init'\n                });\n            }\n\n            //加载主场景页面\n            function firstLoading() {\n\n                $(\"#sceneHome\").css({\n                    'visibility': 'visible'\n                });\n\n                if (window.GLOBALIFRAME) {\n                    trigger();\n                    return;\n                }\n                //获取应用的状态\n                if (Xut.Application.getAppState()) {\n                    //保留启动方法\n                    var pre = Xut.Application.LaunchApp;\n                    Xut.Application.LaunchApp = function () {\n                        pre();\n                        trigger();\n                    };\n                } else {\n                    trigger();\n                }\n            }\n\n            //创建完成回调\n            self.vm.$emit('change:createComplete', function () {\n                if (self.options.multiScenario) {\n                    trigger();\n                } else {\n                    //第一次加载\n                    //进入应用\n                    firstLoading();\n                }\n            });\n        }\n    }]);\n\n    return Dispatch;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/dispatch/index.js\n ** module id = 115\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = SwitchPage;\n\nvar _translation = require('../../swipe/translation');\n\n/**\r\n * 跳转之前提高层级问题\r\n * @return {[type]}          [description]\r\n */\nvar improveIndex = function improveIndex(complier) {\n    var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var currIndex = _ref.currIndex;\n\n    //提高page层级\n    complier.pageMgr.abstractAssistPocess(currIndex, function (pageObj) {\n        pageObj.element.css({\n            'z-index': 9997\n        });\n    });\n\n    //提高mater层级\n    complier.masterContext(function () {\n        this.abstractAssistPocess(currIndex, function (pageObj) {\n            pageObj.element.css({\n                'z-index': 1\n            });\n        });\n    });\n};\n\n/**\r\n * 处理跳转逻辑\r\n * @param  {[type]} complier       [description]\r\n * @param  {[type]} data           [description]\r\n * @param  {[type]} createCallback [description]\r\n * @return {[type]}                [description]\r\n */\nvar calculateFlip = function calculateFlip(complier, data, createCallback) {\n    //缓存当前页面索引用于销毁\n    var pageIndex,\n        i = 0,\n        collectContainers = [],\n        create = data.create,\n        targetIndex = data.targetIndex;\n\n    //需要创建的页面闭包器\n    for (; i < create.length; i++) {\n        pageIndex = create[i];\n        collectContainers.push(function (targetIndex, pageIndex) {\n            return function (callback) {\n                //创建新结构\n                complier.create([pageIndex], targetIndex, 'toPage', callback, {\n                    'opacity': 0 //同页面切换,规定切换的样式\n                });\n            };\n        }(targetIndex, pageIndex));\n    }\n\n    /**\r\n     * 二维数组保存，创建返回的对象\r\n     * 1 page对象\r\n     * 2 母版对象\r\n     * @type {Array}\r\n     */\n    data.pageBaseCollect = [];\n\n    var i = 0,\n        collectLength,\n        count,\n        count = collectLength = collectContainers.length;\n\n    if (collectContainers && collectLength) {\n        for (; i < collectLength; i++) {\n            //收集创建的根节点,异步等待容器的创建\n            collectContainers[i].call(complier, function (callbackPageBase) {\n                if (count === 1) {\n                    collectContainers = null;\n                    setTimeout(function () {\n                        createCallback(data);\n                    }, 100);\n                }\n                //接受创建后返回的页面对象\n                data.pageBaseCollect.push(callbackPageBase);\n                count--;\n            });\n        }\n    }\n};\n\n/**\r\n * 节点创建完毕后，切换页面动，执行动作\r\n * @param  {[type]} complier [description]\r\n * @param  {[type]} data     [description]\r\n * @return {[type]}          [description]\r\n */\nvar createContainerView = function createContainerView(complier, data) {\n\n    var prveHindex = data.currIndex;\n    var pageMgr = complier.pageMgr;\n\n    //停止当前页面动作\n    complier.suspend({\n        'stopPointer': prveHindex\n    });\n\n    //========处理跳转中逻辑=========\n\n    /**\r\n     * 清除掉不需要的页面\r\n     * 排除掉当前提高层次页面\r\n     */\n    _.each(data['destroy'], function (destroyIndex) {\n        if (destroyIndex !== data.currIndex) {\n            pageMgr.clearPage(destroyIndex);\n        }\n    });\n\n    //修正翻页2页的页面坐标值\n    _.each(data['ruleOut'], function (pageIndex) {\n        if (pageIndex > data['targetIndex']) {\n            pageMgr.abstractAssistAppoint(pageIndex, function (pageObj) {\n                (0, _translation.fix)(pageObj.element, 'nextEffect');\n            });\n        }\n        if (pageIndex < data['targetIndex']) {\n            pageMgr.abstractAssistAppoint(pageIndex, function (pageObj) {\n                (0, _translation.fix)(pageObj.element, 'prevEffect');\n            });\n        }\n    });\n\n    var jumpPocesss = void 0;\n\n    //母版\n    complier.masterContext(function () {\n        jumpPocesss = this.makeJumpPocesss(data);\n        jumpPocesss.pre();\n    });\n\n    //===========跳槽后逻辑========================\n    pageMgr.clearPage(prveHindex);\n\n    jumpPocesss && jumpPocesss.clean(data.currIndex, data.targetIndex);\n\n    /**\r\n     * 同页面切换,规定切换的样式复位\r\n     * @param  {[type]} pageBase [description]\r\n     * @return {[type]}          [description]\r\n     */\n    _.each(data.pageBaseCollect, function (pageBase) {\n        _.each(pageBase, function (pageObj) {\n            pageObj.element && pageObj.element.css({\n                'opacity': 1\n            });\n        });\n    });\n\n    data.pageBaseCollect = null;\n    jumpPocesss = null;\n};\n\nfunction SwitchPage(complier, data, success) {\n    //跳前逻辑\n    improveIndex(complier, data);\n    //处理逻辑\n    calculateFlip(complier, data, function (data) {\n        createContainerView(complier, data);\n        success.call(complier, data);\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/dispatch/switch.js\n ** module id = 116\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.filterProcessor = filterProcessor;\n\nvar _hooks = require('./hooks');\n\n/**\r\n * 简化委托处理，默认一层元素只能绑定一个委托事件\r\n */\nfunction filterProcessor(event, pageType) {\n    var i,\n        k,\n        attribute,\n        attributes,\n        value,\n        cur = event.target;\n\n    if (cur.nodeType) {\n        //如果触发点直接是li\n        if (cur === this) {\n            return {\n                'rootNode': this,\n                'elem': cur,\n                'handlers': _hooks.delegateHooks['data-container']\n            };\n        }\n        //否则是内部的节点\n        try {\n            for (; cur !== this; cur = cur.parentNode || this) {\n                //如果是canvas节点\n                if (cur.nodeName && cur.nodeName.toLowerCase() === 'canvas') {\n                    //是否为滑动行为\n                    if (Xut.Contents.Canvas.getSupportState()) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n                //如果是dom节点\n                attributes = cur['attributes'];\n                for (k in _hooks.delegateHooks) {\n                    if (attribute = attributes[k]) {\n                        value = attribute['value' || 'nodeValue'];\n                        return {\n                            'rootNode': this,\n                            'elem': cur,\n                            'attribute': value,\n                            'pageType': pageType,\n                            'handlers': _hooks.delegateHooks[k]\n                        };\n                    }\n                }\n            }\n        } catch (err) {\n            // config.isBrowser && console.log('默认事件跟踪', err)\n        }\n    }\n} //事件钩子\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/filter.js\n ** module id = 117\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Mediator = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../observer/index');\n\nvar _index2 = require('../swipe/index.js');\n\nvar _index3 = _interopRequireDefault(_index2);\n\nvar _index4 = require('./dispatch/index');\n\nvar _hooks = require('./hooks');\n\nvar _filter = require('./filter');\n\nvar _dynamicApi = require('../dynamic-api');\n\nvar _dynamicApi2 = _interopRequireDefault(_dynamicApi);\n\nvar _index5 = require('../util/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*********************************************************************\r\n场景容器构造器\r\n构件页面级容器\r\n翻页全局事件\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\r\nn\n//定义访问器\n\n\n/**\r\n * 部分配置文件\r\n */\nvar pageConf = {\n    //数据库定义的翻页模式\n    //用来兼容客户端的制作模式\n    //妙妙学模式处理，多页面下翻页切换\n    //0 翻页滑动\n    //1 没有滑动过程,直接切换页面\n    'pageFlip': 0,\n\n    //翻页模式\n    //根据页码数决定,主要是优化一些代码\n    //true  是多页面模式,支持翻页滑动\n    //false 单页面模式,不能翻页，只能跳转\n    'pageMode': false,\n\n    //是否多场景加载\n    //单页场景 false\n    //多场景   true\n    'multiScenario': false,\n\n    //是否为连续页面\n    //通过pageMode的参数定义\n    'multiplePages': false\n};\n\n/**\r\n * 配置多页面参数\r\n * @return {[type]} [description]\r\n */\nvar configMultiple = function configMultiple(options) {\n    //如果是epub,强制转换为单页面\n    if (Xut.IBooks.Enabled) {\n        options.multiplePages = false;\n    } else {\n        //判断多页面情况\n        //1 数据库定义\n        //2 系统优化\n        options.multiplePages = options.pageFlip ? options.pageFlip : options.pageMode ? true : false;\n    }\n};\n\n/**\r\n * 判断处理那个页面层次\r\n * 找到pageType类型\r\n * 项目分4个层\r\n * page mater page浮动 mater浮动\r\n * 通过\r\n * 因为冒泡的元素，可能是页面层，也可能是母板上的\r\n * @return {Boolean} [description]\r\n */\nvar isBelong = function isBelong(target) {\n    var pageType = 'page';\n    if (target.dataset && target.dataset.belong) {\n        pageType = target.dataset.belong;\n    }\n    return pageType;\n};\n\n/**\r\n * 阻止元素的默认行为\r\n * 在火狐下面image带有href的行为\r\n * 会自动触发另存为\r\n * @return {[type]} [description]\r\n *\r\n * 2016.3.18\r\n * 妙妙学 滚动插件默认行为被阻止\r\n *\r\n * 2016.7.26\r\n * 读库强制PC模式了\r\n */\nvar preventDefault = function preventDefault(evtObj, target) {\n    //var tagName = target.nodeName.toLowerCase();\n    if (Xut.plat.isBrowser && !Xut.IBooks.Enabled && !window.MMXCONFIG && !window.DUKUCONFIG) {\n        evtObj.preventDefault && evtObj.preventDefault();\n    }\n};\n\nvar Mediator = function (_Observer) {\n    _inherits(Mediator, _Observer);\n\n    function Mediator(parameter) {\n        _classCallCheck(this, Mediator);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Mediator).call(this));\n\n        var vm = _this;\n\n        //配置文件\n        var options = vm.options = _.extend(pageConf, parameter, {\n            pageFlip: Xut.config.pageFlip\n        });\n\n        //配置多页面参数\n        configMultiple(options);\n\n        var $globalEvent = vm.$globalEvent = new _index3.default(options);\n        var $dispatch = vm.$dispatch = new _index4.Dispatch(vm);\n\n        //如果是主场景,才能切换系统工具栏\n        if (options.multiplePages) {\n            _this.addTools(vm);\n        }\n\n        //事件句柄对象\n        var handlerObj = null;\n\n        /**\r\n         * 过滤器.全局控制函数\r\n         * return true 阻止页面滑动\r\n         */\n        $globalEvent.$watch('onFilter', function (hookCallback, point, evtObj) {\n            var target = point.target;\n            //阻止默认行为\n            preventDefault(evtObj, target);\n            //页面类型\n            var pageType = isBelong(target);\n            //根节点\n            var parentNode = $globalEvent.findRootElement(point, pageType);\n            //执行过滤处理\n            handlerObj = _filter.filterProcessor.call(parentNode, point, pageType);\n            //停止翻页,针对content对象可以拖动,滑动的情况处理\n            if (!handlerObj || handlerObj.attribute === 'disable') {\n                hookCallback();\n            }\n        });\n\n        /**\r\n         * 触屏滑动,通知pageMgr处理页面移动\r\n         * @return {[type]} [description]\r\n         */\n        $globalEvent.$watch('onMove', function (data) {\n            $dispatch.move(data);\n        });\n\n        /**\r\n         * 触屏松手点击\r\n         * 无滑动\r\n         */\n        $globalEvent.$watch('onTap', function (pageIndex, hookCallback) {\n            if (handlerObj) {\n                if (handlerObj.handlers) {\n                    handlerObj.handlers(handlerObj.elem, handlerObj.attribute, handlerObj.rootNode, pageIndex);\n                } else {\n                    if (!Xut.Contents.Canvas.getIsTap()) {\n                        vm.$emit('change:toggleToolbar');\n                    }\n                }\n                handlerObj = null;\n                hookCallback();\n            }\n        });\n\n        /**\r\n         * 触屏滑动,通知ProcessMgr关闭所有激活的热点\r\n         * @return {[type]}          [description]\r\n         */\n        $globalEvent.$watch('onUpSlider', function (pointers) {\n            $dispatch.suspend(pointers);\n        });\n\n        /**\r\n         * 翻页动画完成回调\r\n         * @return {[type]}              [description]\r\n         */\n        $globalEvent.$watch('onComplete', function (direction, pagePointer, unfliplock, isQuickTurn) {\n            $dispatch.complete(direction, pagePointer, unfliplock, isQuickTurn);\n        });\n\n        /**\r\n         * 切换页面\r\n         * @return {[type]}      [description]\r\n         */\n        $globalEvent.$watch('onJumpPage', function (data) {\n            $dispatch.jumpPage(data);\n        });\n\n        /**\r\n         * 退出应用\r\n         * @return {[type]}      [description]\r\n         */\n        $globalEvent.$watch('onDropApp', function (data) {\n            window.GLOBALIFRAME && Xut.publish('magazine:dropApp');\n        });\n\n        /**\r\n         * 母板移动反馈\r\n         * 只有存在data-parallaxProcessed\r\n         * 才需要重新激活对象\r\n         * 删除parallaxProcessed\r\n         */\n        $globalEvent.$watch('onMasterMove', function (hindex, target) {\n            if (/Content/i.test(target.id) && target.getAttribute('data-parallaxProcessed')) {\n                $dispatch.masterMgr && $dispatch.masterMgr.reactivation(target);\n            }\n        });\n\n        vm.$overrideApi();\n        return _this;\n    }\n\n    /**\r\n     * 系统工具栏\r\n     */\n\n\n    _createClass(Mediator, [{\n        key: 'addTools',\n        value: function addTools(vm) {\n\n            _.extend(_hooks.delegateHooks, {\n\n                /**\r\n                 * li节点,多线程创建的时候处理滑动\r\n                 */\n                'data-container': function dataContainer() {\n                    vm.$emit('change:toggleToolbar');\n                },\n\n\n                /**\r\n                 * 是背景层\r\n                 */\n                'data-multilayer': function dataMultilayer() {\n                    //改变工具条状态\n                    vm.$emit('change:toggleToolbar');\n                },\n\n\n                /**\r\n                 * 默认content元素可以翻页\r\n                 */\n                'data-behavior': function dataBehavior(target, attribute, rootNode, pageIndex) {\n                    //没有事件的元素,即可翻页又可点击切换工具栏\n                    if (attribute == 'click-swipe') {\n                        vm.$emit('change:toggleToolbar');\n                    }\n                }\n            });\n        }\n    }]);\n\n    return Mediator;\n}(_index.Observer);\n\nvar medProto = Mediator.prototype;\n\n/**\r\n * 是否多场景模式\r\n */\n(0, _index5.defAccess)(medProto, '$multiScenario', {\n    get: function get() {\n        return this.options.multiScenario;\n    }\n});\n\n/**\r\n * 动态注入对象接口\r\n * 注入对象管理,注册所有widget组件对象\r\n *  content类型  创建时注册\r\n *  widget类型   执行时注册\r\n *  widget 包括 视频 音频 Action 子文档 弹出口 类型\r\n *  这种类型是冒泡处理，无法传递钩子，直接用这个接口与场景对接\r\n */\n(0, _index5.defAccess)(medProto, '$injectionComponent', {\n    set: function set(regData) {\n        var injection;\n        if (injection = this.$dispatch[regData.pageType + 'Mgr']) {\n            injection.abstractAssistPocess(regData.pageIndex, function (pageObj) {\n                pageObj.baseRegisterComponent.call(pageObj, regData.widget);\n            });\n        } else {\n            console.log('注册injection失败,regData=' + regData);\n        }\n    }\n});\n\n/**\r\n * 得到当前的视图页面\r\n * @return {[type]}   [description]\r\n */\n(0, _index5.defAccess)(medProto, '$curVmPage', {\n    get: function get() {\n        return this.$dispatch.pageMgr.abstractGetPageObj(this.$globalEvent.getHindex());\n    }\n});\n\n/**\r\n *  监听viewmodel内部的状态的改变,触发后传入值\r\n *\r\n *  与状态有关的change:\r\n *      翻页\r\n *          'flipOver' : function(pageIndex) {},\r\n *\r\n *      切换工具栏\r\n *          'toggleToolbar' : function(state, pointer) {},\r\n *\r\n *      复位工具栏\r\n *          'resetToolbar'  : function() {},\r\n *\r\n *      隐藏下一页按钮\r\n *          'hideNext'   : function(state) {},\r\n *\r\n *      显示下一页按钮\r\n *          'showNext'   : function() {}\r\n *\r\n *  与创建相关\r\n *      创建完毕回调\r\n *          'createComplete': null,\r\n *      创建后中断自动运行回调\r\n *          'suspendAutoCallback': null\r\n *\r\n */\n(0, _index5.defProtected)(medProto, '$bind', function (key, callback) {\n    var vm = this;\n    vm.$watch('change:' + key, function () {\n        callback.apply(vm, arguments);\n    });\n});\n\n/**\r\n * 创建页面\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$init', function () {\n    this.$dispatch.initCreate();\n});\n\n/**\r\n * 运动动画\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$run', function () {\n    var vm = this;\n    vm.$dispatch.pageMgr.activateAutoRuns(vm.$globalEvent.getHindex(), Xut.Presentation.GetPageObj());\n});\n\n/**\r\n * 复位对象\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$reset', function () {\n    return this.$dispatch.pageMgr.resetOriginal(this.$globalEvent.getHindex());\n});\n\n/**\r\n * 停止所有任务\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$suspend', function () {\n    Xut.Application.Suspend({\n        skipMedia: true //跨页面不处理\n    });\n});\n\n/**\r\n * 销毁场景内部对象\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$destroy', function () {\n    this.$off();\n    this.$globalEvent.destroy();\n    this.$dispatch.destroy();\n    this.$dispatch = null;\n    this.$globalEvent = null;\n});\n\n/**\r\n * 设置所有API接口\r\n * @return {[type]} [description]\r\n */\n(0, _index5.defProtected)(medProto, '$overrideApi', function () {\n    (0, _dynamicApi2.default)(this);\n});\n\nexports.Mediator = Mediator;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/index.js\n ** module id = 118\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _abstract = require('./abstract');\n\nvar _translation = require('../swipe/translation');\n\nvar _pagebase = require('../pagebase/pagebase');\n\nvar _index = require('../command/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 母版管理模块\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @param  {[type]}\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @return {[type]}\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\r\n * 扁平化对象到数组\r\n * @param  {[type]} filter [description]\r\n * @return {[type]}        [description]\r\n */\nvar toArray = function toArray(filter) {\n    var arr = [];\n    if (!filter.length) {\n        for (var key in filter) {\n            arr.push(filter[key]);\n        }\n        filter = arr;\n    }\n    return filter;\n};\n\nvar rword = \"-\";\nvar transitionDuration = Xut.style.transitionDuration;\nvar transform = Xut.style.transform;\nvar translateZ = Xut.style.translateZ;\n\n/**\r\n * parallaObjsCollection: Object\r\n *      0: Page\r\n *      1: Page\r\n *\r\n *  recordMasterId: Object\r\n *      0: 9001\r\n *      1: 9001\r\n *\r\n *  recordMasterscope: Object\r\n *      9001: Array[2]\r\n *\r\n *  rootNode: ul # parallax.xut - parallax xut - flip\r\n *\r\n *  currMasterId: 9001 //实际的可使区\r\n */\n\nvar MasterMgr = function (_Abstract) {\n    _inherits(MasterMgr, _Abstract);\n\n    function MasterMgr(vm) {\n        _classCallCheck(this, MasterMgr);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MasterMgr).call(this));\n\n        var config = Xut.config;\n        _this.screenWidth = config.screenSize.width;\n        _this.screenHeight = config.screenSize.height;\n\n        _this.pageType = 'master';\n\n        _this.rootNode = vm.options.rootMaster;\n        _this.recordMasterscope = {}; //记录master区域范围\n        _this.recordMasterId = {}; //记录页面与母板对应的编号\n        _this.currMasterId = null; //可视区母板编号\n\n        //记录视察处理的对象\n        _this.parallaxProcessedContetns = {};\n\n        /**\r\n         * 抽象方法\r\n         * 创建视觉差容器\r\n         */\n        _this.abstractCreateCollection();\n        return _this;\n    }\n\n    /**\r\n     * 创建\r\n     * @param  {[type]} dataOpts       [description]\r\n     * @param  {[type]} pageIndex      [description]\r\n     * @param  {[type]} createCallBack [description]\r\n     * @return {[type]}                [description]\r\n     */\n\n\n    _createClass(MasterMgr, [{\n        key: 'create',\n        value: function create(dataOpts, pageIndex, createCallBack) {\n            var masterObj, reuseMasterId, reuseMasterKey;\n            var pptMaster = dataOpts.chapterDas.pptMaster;\n            var pageOffset = dataOpts.chapterDas.pageOffset;\n\n            //母板复用的标示\n            reuseMasterId = pageOffset && pageOffset.split(rword);\n\n            //组合下标\n            if (reuseMasterId && reuseMasterId.length === 3) {\n                reuseMasterKey = pptMaster + rword + reuseMasterId[2];\n            } else {\n                reuseMasterKey = pptMaster;\n            }\n\n            //检测视觉差对象是否重复创建\n            if (this._checkRepeat(reuseMasterKey, pageOffset, pageIndex)) {\n                return;\n            }\n\n            //通知外部,需要创建的母版\n            createCallBack();\n\n            masterObj = new _pagebase.Pagebase(_.extend(dataOpts, {\n                'pageType': this.pageType, //创建页面的类型\n                'root': this.rootNode, //根元素\n                'pptMaster': pptMaster //ppt母板ID\n            }));\n\n            //增加页面管理\n            this.abstractAddCollection(reuseMasterKey, masterObj);\n\n            return masterObj;\n        }\n\n        /**\r\n         * 销毁整个页面对象\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.rootNode = null;\n            //销毁对象\n            this.abstractDestroyCollection();\n        }\n\n        /**\r\n         * 找到当前页面的可以需要滑动是视觉页面对象\r\n         * @return {[type]}            [description]\r\n         */\n\n    }, {\n        key: 'findMaster',\n        value: function findMaster(leftIndex, currIndex, rightIndex, direction, action) {\n            var prevFlag,\n                nextFlag,\n                prevMasterObj,\n                currMasterObj,\n                nextMasterObj,\n                prevMasterId = this.conversionMasterId(leftIndex),\n                currMasterId = this.conversionMasterId(currIndex),\n                nextMasterId = this.conversionMasterId(rightIndex);\n\n            switch (direction) {\n                case 'prev':\n                    if (prevFlag = currMasterId !== prevMasterId) {\n                        currMasterObj = this.abstractGetPageObj(currMasterId);\n                    }\n                    if (prevMasterId && prevFlag) {\n                        action === 'flipOver' && this.checkClear([currMasterId, prevMasterId]); //边界清理\n                        prevMasterObj = this.abstractGetPageObj(prevMasterId);\n                    }\n                    break;\n                case 'next':\n                    if (nextFlag = currMasterId !== nextMasterId) {\n                        currMasterObj = this.abstractGetPageObj(currMasterId);\n                    }\n                    if (nextMasterId && nextFlag) {\n                        action === 'flipOver' && this.checkClear([currMasterId, nextMasterId]); //边界清理\n                        nextMasterObj = this.abstractGetPageObj(nextMasterId);\n                    }\n                    break;\n            }\n            return [prevMasterObj, currMasterObj, nextMasterObj];\n        }\n\n        /**\r\n         * 页面滑动处理\r\n         * 1 母版之间的切换\r\n         * 2 浮动对象的切换\r\n         */\n\n    }, {\n        key: 'move',\n        value: function move(leftIndex, currIndex, rightIndex, direction, moveDistance, action, speed, nodes) {\n            var parallaxOffset,\n                self = this,\n                isBoundary = false; //是边界处理\n\n            //找到需要滑动的母版\n            _.each(this.findMaster(leftIndex, currIndex, rightIndex, direction, action), function (pageObj, index) {\n                if (pageObj) {\n\n                    isBoundary = true;\n\n                    //母版交接判断\n                    //用户事件的触发\n                    pageObj.onceMaster = false;\n\n                    //移动母版\n                    _translation.translation[action](pageObj, moveDistance[index], speed);\n\n                    //移动浮动容器\n                    if (pageObj.floatContents.MasterContainer) {\n                        _translation.translation[action](pageObj, moveDistance[index], speed, pageObj.floatContents.MasterContainer);\n                    }\n                }\n            });\n\n            //越界不需要处理内部视察对象\n            this.isBoundary = isBoundary;\n            if (isBoundary) {\n                return;\n            }\n\n            //移动视察对象\n            function moveParallaxObject(nodes) {\n                self.moveParallaxs(moveDistance, currIndex, action, direction, speed, nodes);\n            }\n\n            //移动视察对象\n            switch (direction) {\n                case 'prev':\n                    moveParallaxObject();\n                    break;\n                case 'next':\n                    nodes && moveParallaxObject(nodes);\n                    break;\n            }\n        }\n\n        /**\r\n         * 停止行为\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'suspend',\n        value: function suspend(pointers) {\n            //如果未越界不需要处理行为\n            if (!this.isBoundary) return;\n            var masterObj,\n                stopPointer = pointers.stopPointer;\n            if (masterObj = this.abstractGetPageObj(stopPointer)) {\n                var pageId = masterObj.baseGetPageId(stopPointer);\n                //停止活动对象活动\n                (0, _index.suspend)(masterObj, pageId);\n            }\n        }\n\n        /**\r\n         * 复位初始状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'resetOriginal',\n        value: function resetOriginal(pageIndex) {\n            var originalPageObj;\n            if (originalPageObj = this.abstractGetPageObj(pageIndex)) {\n                (0, _index.original)(originalPageObj);\n            }\n        }\n\n        /**\r\n         *  母版自动运行\r\n         */\n\n    }, {\n        key: 'autoRun',\n        value: function autoRun(data) {\n            var masterObj, element;\n            if (masterObj = this.abstractGetPageObj(data.currIndex)) {\n                //热点状态复位\n                this.resetOriginal(data.suspendIndex);\n                (0, _index.autoRun)(masterObj, data.currIndex);\n            }\n        }\n\n        /**\r\n         * 移动内部的视察对象\r\n         */\n\n    }, {\n        key: 'moveParallaxs',\n        value: function moveParallaxs(moveDistance, currIndex, action, direction, speed, nodes) {\n            var rootNode,\n                floatObj,\n                contentObj,\n                contentObjs,\n                baseContents,\n                currParallaxObj,\n                currMoveDistance,\n                hasFloatMater,\n                floatMaterParallaxChange,\n\n            //需要执行动画\n            activationAnim = action === \"flipRebound\" || action === \"flipOver\",\n                self = this;\n\n            //处理当前页面内的视觉差对象效果\n            if (currParallaxObj = this.abstractGetPageObj(this.conversionMasterId(currIndex))) {\n                if (baseContents = currParallaxObj.baseGetContent()) {\n                    self.baseContents = baseContents;\n                    //移动距离\n                    currMoveDistance = moveDistance[1];\n                    //遍历所有活动对象\n                    _.each(baseContents, function (content) {\n                        content.eachAssistContents(function (scope) {\n                            //如果是视察对象移动\n                            if (scope.parallax) {\n                                rootNode = scope.parallax.rootNode;\n                                contentObj = currParallaxObj.baseGetContentObject(scope.id);\n                                /////////////////////\n                                //如果有这个动画效果 //\n                                //先停止否则通过视觉差移动会出问题\n                                // //影响，摩天轮转动APK\n                                // * 重新激动视觉差对象\n                                // * 因为视察滑动对象有动画\n                                // * 2个CSS3动画冲突的\n                                // * 所以在视察滑动的情况下先停止动画\n                                // * 然后给每一个视察对象打上对应的hack=>data-parallaxProcessed\n                                // * 通过动画回调在重新加载动画\n                                /////////////////////\n                                if (action === \"flipMove\" && contentObj.anminInstance && !contentObj.parallaxProcessed) {\n                                    //标记\n                                    var actName = contentObj.actName;\n                                    contentObj.stopAnimations();\n                                    //视觉差处理一次,停止过动画\n                                    contentObj.parallaxProcessed = true;\n                                    //增加标记\n                                    rootNode.attr('data-parallaxProcessed', actName);\n                                    //记录\n                                    self.parallaxProcessedContetns[actName] = contentObj;\n                                }\n\n                                //移动视觉差对象\n                                conversionTranslateX(rootNode, scope.parallax, direction, action, speed, nodes, currMoveDistance, floatMaterParallaxChange);\n                            }\n                        });\n                    });\n                }\n            }\n\n            function conversionTranslateX(rootNode, scope, direction, action, speed, nodes, currMoveDistance, floatMaterParallaxChange) {\n                var translate = scope.translate,\n                    offsetTranslate = scope.offsetTranslate,\n                    nodes_1,\n                    moveTranslate;\n\n                //往前翻页\n                if (direction === 'prev') {\n                    //分割的比例\n                    nodes_1 = scope.nodeProportion;\n                    //如果往前溢出则取0\n                    nodes = nodes == nodes_1 ? 0 : nodes_1;\n                }\n\n                //视觉对象移动的距离\n                moveTranslate = self._transformConversion(translate, currMoveDistance, nodes);\n\n                switch (action) {\n                    //移动中\n                    case 'flipMove':\n                        moveTranslate = self._flipMove(moveTranslate, offsetTranslate);\n                        break;\n                    //反弹\n                    case 'flipRebound':\n                        moveTranslate = self._flipRebound(moveTranslate, offsetTranslate);\n                        break;\n                    //翻页结束,记录上一页的坐标\n                    case 'flipOver':\n                        if (direction === 'prev') {\n                            moveTranslate = self._flipOver(moveTranslate, offsetTranslate);\n                        }\n                        self._overMemory(moveTranslate, offsetTranslate);\n                        /**\r\n                         * 记录浮动母版视察修改\r\n                         * 2014.6.30针对浮动处理\r\n                         */\n                        // floatMaterParallaxChange && floatMaterParallaxChange(moveTranslate.translateX)\n                        break;\n                }\n\n                //直接操作元素\n                self._transformNodes(rootNode, speed, moveTranslate, offsetTranslate.opacityStart || 0);\n            }\n        }\n\n        /**\r\n         * 重新激动视觉差对象\r\n         * 因为视察滑动对象有动画\r\n         * 2个CSS3动画冲突的\r\n         * 所以在视察滑动的情况下先停止动画\r\n         * 然后给每一个视察对象打上对应的hack=>data-parallaxProcessed\r\n         * 通过动画回调在重新加载动画\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'reactivation',\n        value: function reactivation(target) {\n            if (this.parallaxProcessedContetns) {\n                var actName = target.id;\n                var contentObj = this.parallaxProcessedContetns[actName];\n                if (contentObj) {\n                    contentObj.runAnimations();\n                    //视觉差处理一次,停止过动画\n                    contentObj.parallaxProcessed = false;\n                    //移除标记\n                    target.removeAttribute('data-parallaxProcessed');\n                    //记录\n                    delete this.parallaxProcessedContetns[actName];\n                }\n            }\n        }\n\n        /**\r\n         * 变化节点的css3transform属性\r\n         * @param  {[type]} rootNode     [description]\r\n         * @param  {[type]} speed        [description]\r\n         * @param  {[type]} property     [description]\r\n         * @param  {[type]} opacityStart [description]\r\n         * @return {[type]}              [description]\r\n         */\n\n    }, {\n        key: '_transformNodes',\n        value: function _transformNodes(rootNode, speed, property, opacityStart) {\n            var style = {},\n                effect = '',\n                x = 0,\n                y = 0,\n                z = 0,\n                round = Math.round;\n\n            if (property.translateX != undefined || property.translateY != undefined || property.translateZ != undefined) {\n                x = round(property.translateX) || 0;\n                y = round(property.translateY) || 0;\n                z = round(property.translateZ) || 0;\n                effect += String.format('translate3d({0}px,{1}px,{2}px) ', x, y, z);\n            }\n\n            if (property.rotateX != undefined || property.rotateY != undefined || property.rotateZ != undefined) {\n                x = round(property.rotateX);\n                y = round(property.rotateY);\n                z = round(property.rotateZ);\n                effect += x ? 'rotateX(' + x + 'deg) ' : '';\n                effect += y ? 'rotateY(' + y + 'deg) ' : '';\n                effect += z ? 'rotateZ(' + z + 'deg) ' : '';\n            }\n\n            if (property.scaleX != undefined || property.scaleY != undefined || property.scaleZ != undefined) {\n                x = round(property.scaleX * 100) / 100 || 1;\n                y = round(property.scaleY * 100) / 100 || 1;\n                z = round(property.scaleZ * 100) / 100 || 1;\n                effect += String.format('scale3d({0},{1},{2}) ', x, y, z);\n            }\n\n            if (property.opacity != undefined) {\n                style.opacity = round(property.opacity * 100) / 100 + opacityStart;\n                effect += ';';\n            }\n\n            ////////////////\n            //最终改变视觉对象的坐标 //\n            ////////////////\n            if (effect) {\n                style[transitionDuration] = speed + 'ms';\n                style[transform] = effect;\n                rootNode.css(style);\n            }\n        }\n\n        /**\r\n         * 制作处理器\r\n         * 针对跳转页面\r\n         * @param  {[type]} data [description]\r\n         * @return {[type]}      [description]\r\n         */\n\n    }, {\n        key: 'makeJumpPocesss',\n        value: function makeJumpPocesss(data) {\n            var filter;\n            var master = this;\n            return {\n                pre: function pre() {\n                    var targetIndex = data.targetIndex;\n                    //目标母板对象\n                    var targetkey = master.conversionMasterId(targetIndex);\n                    //得到过滤的边界keys\n                    //在filter中的页面为过滤\n                    filter = master.scanBounds(targetIndex, targetkey);\n                    //清理多余母板\n                    //filter 需要保留的范围\n                    master.checkClear(filter, true);\n                    //更新可视母板编号\n                    master.currMasterId = targetkey;\n                },\n                //修正位置\n                clean: function clean(currIndex, targetIndex) {\n                    master._fixPosition(filter);\n                    master._checkParallaxPox(currIndex, targetIndex);\n                }\n            };\n        }\n\n        //扫描边界\n        //扫描key的左右边界\n        //当前页面的左右边\n\n    }, {\n        key: 'scanBounds',\n        value: function scanBounds(currPage, currkey) {\n            var currKey = this.conversionMasterId(currPage),\n                filter = {},\n                i = currPage,\n                prevKey,\n                nextKey;\n\n            //往前\n            while (i--) {\n                prevKey = this.conversionMasterId(i);\n                if (prevKey && prevKey !== currkey) {\n                    filter['prev'] = prevKey;\n                    break;\n                }\n            }\n\n            //往后\n            nextKey = this.conversionMasterId(currPage + 1);\n\n            //如果有下一条记录\n            if (nextKey && nextKey !== currkey) {\n                //如果不是当期页面满足范围要求\n                filter['next'] = nextKey;\n            }\n\n            //当前页面\n            if (currKey) {\n                filter['curr'] = currKey;\n            }\n            return filter;\n        }\n\n        /**\r\n         * 修正位置\r\n         * @param  {[type]} filter [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: '_fixPosition',\n        value: function _fixPosition(filter) {\n\n            var self = this;\n\n            function setPosition(parallaxObj, position) {\n                //设置移动\n                function toMove(distance, speed) {\n                    var element = parallaxObj.element;\n                    if (element) {\n                        element.css(transitionDuration, speed + 'ms');\n                        //scrollerStyle[transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;\n                        //element.css(transform, 'translate3d(' + distance + 'px,0px,0px)');\n                        element.css(transform, 'translate(' + distance + 'px,0px)' + translateZ);\n                    }\n                }\n\n                if (position === 'prev') {\n                    toMove(-self.screenWidth);\n                } else if (position === 'next') {\n                    toMove(self.screenWidth);\n                } else if (position === 'curr') {\n                    toMove(0);\n                }\n            }\n\n            for (var key in filter) {\n                switch (key) {\n                    case 'prev':\n                        setPosition(this.abstractGetPageObj(filter[key]), 'prev');\n                        break;\n                    case 'curr':\n                        setPosition(this.abstractGetPageObj(filter[key]), 'curr');\n                        break;\n                    case 'next':\n                        setPosition(this.abstractGetPageObj(filter[key]), 'next');\n                        break;\n                }\n            }\n        }\n    }, {\n        key: '_checkParallaxPox',\n        value: function _checkParallaxPox(currPageIndex, targetIndex) {\n            var key,\n                pageObj,\n                pageCollection = this.abstractGetCollection();\n            for (key in pageCollection) {\n                pageObj = pageCollection[key];\n                //跳跃过的视觉容器处理\n                this._fixParallaxPox(pageObj, currPageIndex, targetIndex);\n            }\n        }\n\n        /**\r\n         * 当前同一视觉页面作用的范围\r\n         * @param  {[type]} reuseMasterKey [description]\r\n         * @param  {[type]} pageIndex      [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_toRepeat',\n        value: function _toRepeat(reuseMasterKey, pageIndex) {\n            var temp;\n            if (temp = this.recordMasterscope[reuseMasterKey]) {\n                return temp;\n            }\n            return false;\n        }\n\n        //更新母板作用域范围\n        //recordMasterscope:{\n        //   9001-1:[0,1], master 对应记录的页码\n        //   9002-1:[2,3]\n        //   9001-2:[4,5]\n        //}\n\n    }, {\n        key: '_updataMasterscope',\n        value: function _updataMasterscope(reuseMasterKey, pageIndex) {\n            var scope;\n            if (scope = this.recordMasterscope[reuseMasterKey]) {\n                if (-1 === scope.indexOf(pageIndex)) {\n                    scope.push(pageIndex);\n                }\n            } else {\n                this.recordMasterscope[reuseMasterKey] = [pageIndex];\n            }\n        }\n\n        /**\r\n         * 记录页面与模板标示的映射\r\n         * @param  {[type]} reuseMasterKey [description]\r\n         * @param  {[type]} pageIndex      [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_updatadParallaxMaster',\n        value: function _updatadParallaxMaster(reuseMasterKey, pageIndex) {\n            //记录页面与模板标示的映射\n            this.recordMasterId[pageIndex] = reuseMasterKey;\n            //更新可视区母板的编号\n            this.currMasterId = this.conversionMasterId(Xut.Presentation.GetPageIndex());\n        }\n\n        /**\r\n         * 检测是否需要创建视觉差\r\n         * @param  {[type]} reuseMasterKey [description]\r\n         * @param  {[type]} pageOffset     [description]\r\n         * @param  {[type]} pageIndex      [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_checkRepeat',\n        value: function _checkRepeat(reuseMasterKey, pageOffset, pageIndex) {\n            var tag = this._toRepeat(reuseMasterKey, pageIndex); //false就是没找到视察对象\n            this._updataMasterscope(reuseMasterKey, pageIndex);\n            this._updatadParallaxMaster(reuseMasterKey, pageIndex);\n            return tag;\n        }\n\n        /**\r\n         * transform转化成相对应的偏移量\r\n         * @param  {[type]} property     [description]\r\n         * @param  {[type]} moveDistance [description]\r\n         * @param  {[type]} nodes        [description]\r\n         * @return {[type]}              [description]\r\n         */\n\n    }, {\n        key: '_transformConversion',\n        value: function _transformConversion(property, moveDistance, nodes) {\n            var temp = {},\n                i;\n\n            for (i in property) {\n                switch (i) {\n                    case 'translateX':\n                    case 'translateZ':\n                        temp[i] = moveDistance * nodes * property[i];\n                        break;\n                    case 'translateY':\n                        temp[i] = moveDistance * (this.screenHeight / this.screenWidth) * nodes * property[i];\n                        break;\n                    case 'opacityStart':\n                        temp[i] = property.opacityStart;\n                        break;\n                    default:\n                        //乘以-1是为了向右翻页时取值为正,位移不需这样做\n                        temp[i] = -1 * moveDistance / this.screenWidth * property[i] * nodes;\n                }\n            }\n            return temp;\n        }\n\n        /**\r\n         * 移动叠加值\r\n         * @param  {[type]} property       [description]\r\n         * @param  {[type]} repairProperty [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_flipMove',\n        value: function _flipMove(property, repairProperty) {\n            var temp = {};\n            var start = property.opacityStart;\n            for (var i in property) {\n                temp[i] = property[i] + repairProperty[i];\n            }\n            if (start > -1) temp.opacityStart = start;\n            return temp;\n        }\n\n        /**\r\n         * 反弹\r\n         * @param  {[type]} property       [description]\r\n         * @param  {[type]} repairProperty [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_flipRebound',\n        value: function _flipRebound(property, repairProperty) {\n            var temp = {};\n            for (var i in property) {\n                temp[i] = repairProperty[i] || property[i];\n            }\n            return temp;\n        }\n\n        /**\r\n         * 翻页结束\r\n         * @param  {[type]} property       [description]\r\n         * @param  {[type]} repairProperty [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_flipOver',\n        value: function _flipOver(property, repairProperty) {\n            return this._flipMove(property, repairProperty);\n        }\n\n        /**\r\n         * 结束后缓存上一个记录\r\n         * @param  {[type]} property       [description]\r\n         * @param  {[type]} repairProperty [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: '_overMemory',\n        value: function _overMemory(property, repairProperty) {\n            for (var i in property) {\n                repairProperty[i] = property[i];\n            }\n        }\n\n        /**\r\n         * 修正跳转后视觉对象坐标\r\n         * @param  {[type]} parallaxObj   [description]\r\n         * @param  {[type]} currPageIndex [description]\r\n         * @param  {[type]} targetIndex   [description]\r\n         * @return {[type]}               [description]\r\n         */\n\n    }, {\n        key: '_fixParallaxPox',\n        value: function _fixParallaxPox(parallaxObj, currPageIndex, targetIndex) {\n            var self = this,\n                contentObjs,\n                prevNodes,\n                nodes;\n            if (contentObjs = parallaxObj.baseGetContent()) {\n                contentObjs.forEach(function (contentObj) {\n                    contentObj.eachAssistContents(function (scope) {\n                        if (scope.parallax) {\n                            repairNodes.call(self, scope.parallax, currPageIndex, targetIndex);\n                        }\n                    });\n                });\n            }\n\n            function repairNodes(scope, currPageIndex, targetIndex) {\n                var rangePage = scope.calculateRangePage(),\n                    rootNode = scope.rootNode,\n                    translate = scope.translate,\n                    offsetTranslate = scope.offsetTranslate,\n                    moveTranslate,\n                    nodes = Xut.Presentation.GetPageNode(targetIndex - 1);\n\n                if (targetIndex > currPageIndex) {\n                    //next\n                    if (targetIndex > rangePage['end']) {\n                        nodes = 1;\n                    }\n                } else {\n                    //prev\n                    if (targetIndex < rangePage['start']) {\n                        nodes = 0;\n                    }\n                }\n\n                moveTranslate = this._transformConversion(translate, -self.screenWidth, nodes);\n                this._transformNodes(rootNode, 300, moveTranslate, offsetTranslate.opacityStart);\n                this._overMemory(moveTranslate, offsetTranslate);\n            }\n        }\n\n        //检测是否需要清理\n        // 1 普通翻页清理  【数组过滤条件】\n        // 2 跳转页面清理  【对象过滤条件】\n\n    }, {\n        key: 'checkClear',\n        value: function checkClear(filter, toPage) {\n            var key,\n                indexOf,\n                removeMasterId = _.keys(this.abstractGetCollection());\n\n            // 如果有2个以上的母板对象,就需要清理\n            if (removeMasterId.length > 2 || toPage) {\n                //或者是跳转页面\n                //解析对象\n                filter = toArray(filter);\n                //过滤\n                _.each(filter, function (masterId) {\n                    if (masterId !== undefined) {\n                        indexOf = removeMasterId.indexOf(masterId.toString());\n                        if (-1 !== indexOf) {\n                            //过滤需要删除的对象\n                            removeMasterId.splice(indexOf, 1);\n                        }\n                    }\n                });\n                this.clearMemory(removeMasterId);\n            }\n        }\n\n        //清理内存\n        //需要清理的key合集\n\n    }, {\n        key: 'clearMemory',\n        value: function clearMemory(removeMasterId) {\n            var pageObj,\n                self = this;\n            _.each(removeMasterId, function (removekey) {\n                //销毁页面对象事件\n                if (pageObj = self.abstractGetPageObj(removekey)) {\n                    //移除事件\n                    pageObj.baseDestroy();\n                    //移除列表\n                    self.abstractRemoveCollection(removekey);\n                    self.removeRecordMasterscope(removekey);;\n                }\n                //清理作用域缓存\n                delete self.recordMasterscope[removekey];\n            });\n        }\n\n        /**\r\n         * 注册状态管理\r\n         * @param  {[type]} pageIndex  [description]\r\n         * @param  {[type]} type       [description]\r\n         * @param  {[type]} hotspotObj [description]\r\n         * @return {[type]}            [description]\r\n         */\n\n    }, {\n        key: 'register',\n        value: function register(pageIndex, type, hotspotObj) {\n            var parallaxObj = this.abstractGetPageObj(this.conversionMasterId(pageIndex));\n            if (parallaxObj) {\n                parallaxObj.registerCotents.apply(parallaxObj, arguments);\n            }\n        }\n\n        /**\r\n         * page转化成母版ID\r\n         * @param  {[type]} pageIndex [description]\r\n         * @return {[type]}           [description]\r\n         */\n\n    }, {\n        key: 'conversionMasterId',\n        value: function conversionMasterId(pageIndex) {\n            return this.recordMasterId ? this.recordMasterId[pageIndex] : undefined;\n        }\n    }, {\n        key: 'removeRecordMasterscope',\n        value: function removeRecordMasterscope(removekey) {\n            var me = this;\n            var recordMasterscope = me.recordMasterscope[removekey];\n            //清理页码指示标记\n            recordMasterscope.forEach(function (scope) {\n                delete me.recordMasterId[scope];\n            });\n        }\n    }]);\n\n    return MasterMgr;\n}(_abstract.Abstract);\n\nexports.default = MasterMgr;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/master.js\n ** module id = 119\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _abstract = require('./abstract');\n\nvar _pagebase = require('../pagebase/pagebase');\n\nvar _translation = require('../swipe/translation');\n\nvar _edge = require('../util/edge');\n\nvar _manager = require('../component/video/manager');\n\nvar _index = require('../util/index');\n\nvar _index2 = require('../command/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 页面模块\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @param  {[type]}\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @return {[type]}\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\r\n * 检测脚本注入\r\n * @return {[type]} [description]\r\n */\nvar checkInjectScript = function checkInjectScript(pageObject, type) {\n    var code = pageObject.chapterDas[type];\n    if (code) {\n        (0, _index.injectScript)(code, type);\n    }\n};\n\nvar PageMgr = function (_Abstract) {\n    _inherits(PageMgr, _Abstract);\n\n    function PageMgr(vm) {\n        _classCallCheck(this, PageMgr);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PageMgr).call(this));\n\n        _this.pageType = 'page';\n\n        //页面根节点\n        _this.rootNode = vm.options.rootPage;\n\n        //创建合集容器\n        _this.abstractCreateCollection();\n        return _this;\n    }\n\n    //创建页新的页面\n\n\n    _createClass(PageMgr, [{\n        key: 'create',\n        value: function create(dataOpts, pageIndex) {\n\n            //生成指定页面对象\n            var pageObjs = new _pagebase.Pagebase(_.extend(dataOpts, {\n                'pageType': this.pageType, //创建页面的类型\n                'root': this.rootNode //根元素\n            }));\n\n            //增加页面管理\n            this.abstractAddCollection(pageIndex, pageObjs);\n\n            return pageObjs;\n        }\n\n        /**\r\n         * 销毁整个页面管理对象\r\n         * @param  {[type]} clearPageIndex [description]\r\n         * @return {[type]}                [description]\r\n         */\n\n    }, {\n        key: 'clearPage',\n        value: function clearPage(clearPageIndex) {\n            var pageObj = this.abstractGetPageObj(clearPageIndex);\n            //销毁页面对象事件\n            if (pageObj) {\n                //移除事件\n                pageObj.baseDestroy();\n                //移除列表\n                this.abstractRemoveCollection(clearPageIndex);\n            }\n        }\n\n        /**\r\n         * 销毁整个页面管理对象\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            //清理视频\n            var pageId = Xut.Presentation.GetPageId(Xut.Presentation.GetPageIndex());\n\n            (0, _manager.removeVideo)(pageId);\n\n            //清理对象\n            this.abstractDestroyCollection();\n            //清理节点\n            this.rootNode = null;\n        }\n\n        /**\r\n         * 设置中断正在创建的页面对象任务\r\n         * @param {[type]}   currIndex [description]\r\n         * @param {Function} callback  [description]\r\n         */\n\n    }, {\n        key: 'suspendInnerCreateTasks',\n        value: function suspendInnerCreateTasks(pointers) {\n            var pageObj,\n                self = this;\n            [pointers.leftIndex, pointers.currIndex, pointers.rightIndex].forEach(function (pointer) {\n                if (pageObj = self.abstractGetPageObj(pointer)) {\n                    pageObj.setTaskSuspend();\n                }\n            });\n        }\n\n        /**\r\n         * 检测活动窗口任务\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'checkTaskCompleted',\n        value: function checkTaskCompleted(currIndex, callback) {\n            var currPageObj,\n                self = this;\n            // console.log('激活活动任务',currIndex)\n            if (currPageObj = self.abstractGetPageObj(currIndex)) {\n                currPageObj.checkThreadTask(function () {\n                    // console.log('11111111111当前页面创建完毕',currIndex+1)\n                    callback(currPageObj);\n                });\n            }\n        }\n\n        /**\r\n         * 检测后台预创建任务\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'checkPreforkTasks',\n        value: function checkPreforkTasks(resumePointer, preCreateTask) {\n            var resumeObj, resumeCount;\n            if (!resumePointer.length) {\n                resumePointer = [resumePointer];\n            }\n            resumeCount = resumePointer.length;\n            while (resumeCount--) {\n                if (resumeObj = this.abstractGetPageObj(resumePointer[resumeCount])) {\n                    resumeObj.createPreforkTasks(function () {\n                        // console.log('后台处理完毕')\n                    }, preCreateTask);\n                }\n            }\n        }\n    }, {\n        key: 'move',\n        value: function move(leftIndex, currIndex, rightIndex, direction, speed, action, moveDistance) {\n            var _this2 = this;\n\n            /**\r\n             * 找到需要滑动的页面\r\n             * @return {[type]} [description]\r\n             */\n            var findPage = function findPage() {\n                return [_this2.abstractGetPageObj(leftIndex), _this2.abstractGetPageObj(currIndex), _this2.abstractGetPageObj(rightIndex)];\n            };\n\n            /**\r\n             * 开始移动页面\r\n             * @return {[type]}         [description]\r\n             */\n            _.each(findPage.call(this), function (pageObj, index) {\n                if (pageObj) {\n                    //移动浮动页面容器\n                    var floatElement;\n                    if (floatElement = pageObj.floatContents.PageContainer) {\n                        _translation.translation[action](pageObj, moveDistance[index], speed, floatElement);\n                    }\n                    //正常页面\n                    _translation.translation[action](pageObj, moveDistance[index], speed);\n                }\n            });\n        }\n\n        /**\r\n         * 触屏翻页开始\r\n         * 1 中断所有任务\r\n         * 2 停止热点对象运行\r\n         *     停止动画,视频音频等等\r\n         */\n\n    }, {\n        key: 'suspend',\n        value: function suspend(pointers) {\n            var stopPointer = pointers.stopPointer,\n                suspendPageObj = this.abstractGetPageObj(stopPointer),\n                prveChpterId = suspendPageObj.baseGetPageId(stopPointer);\n\n            //翻页结束脚本\n            checkInjectScript(suspendPageObj, 'postCode');\n\n            //中断节点创建任务\n            this.suspendInnerCreateTasks(pointers);\n\n            //停止活动对象活动\n            (0, _index2.suspend)(suspendPageObj, prveChpterId);\n        }\n\n        /**\r\n         * 复位初始状态\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'resetOriginal',\n        value: function resetOriginal(pageIndex) {\n            var originalPageObj, flaotElement;\n            if (originalPageObj = this.abstractGetPageObj(pageIndex)) {\n                if (flaotElement = originalPageObj.floatContents.PageContainer) {\n                    //floatPages设置的content溢出后处理\n                    //在非视区增加overflow:hidden\n                    //可视区域overflow:''\n                    flaotElement.css({\n                        'zIndex': 2000,\n                        'overflow': 'hidden'\n                    });\n                }\n                (0, _index2.original)(originalPageObj);\n            }\n        }\n\n        /**\r\n         * 触屏翻页完成\r\n         * 1 停止热点动作\r\n         * 2 触发新的页面动作\r\n         * @param  {[type]} prevPageIndex [上一页面]\r\n         * @param  {[type]} currPageIndex [当前页码]\r\n         * @param  {[type]} nextPageIndex [下一页页码]\r\n         * @param  {[type]} suspendIndex  [停止动作的页码]因为要区分滑动的方向\r\n         * @param  {[type]} createPointer [正在创建的页面]\r\n         * @param  {[type]} direction     [滑动方向]\r\n         */\n\n    }, {\n        key: 'autoRun',\n        value: function autoRun(data) {\n\n            var self = this;\n\n            //检测当前页面构建任务的情况\n            //如果任务没有完成，则等待任务完成\n            this.checkTaskCompleted(data.currIndex, function (currPageObj) {\n\n                //提升当前页面浮动对象的层级\n                //因为浮动对象可以是并联的\n                var flaotElement;\n                if (flaotElement = currPageObj.floatContents.PageContainer) {\n                    flaotElement.css({\n                        'zIndex': 2001,\n                        'overflow': ''\n                    });\n                }\n\n                //IE上不支持蒙版效果的处理\n                if (Xut.style.noMaskBoxImage) {\n                    (0, _edge.addEdges)();\n                }\n\n                //构件完成通知\n                data.buildComplete(currPageObj.scenarioId);\n\n                //执行自动动作之前的脚本\n                checkInjectScript(currPageObj, 'preCode');\n\n                //热点状态复位\n                self.resetOriginal(data.suspendIndex);\n\n                //预构建背景\n                preCreate('background');\n\n                //等待动画结束后构建\n                startAutoRun(currPageObj, data);\n            });\n\n            /**\r\n             * 预执行背景创建\r\n             * 支持多线程快速翻页\r\n             * 1 初始化,或者快速翻页补全前后页面\r\n             * 2 正常翻页创建前后\r\n             */\n            function preCreate(preCreateTask) {\n                var resumePointer;\n                if (data.isQuickTurn || !data.direction) {\n                    resumePointer = [data.prevIndex, data.nextIndex];\n                } else {\n                    resumePointer = data.createPointer || data.nextIndex || data.prevIndex;\n                }\n                self.checkPreforkTasks(resumePointer, preCreateTask);\n            };\n\n            //激活自动运行对象\n            function startAutoRun(currPageObj, data) {\n\n                //结束通知\n                function complete() {\n                    data.processComplete();\n                    preCreate();\n                }\n\n                //如果页面容器存在,才处理自动运行\n                var currRootNode = currPageObj.element;\n                if (!currRootNode) {\n                    return complete();\n                }\n\n                //运行动作\n                function startRun() {\n                    (0, _index2.autoRun)(currPageObj, data.currIndex, complete);\n                }\n\n                //运行如果被中断,则等待\n                if (data.suspendCallback) {\n                    data.suspendCallback(startRun);\n                } else {\n                    startRun();\n                }\n            }\n        }\n    }]);\n\n    return PageMgr;\n}(_abstract.Abstract);\n\nexports.default = PageMgr;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/manager/page.js\n ** module id = 120\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = Collection;\n/**\r\n * [ description]\r\n * @return {[type]} [description]\r\n */\n\n/**\r\n * 处理合集\r\n */\nfunction Collection() {\n    this.remove();\n}\n\nCollection.prototype = {\n    register: function register(contentObj) {\n        if (!this.list) {\n            this.list = [contentObj];\n        } else {\n            this.list.push(contentObj);\n        }\n    },\n    get: function get() {\n        return this.list;\n    },\n\n\n    /**\r\n     * 得到一个指定的实例\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\n    specified: function specified(data) {\n        var instance;\n        var listLength = this.list.length;\n        while (listLength) {\n            listLength--;\n            if (instance = this.list[listLength]) {\n                if (instance.type === data.type && instance.id === data.id) {\n                    return instance;\n                }\n            }\n        }\n    },\n    remove: function remove() {\n        this.list = [];\n    },\n    reset: function reset() {\n        this.remove();\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/depend/collection.js\n ** module id = 121\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _index = require('../../observer/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // 观察\n\n\n/**\r\n * canvas相关处理\r\n * 启动canvas,pixi库\r\n * 事件，动画等\r\n * 需要收集所有content的执行\r\n * 因为canvas只能绘制一次\r\n * cnavas模式下 category === \"Sprite\" 转化cid\r\n */\nvar Factory = function (_Observer) {\n        _inherits(Factory, _Observer);\n\n        function Factory() {\n                _classCallCheck(this, Factory);\n\n                /**\r\n                 * 是否启动模式\r\n                 * @type {Boolean}\r\n                 */\n                var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Factory).call(this));\n\n                _this.enable = false;\n\n                /**\r\n                 * CompSprite非常特殊\r\n                 * 可以在dom的情况下使用\r\n                 * 所以如果是dom模式要强制开始enable‘\r\n                 * 这样会导致 精灵等动画强制转canvas\r\n                 * 这是错误的，所以增加一个判断\r\n                 *\r\n                 */\n                _this.onlyCompSprite = false;\n\n                /**\r\n                 * 加载失败content列表\r\n                 * @type {Array}\r\n                 */\n                _this.failCid = [];\n\n                //所有contentId\n                _this.cid = [];\n\n                //开启了contentMode的节点\n                //对应的content转化成canvas模式\n                //普通精灵动画\n                //ppt动画=>转化\n                _this.pptId = [];\n\n                //普通灵精\n                _this.spiritId = [];\n\n                //widget零件保存的content id\n                //高级精灵动画\n                _this.widgetId = [];\n\n                //复杂精灵动画\n                _this.compSpriteId = [];\n\n                //默认canvas容器的层级\n                //取精灵动画最高层级\n                //2016.2.25\n                _this.containerIndex = 1;\n\n                /**\r\n                 * cid=>wid\r\n                 * 对应的pixi对象容器\r\n                 * @type {Object}\r\n                 */\n                _this.collections = {};\n                return _this;\n        }\n\n        return Factory;\n}(_index.Observer);\n\nexports.default = Factory;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/depend/factory.js\n ** module id = 122\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (baseProto) {\n\n    /**\r\n     * 对象实例内部构建\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.checkInstanceTasks = function (taskName) {\n        var tasksObj;\n        if (tasksObj = this.createRelated.cacheTasks[taskName]) {\n            tasksObj.runSuspendTasks();\n            return true;\n        }\n    };\n\n    /**\r\n     * 获取页面数据\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.baseData = function () {\n        return this._dataCache[this.pageType];\n    };\n\n    /**\r\n     * 获取热点数据信息\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.baseActivits = function () {\n        return this._dataCache['activitys'];\n    };\n\n    /**\r\n     * 获取自动运行数据\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.baseAutoRun = function () {\n        var autoRunDas = this._dataCache['autoRunDas'];\n        return autoRunDas && autoRunDas;\n    };\n\n    /**\r\n     * 获取chapterid\r\n     * @param  {[type]} pid [description]\r\n     * @return {[type]}     [description]\r\n     */\n    baseProto.baseGetPageId = function (pid) {\n        return this.baseData(pid)['_id'];\n    };\n\n    /**\r\n     * 找到对象的content对象\r\n     * @param  {[type]}   contentId [description]\r\n     * @param  {Function} callback  [description]\r\n     * @return {[type]}             [description]\r\n     */\n    baseProto.baseGetContentObject = function (contentId) {\n        var contentsObj;\n        if (contentsObj = this._contentsCollector[contentId]) {\n            return contentsObj;\n        } else {\n            //查找浮动母版\n            return this.floatContents.Master[contentId];\n        }\n    };\n\n    /**\r\n     * Xut.Content.show/hide 针对互斥效果增加接口\r\n     * 扩充，显示，隐藏，动画控制接口\r\n     * @param  {[type]} name [description]\r\n     * @return {[type]}      [description]\r\n     */\n    baseProto.baseContentMutex = function (contentId, type) {\n        var contentObj,\n            base = this;\n        if (contentObj = base.baseGetContentObject(contentId)) {\n\n            var element = contentObj.$contentProcess.view ? contentObj.$contentProcess.view : contentObj.$contentProcess;\n\n            var handle = {\n                'Show': function Show() {\n                    if (contentObj.type === 'dom') {\n                        element.css({\n                            'display': 'blcok',\n                            'visibility': 'visible'\n                        }).prop(\"mutex\", false);\n                    } else {\n                        element.visible = true;\n                        console.log('show');\n                    }\n                },\n                'Hide': function Hide() {\n                    if (contentObj.type === 'dom') {\n                        element.css({\n                            'display': 'none',\n                            'visibility': 'hidden'\n                        }).prop(\"mutex\", true);\n                    } else {\n                        console.log('hide');\n                        element.visible = false;\n                    }\n                },\n                'StopAnim': function StopAnim() {\n                    contentObj.stopAnims && contentObj.stopAnims();\n                }\n            };\n            handle[type]();\n        }\n    };\n\n    //content接口\n    _.each([\"Get\", \"Specified\"], function (type) {\n        baseProto['base' + type + 'Content'] = function (data) {\n            switch (type) {\n                case 'Get':\n                    return this._abActivitys.get();\n                case 'Specified':\n                    return this._abActivitys.specified(data);\n            }\n        };\n    });\n\n    //components零件类型处理\n    //baseGetComponent\n    //baseRemoveComponent\n    //baseRegisterComponent\n    //baseSpecifiedComponent\n    _.each([\"Get\", \"Remove\", \"Register\", \"Specified\"], function (type) {\n        baseProto['base' + type + 'Component'] = function (data) {\n            switch (type) {\n                case 'Register':\n                    return this._components.register(data);\n                case 'Get':\n                    return this._components.get();\n                case 'Specified':\n                    return this._components.specified(data);\n                case 'Remove':\n                    return this._components.remove();\n            }\n        };\n    });\n\n    /**\r\n     *  运行辅助对象事件\r\n     * @param  {[type]} activityId  [description]\r\n     * @param  {[type]} outCallBack [description]\r\n     * @param  {[type]} actionName  [description]\r\n     * @return {[type]}             [description]\r\n     */\n    baseProto.baseAssistRun = function (activityId, outCallBack, actionName) {\n        var activity;\n        if (activity = this._abActivitys) {\n            _.each(activity.get(), function (contentObj, index) {\n                if (activityId == contentObj.activityId) {\n                    if (actionName == 'Run') {\n                        contentObj.runEffects(outCallBack, true);\n                    }\n                    if (actionName == 'Stop') {\n                        contentObj.stopEffects(outCallBack);\n                    }\n                }\n            }, this);\n        }\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/internal/data-api.js\n ** module id = 123\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (baseProto) {\n\n    /**\r\n     * 销毁页面对象\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.baseDestroy = function () {\n\n        //清理图片缓存\n        //读库快速退出模式下报错修正\n        try {\n            this.element.hide().find('img').each(function (aaa, img) {\n                img.src = 'images/icons/clearmem.png';\n            });\n        } catch (e) {\n            console.log('销毁图片出错');\n        }\n\n        //流式布局对象\n        //2016.9.10\n        var _flows = this._flows.get();\n        if (_flows.length) {\n            _flows.forEach(function (flowObj) {\n                flowObj.destroy();\n                flowObj = null;\n            });\n            this._flows = null;\n        }\n\n        //清理线程任务块\n        var cacheTasks = void 0,\n            key = void 0,\n            tasks = void 0;\n        if (cacheTasks = this.createRelated.cacheTasks) {\n            for (key in cacheTasks) {\n                if (tasks = cacheTasks[key]) {\n                    tasks.clearReference();\n                }\n            }\n        }\n\n        //浮动对象\n        var floatMaterContents = this.floatContents.Master;\n\n        //是否有浮动对象\n        var hasFloatMater = !_.isEmpty(floatMaterContents);\n\n        //清理content类型对象\n        var contents = void 0;\n        if (contents = this._abActivitys.get()) {\n            contents.forEach(function (contentObj) {\n                contentObj.destroy(function (destroyObj) {\n                    //如果不是浮动对象,清理元素引用\n                    if (!hasFloatMater || destroyObj && !floatMaterContents[destroyObj.id]) {\n                        destroyObj.$contentProcess = null;\n                    }\n                });\n            });\n        }\n\n        //清除母版浮动容器\n        if (hasFloatMater && this.floatContents.MasterContainer) {\n            this.floatContents.MasterContainer.remove();\n        }\n\n        //清除浮动页面对象\n        if (this.floatContents.Page && this.floatContents.PageContainer) {\n            this.floatContents.PageContainer.remove();\n        }\n\n        //清理零件类型对象\n        var _components = void 0;\n        if (_components = this.baseGetComponent()) {\n            _components.length && _components.forEach(function (componentObj) {\n                componentObj.destroy && componentObj.destroy();\n            });\n        }\n\n        //多事件销毁\n        (0, _multievent.destroy)(this);\n\n        //伪li节点\n        if (this.pseudoElement) {\n            this.pseudoElement = null;\n        }\n\n        //移除li容器节点节点\n        this.element.remove();\n        this.root = null;\n        this.element = null;\n    };\n};\n\nvar _multievent = require('../depend/multievent');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/internal/destroy.js\n ** module id = 124\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (baseProto) {\n\n    /**\r\n     * 初始化多线程任务\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.initState = function (options) {\n\n        var instance = this;\n\n        _.extend(instance, options);\n\n        /**\r\n         * 数据缓存容器\r\n         * @type {Object}\r\n         */\n        this._dataCache = {};\n        this.scenarioId = this.chapterDas.seasonId;\n        this.chapterId = this.chapterDas._id;\n\n        /**\r\n         * 是否开启多线程,默认开启\r\n         * 如果是非线性，则关闭多线程创建\r\n         * 启动 true\r\n         * 关闭 false\r\n         * @type {[type]}\r\n         */\n        this.isMultithread = this.multiplePages ? true : false;\n\n        //母版处理\n        if (instance.pageType === 'master') {\n            this.isMaster = true;\n        }\n\n        //canvas模式\n        this.canvasRelated = new _factory2.default();\n\n        /**\r\n         * 初始化任务\r\n         */\n        (0, _tasks2.default)(instance);\n\n        /**\r\n         * 内部钩子相关\r\n         * 监听状态的钩子\r\n         * 注册所有content对象管理\r\n         * 收集所有content对象\r\n         * 构建li主结构后,即可翻页\r\n         * 构建所有对象完毕后处理\r\n         */\n\n        /**\r\n         * 抽象activtiys合集,用于关联各自的content\r\n         * 划分各自的子作用域\r\n         * 1对多的关系\r\n         * @type {Collection}\r\n         */\n        this._abActivitys = new _collection2.default();\n\n        /**\r\n         * widget热点处理类\r\n         * 只存在当前页面\r\n         * 1 iframe零件\r\n         * 2 页面零件\r\n         * @type {Collection}\r\n         */\n        this._components = new _collection2.default();\n\n        /**\r\n         * 缓存所有的content对象引用\r\n         * 1对1的关系\r\n         * @type {Object}\r\n         */\n        this._contentsCollector = {};\n\n        /**\r\n         * 2016.9.7\r\n         * flow热点对象\r\n         * @type {Collection}\r\n         */\n        this._flows = new _collection2.default();\n\n        /**\r\n         * 浮动对象\r\n         * 1 母版中\r\n         * 2 页面中\r\n         * 页面中是最高的\r\n         * [floatContents description]\r\n         * @type {Object}\r\n         */\n        var floatContents = this.floatContents = {\n\n            /**\r\n             * 页面浮动对象容器\r\n             * @type {[type]}\r\n             */\n            PageContainer: null,\n\n            /**\r\n             * 浮动页面对象\r\n             * @type {Object}\r\n             */\n            Page: {},\n\n            /**\r\n             * 浮动母版容器\r\n             */\n            MasterContainer: null,\n\n            /**\r\n             * 浮动母版的content对象\r\n             * 用于边界切换,自动加上移动\r\n             * @type {Object}\r\n             *     1：Object {}      //空对象,零件\r\n             *     2: PPTeffect  {}  //行为对象\r\n             */\n            Master: {}\n        };\n\n        /**\r\n         * 对象的处理情况的内部钩子方法\r\n         * @type {Object}\r\n         */\n        this.listenerHooks = {\n\n            /**\r\n             * 注册抽象Activity类content(大类,总content对象)\r\n             * @param  {[type]} contentsObjs [description]\r\n             * @return {[type]}              [description]\r\n             */\n            registerAbstractActivity: function registerAbstractActivity(contentsObjs) {\n                instance._abActivitys.register(contentsObjs);\n            },\n\n\n            /**\r\n             * 收集器\r\n             * @type {Object}\r\n             */\n            collector: {\n                //搜集所有的content(每一个content对象)\n                //因为content多页面共享的,所以content的合集需要保存在pageMgr中（特殊处理）\n                contents: function contents(pid, id, contentScope) {\n                    var scope = instance.baseGetContentObject[id];\n                    //特殊处理,如果注册了事件ID,上面还有动画,需要覆盖\n                    if (scope && scope.isBindEventHooks) {\n                        instance._contentsCollector[id] = contentScope;\n                    }\n                    if (!scope) {\n                        instance._contentsCollector[id] = contentScope;\n                    }\n                },\n\n\n                //2014.11.7\n                //新概念，浮动页面对象\n                //用于是最顶层的，比母版浮动对象还要高\n                //所以这个浮动对象需要跟随页面动\n                floatPages: function floatPages(data) {\n                    //浮动页面对象容器\n                    var contentObj = void 0;\n                    floatContents.PageContainer = data.container;\n                    _.each(data.ids, function (id) {\n                        if (contentObj = instance.baseGetContentObject(id)) {\n                            //初始视察坐标\n                            if (contentObj.parallax) {\n                                contentObj.parallaxOffset = contentObj.parallax.parallaxOffset;\n                            }\n                            floatContents.Page[id] = contentObj;\n                        } else {\n                            console.log('页面浮动对象找不到');\n                        }\n                    });\n                },\n\n\n                //浮动母版对象\n                //1 浮动的对象是有动画数据或者视觉差数据\n                //2 浮动的对象是用于零件类型,这边只提供创建\n                //  所以需要制造一个空的容器，用于母版交界动\n                floatMaters: function floatMaters(data) {\n                    var prefix = void 0,\n                        contentObj = void 0,\n                        contentProcess = void 0,\n                        contentsFragment = void 0;\n                    //浮动容器\n                    floatContents.MasterContainer = data.container;\n                    //浮动对象\n                    _.each(data.ids, function (id) {\n                        //转化成实际操作的浮动对象,保存\n                        if (contentObj = instance.baseGetContentObject(id)) {\n                            //初始视察坐标\n                            if (contentObj.parallax) {\n                                contentObj.parallaxOffset = contentObj.parallax.parallaxOffset;\n                            }\n                            floatContents.Master[id] = contentObj;\n                        } else {\n                            Xut.plat.isBrowser && console.log('浮动母版对象数据不存在原始对象,制作伪对象母版移动', id);\n                            //获取DOM节点\n                            if (contentsFragment = instance.createRelated.cacheTasks.contents.contentsFragment) {\n                                prefix = 'Content_' + instance.pid + \"_\";\n                                _.each(contentsFragment, function (dom) {\n                                    var makePrefix = prefix + id;\n                                    if (dom.id == makePrefix) {\n                                        contentProcess = dom;\n                                    }\n                                });\n                            }\n                            //制作一个伪数据\n                            //作为零件类型的空content处理\n                            floatContents.Master[id] = {\n                                id: id,\n                                pid: instance.pid,\n                                $contentProcess: $(contentProcess),\n                                'empty': true //空类型\n                            };\n                        }\n                    });\n                }\n            },\n\n            /**\r\n             * 多事件钩子\r\n             * 执行多事件绑定\r\n             * @param  {[type]} eventRelated [description]\r\n             * @return {[type]}              [description]\r\n             */\n            eventBinding: function eventBinding(eventRelated) {\n                (0, _multievent.create)(instance, eventRelated);\n            }\n        };\n    };\n};\n\nvar _multievent = require('../depend/multievent');\n\nvar _collection = require('../depend/collection');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _tasks = require('../threadtask/tasks');\n\nvar _tasks2 = _interopRequireDefault(_tasks);\n\nvar _factory = require('../depend/factory');\n\nvar _factory2 = _interopRequireDefault(_factory);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/internal/initstate.js\n ** module id = 125\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (baseProto) {\n\n    /**\r\n     * 开始调用任务\r\n     * dispatch=>index=>create=>startThreadTask\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.startThreadTask = function (flipOver, callback) {\n\n        //制作回调\n        //如果是快速翻页,立刻调用\n        //构建container调用preforkComplete\n        this.createRelated.preforkComplete = function (context) {\n            return function () {\n                //1 滑动允许打断创建\n                //2 所有继续分解任务\n                flipOver ? callback() : context._checkTasksCreate(callback);\n            };\n        }(this);\n\n        //继续构建任务\n        this.dispatchTasks();\n    };\n\n    /**\r\n     * 任务调度\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.dispatchTasks = function () {\n        var threadtasks = void 0;\n        if (threadtasks = this.threadtasks[this.createRelated.nextRunTask]) {\n            threadtasks();\n        }\n    };\n\n    /**\r\n     * 检测任务是否完成\r\n     * page => autoRun中需要保证任务完成后才能执行\r\n     * 快速翻页中遇到\r\n     * actTasksCallback 活动任务完成\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.checkThreadTask = function (actTasksCallback) {\n        var _this = this;\n\n        this.isAutoRun = true;\n        this._checkTasksCreate(function () {\n            _this.isAutoRun = false;\n            actTasksCallback();\n        });\n    };\n\n    /**\r\n     * 开始执行下一个线程任务,检测是否中断\r\n     * outSuspendTasks,\r\n     * outNextTasks\r\n     * taskName\r\n     * @return {[type]} [description]\r\n     */\n    baseProto.nextTasks = function (callback) {\n        this._asyTasks({\n            suspendCallback: function suspendCallback() {\n                // console.log('@@@@@@@@@@中断创建任务 ' + callback.taskName + ' @@@@@@@@@@@', this.pid + 1, this.element)\n                callback.outSuspendTasks && callback.outSuspendTasks();\n            },\n            nextTaskCallback: function nextTaskCallback() {\n                callback.outNextTasks && callback.outNextTasks();\n            }\n        }, callback.interrupt);\n    };\n\n    /**\r\n     * 设置任务中断\r\n     */\n    baseProto.setTaskSuspend = function () {\n        this.isAutoRun = false;\n        this.canvasRelated.isTaskSuspend = true;\n        this.createRelated.preCreateTasks = false;\n        this.createRelated.tasksHang = null;\n    };\n\n    /**\r\n     * 后台预创建任务\r\n     * @param  {[type]} tasksTimer [时间间隔]\r\n     * @return {[type]}            [description]\r\n     */\n    baseProto.createPreforkTasks = function (callback, isPreCreate) {\n        var self = this;\n        //2个预创建间隔太短\n        //背景预创建还在进行中，先挂起来等待\n        if (this.createRelated.preCreateTasks) {\n            this.createRelated.tasksHang = function (callback) {\n                return function () {\n                    self._checkTasksCreate(callback);\n                };\n            }(callback);\n            return;\n        }\n\n        /**\r\n         * 翻页完毕后\r\n         * 预创建背景\r\n         */\n        if (isPreCreate) {\n            this.createRelated.preCreateTasks = true;\n        }\n\n        this._checkTasksCreate(callback);\n    };\n\n    /**\r\n     * 自动运行：检测是否需要开始创建任务\r\n     * 1 如果任务全部完成了毕\r\n     * 2 如果有中断任务,就需要继续创建未完成的任务\r\n     * 3 如果任务未中断,还在继续创建\r\n     * currtask 是否为当前任务，加速创建\r\n     */\n    baseProto._checkTasksCreate = function (callback, context) {\n\n        //如果任务全部完成\n        if (this.createRelated.nextRunTask === 'complete') {\n            return callback.call(context);\n        }\n\n        var self = this;\n\n        //开始构未完成的任务\n        this._cancelTaskSuspend();\n\n        //完毕回调\n        this.createRelated.createTasksComplete = function () {\n            callback.call(context);\n        };\n\n        //派发任务\n        this.nextTasks({\n            outNextTasks: function outNextTasks() {\n                self.dispatchTasks();\n            }\n        });\n    };\n\n    /**\r\n     * 取消任务中断\r\n     * @return {[type]} [description]\r\n     */\n    baseProto._cancelTaskSuspend = function () {\n        this.canvasRelated.isTaskSuspend = false;\n    };\n\n    /**\r\n     * 检测任务是否需要中断\r\n     * @return {[type]} [description]\r\n     */\n    baseProto._checkTaskSuspend = function () {\n        return this.canvasRelated.isTaskSuspend;\n    };\n\n    /**\r\n     * 多线程检测\r\n     * @return {[type]} [description]\r\n     */\n    baseProto._multithreadCheck = function (callbacks, interrupt) {\n        var _this2 = this;\n\n        var check = function check() {\n            if (_this2._checkTaskSuspend()) {\n                _this2.tasksTimeOutId && clearTimeout(_this2.tasksTimeOutId);\n                callbacks.suspendCallback.call(_this2);\n            } else {\n                callbacks.nextTaskCallback.call(_this2);\n            }\n        };\n\n        var next = function next() {\n            _this2.tasksTimeOutId = setTimeout(function () {\n                check();\n            }, _this2.canvasRelated.tasksTimer);\n        };\n\n        //自动运行页面构建\n        if (this.isAutoRun) {\n            //自动运行content中断检测 打断一次\n            if (interrupt) {\n                next();\n            } else {\n                check();\n            }\n        } else {\n            //后台构建\n            next();\n        }\n    };\n\n    /**\r\n     * 任务队列挂起\r\n     * nextTaskCallback 成功回调\r\n     * suspendCallback  中断回调\r\n     * @return {[type]} [description]\r\n     */\n    baseProto._asyTasks = function (callbacks, interrupt) {\n\n        //如果关闭多线程,不检测任务调度\n        if (!this.isMultithread) {\n            return callbacks.nextTaskCallback.call(this);\n        }\n\n        //多线程检测\n        this._multithreadCheck(callbacks, interrupt);\n    };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/internal/thread-api.js\n ** module id = 126\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _cache = require('./cache');\n\nvar _cache2 = _interopRequireDefault(_cache);\n\nvar _index = require('./container/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./background/index');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _index5 = require('./contents/index');\n\nvar _index6 = _interopRequireDefault(_index5);\n\nvar _index7 = require('./component/index');\n\nvar _index8 = _interopRequireDefault(_index7);\n\nvar _index9 = require('./flow/index');\n\nvar _index10 = _interopRequireDefault(_index9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 解析canvas配置\r\n * contentMode 分为  0 或者 1\r\n * 1 是dom模式\r\n * 0 是canvas模式\r\n * 以后如果其余的在增加\r\n * 针对页面chapter中的parameter写入 contentMode   值为 1\r\n * 针对每一个content中的parameter写入 contentMode 值为 1\r\n * 如果是canvas模式的时候，同时也是能够存在dom模式是\r\n * @return {[type]} [description]\r\n */\nvar parseMode = function parseMode(pageData, base) {\n    var parameter = pageData.parameter;\n    if (parameter) {\n        try {\n            parameter = JSON.parse(parameter);\n            if (parameter && parameter.contentMode && parameter.contentMode == 1) {\n                //\b非强制dom模式\n                if (!Xut.config.onlyDomMode) {\n                    //启动dom模式\n                    base.canvasRelated.enable = true;\n                }\n            }\n        } catch (e) {\n            console.log('JSON错误,chpterId为', base.chapterId, parameter);\n        }\n    }\n};\n\n/**\r\n * 分配Container构建任务\r\n * 1 同步数据\r\n * 2 构建容器\r\n * 3 给出构建回调,这里不能中断,翻页必须存在节点\r\n * 4 等待之后自动创建或者后台空闲创建之后的任务\r\n * @return {[type]} [description]\r\n */\nexports.default = {\n\n    /**\r\n     * 主容器\r\n     */\n    'Container': function Container(taskCallback, base) {\n        //同步数据\n        _cache2.default.call(base, [base.pid], function () {\n            var pageData = base.baseData();\n            parseMode(pageData, base);\n            (0, _index2.default)({\n                'rootNode': base.root,\n                'prefix': base.pageType + \"-\" + (base.pageIndex + 1) + \"-\" + base.chapterId,\n                'pageType': base.pageType,\n                'pid': base.pid,\n                'baseData': pageData,\n                'virtualOffset': base.virtualOffset,\n                'initTransformParameter': base.createRelated.initTransformParameter,\n                'userStyle': base.userStyle //创建自定义style\n            }, taskCallback);\n        });\n    },\n\n\n    /**\r\n     * 流式排版\r\n     */\n    'Flow': function Flow(taskCallback, base) {\n        (0, _index10.default)(base, taskCallback);\n    },\n\n\n    /**\r\n     *  分配背景构建任务\r\n     *    1 构建数据与结构,执行中断检测\r\n     *    2 绘制结构,执行回调\r\n     *\r\n     *  提供2组回调\r\n     *    1 构建数据结构 suspendCallback\r\n     *    2 执行innerhtml构建完毕 successCallback\r\n     */\n    'Background': function Background(taskCallback, base) {\n\n        if (base.checkInstanceTasks('background')) {\n            return;\n        }\n\n        var data = base.baseData(base.pid),\n\n        //构建中断回调\n        suspendCallback = function suspendCallback(innerNextTasks, innerSuspendTasks) {\n            base.nextTasks({\n                'taskName': '内部background',\n                'outSuspendTasks': innerSuspendTasks,\n                'outNextTasks': innerNextTasks\n            });\n        },\n\n        //获取数据成功回调\n        successCallback = function successCallback() {\n            taskCallback();\n        };\n\n        base.createRelated.cacheTasks['background'] = new _index4.default(base.getElement(), data, suspendCallback, successCallback);\n    },\n\n\n    /**\r\n     * 分配Components构建任务\r\n     * @return {[type]} [description]\r\n     */\n    'Components': function Components(taskCallback, base) {\n\n        if (base.checkInstanceTasks('components')) {\n            return;\n        }\n\n        var chapterDas = base.chapterDas,\n            baseData = base.baseData(),\n\n        //构建中断回调\n        suspendCallback = function suspendCallback(innerNextTasks, innerSuspendTasks) {\n            base.nextTasks({\n                'taskName': '内部widgets',\n                'outSuspendTasks': innerSuspendTasks,\n                'outNextTasks': innerNextTasks\n            });\n        },\n\n        //获取数据成功回调\n        successCallback = function successCallback() {\n            taskCallback();\n        };\n\n        base.createRelated.cacheTasks['components'] = new _index8.default({\n            'rootNode': base.getElement(),\n            'nodes': chapterDas['nodes'],\n            'pageOffset': chapterDas['pageOffset'],\n            'activitys': base.baseActivits(),\n            'chpaterData': baseData,\n            'chapterId': baseData['_id'],\n            'pid': base.pid,\n            'pageType': base.pageType,\n            'virtualOffset': base.virtualOffset\n        }, suspendCallback, successCallback);\n    },\n\n\n    /**\r\n     * 分配contetns构建任务\r\n     * @return {[type]} [description]\r\n     */\n    'Contents': function Contents(taskCallback, base) {\n\n        //通过content数据库为空处理\n        if (Xut.data.preventContent) {\n            return taskCallback();\n        }\n\n        if (base.checkInstanceTasks('contents')) {\n            return;\n        }\n\n        var chapterDas = base.chapterDas,\n            baseData = base.baseData(),\n            chapterId = baseData['_id'],\n            activitys = base.baseActivits(),\n\n\n        //生成钩子\n        // collector                : function (pageIndex, id, contentScope) {\n        // eventBinding             : function () { [native code] }\n        // floatMaters              : function (masters){\n        // registerAbstractActivity : function (pageIndex, type, contentsObjs) {\n        // successCallback          : function () {\n        // suspendCallback          : function (taskName, innerNextTasks, innerSuspendTasks) {\n        pageBaseHooks = _.extend({}, {\n            //构建中断回调\n            suspend: function suspend(taskName, innerNextTasks, innerSuspendTasks) {\n                //如果是当前页面构建,允许打断一次\n                var interrupt;\n                if (base.isAutoRun && taskName === 'strAfter') {\n                    interrupt = true;\n                }\n                base.nextTasks({\n                    'interrupt': interrupt,\n                    'taskName': '内部contents',\n                    'outSuspendTasks': innerSuspendTasks,\n                    'outNextTasks': innerNextTasks\n                });\n            },\n            //获取数据成功回调\n            success: function success() {\n                taskCallback();\n            }\n        }, base.listenerHooks);\n\n        base.createRelated.cacheTasks['contents'] = new _index6.default({\n            'canvasRelated': base.canvasRelated,\n            'rootNode': base.root,\n            'element': base.getElement(),\n            'pageType': base.pageType,\n            'nodes': chapterDas['nodes'],\n            'pageOffset': chapterDas['pageOffset'],\n            'activitys': activitys,\n            'chpaterData': baseData,\n            'chapterId': chapterId,\n            'pageIndex': base.pageIndex,\n            'pid': base.pid,\n            'pageBaseHooks': pageBaseHooks,\n            'virtualOffset': base.virtualOffset,\n            'initTransformParameter': base.createRelated.initTransformParameter\n        });\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/assign.js\n ** module id = 127\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TaskBackground;\n\nvar _option = require('../../../util/option');\n\nvar _nexttick = require('../../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar maskBoxImage = Xut.style.maskBoxImage;\n\n/**\r\n * 构建背景类\r\n * @param {[type]} rootNode             [根节点]\r\n * @param {[type]} data                 [数据]\r\n * @param {[type]} suspendCallback      [中断回调]\r\n * @param {[type]} successCallback      [description]\r\n */\nfunction TaskBackground(rootNode, data, suspendCallback, successCallback) {\n    var layer,\n        suspendTasks,\n        nextTasks,\n        self = this,\n        content = data[\"md5\"],\n        isSVGContent = /.svg$/i.test(content) ? true : false;\n\n    this.callback = {\n        'suspendCallback': suspendCallback,\n        'successCallback': successCallback\n    };\n\n    //iboosk节点预编译\n    //在执行的时候节点已经存在\n    //不需要在创建\n    if (Xut.IBooks.runMode()) {\n        //找到背景节点\n        var $element = rootNode.find('.multilayer');\n        successCallback();\n        return;\n    }\n\n    //背景是否需要SVG解析\n    this.parseMaster(isSVGContent, content, function (svgContents) {\n\n        //构建背景\n        var backgroundStr = createMaster(svgContents, data);\n        if (backgroundStr) {\n            svgContents = null;\n            self.compileSuspend($(backgroundStr), rootNode);\n        } else {\n            successCallback();\n        }\n    });\n}\n\nTaskBackground.prototype = {\n\n    clearReference: function clearReference() {},\n\n    //构建中断函数\n    compileSuspend: function compileSuspend($background, rootNode) {\n\n        var nextTasks,\n            suspendTasks,\n            self = this;\n\n        //继续执行\n        nextTasks = function nextTasks() {\n            (0, _nexttick2.default)({\n                'container': rootNode,\n                'content': $background\n            }, function () {\n                self.clearReference();\n                self.callback.successCallback();\n            });\n        };\n\n        //中断方法\n        suspendTasks = function suspendTasks() {\n            self.suspendQueues = [];\n            self.suspendQueues.push(function () {\n                nextTasks();\n            });\n        };\n\n        self.callback.suspendCallback(nextTasks, suspendTasks);\n    },\n\n    //运行被阻断的线程任务\n    runSuspendTasks: function runSuspendTasks() {\n        if (this.suspendQueues) {\n            var fn;\n            if (fn = this.suspendQueues.pop()) {\n                fn();\n            }\n            this.suspendQueues = null;\n        }\n    },\n\n    //解析SVG背景\n    parseMaster: function parseMaster(isSVGContent, content, callback) {\n        if (isSVGContent) {\n            //背景需要SVG解析的\n            (0, _option.readFile)(content, function (svgContents) {\n                callback(svgContents);\n            });\n        } else {\n            callback('');\n        }\n    }\n};\n\n/**\r\n * 修正尺寸\r\n * @return {[type]} [description]\r\n */\n\nfunction fixSize(data) {\n    //缩放比\n    var proportion = Xut.config.proportion;\n    data.path = Xut.config.pathAddress;\n\n    if (data.imageWidth) {\n        data.imageWidth = data.imageWidth * proportion.width;\n    }\n    if (data.imageHeight) {\n        data.imageHeight = data.imageHeight * proportion.height;\n    }\n    if (data.imageLeft) {\n        data.imageLeft = data.imageLeft * proportion.left;\n    }\n    if (data.imageTop) {\n        data.imageTop = data.imageTop * proportion.top;\n    }\n}\n\n/*********************************************************************\r\n *                创建分层背景图层\r\n *                master               - 母版\r\n *                imageLayer,imageMask - 图像层图\r\n *                md5                  - 文字层图                                                                                     *\r\n **********************************************************************/\n\nfunction createMaster(svgContent, data) {\n    var imageLayer,\n        maskLayer,\n        restr = '',\n        imageLayerData = data[\"imageLayer\"],\n        //图片层\n    imageMaskData = data[\"imageMask\"],\n        //蒙版层\n    backImageData = data[\"backImage\"],\n        //真实图片层\n    backMaskData = data[\"backMask\"],\n        //真实蒙版层\n    masterData = data[\"master\"],\n        //母板\n    backText = data['md5'],\n        //背景文字\n    pptMaster = data['pptMaster']; //母板PPTID\n\n\n    //=======================未分层结构===========================\n    //\n    //       只有SVG数据，没有层次数据 ,不是视觉差\n    //\n    // ============================================================\n    if (backText && !masterData && !pptMaster && !imageLayerData) {\n        return svgContent ? '<div class=\"multilayer\" data-multilayer =\"true\" style=\"width:100%; height:100%;position:absolute;left:0;top:0;z-index:0;\">' + svgContent + '</div>' : '';\n    }\n\n    //=========================分层结构============================\n    //\n    //   1 分母板 文字层 背景 蒙版\n    //   2 视觉差分层处理\n    //\n    //=============================================================\n\n    //修正尺寸\n    fixSize(data);\n\n    //============= 组层背景图开始 ====================\n\n    restr = '<div class=\"multilayer\" data-multilayer =\"true\" style=\"width:100%; height:100%;position:absolute;left:0;top:0;z-index:0;\">';\n\n    //如果有母板数据,如果不是视觉差\n    if (masterData && !pptMaster) {\n        //母版图\n        restr += '<div class=\"master\" style=\"width:100%; height:100%;background-size:100% 100%;position:absolute;z-index:0;background-image:url({0});\"></div>';\n    }\n\n    //存在背景图\n    if (imageLayerData) {\n        //蒙版图（与背景图是组合关系）\n        maskLayer = data[\"imageMask\"] ? maskBoxImage + \":url(\" + data.path + data[\"imageMask\"] + \");\" : \"\";\n        //图片层\n        restr += '<div class=\"imageLayer\" style=\"width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:2;background-size:100% 100%;background-image:url({5});{6};\"></div>';\n    }\n\n    //新增的 真实背景图 默认全屏\n    if (backImageData) {\n        //计算出对页排版偏移值\n        var backImageOffset = function () {\n            var background,\n                pageSide = data['pageSide'];\n\n            switch (Number(pageSide)) {\n                case 1:\n                    background = 'background-position:0';\n                    break;\n                case 2:\n                    background = 'background-position:' + Xut.config.screenSize.width + 'px';\n                    break;\n            }\n\n            return background;\n        }();\n\n        if (backMaskData) {\n            //带蒙版\n            if (maskBoxImage != undefined) {\n                restr += '<div class=\"backImage\" style=\"width:{7};height:100%;position:absolute;z-index:1;background-size:100% 100%;background-image:url(' + data.path + backImageData + ');' + maskBoxImage + ':url(' + data.path + backMaskData + ');{8}\"></div>';\n            } else {\n                restr += '<canvas class=\"backImage edges\" height=' + document.body.clientHeight + ' width=' + document.body.clientWidth + '  style=\"width:{7};opacity:0;height:100%;background-size:100% 100%;position:absolute;z-index:1;-webkit-mask-box-image:url(' + data.path + backMaskData + ');{8}\" src=' + data.path + backImageData + ' mask=' + data.path + backMaskData + '></canvas>';\n            }\n        } else {\n            //图片层\n            restr += '<div class=\"backImage\" style=\"width:{7};height:100%;position:absolute;z-index:1;background-size:100% 100%;background-image:url(' + data.path + backImageData + ');{8}\"></div>';\n        }\n    }\n\n    //存在svg文字\n    if (backText) {\n        restr += '<div class=\"words\" style=\"width:100%;height:100%;top:0;left:0;position:absolute;z-index:3;\">{9}</div>';\n    }\n\n    restr += '</div>';\n\n    //============= 组层背景图结束 ====================\n\n    return String.format(restr, data.path + masterData, data.imageWidth, data.imageHeight, data.imageTop, data.imageLeft, data.path + imageLayerData, maskLayer, backImageOffset ? '200%' : '100%', backImageOffset ? backImageOffset : '', svgContent);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/background/index.js\n ** module id = 128\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (pid, callback) {\n    var fn = void 0,\n        base = this,\n        pageType = base.pageType;\n\n    //缓存数据\n    var addCacheDas = function addCacheDas(namespace, data) {\n        var key = void 0;\n        if (!base._dataCache[namespace]) {\n            base._dataCache[namespace] = data;\n        } else {\n            for (key in data) {\n                base._dataCache[namespace][key] = data[key];\n            }\n        }\n    };\n\n    //增加数据缓存\n    var addCache = function addCache(data, activitys, autoRunDas) {\n        addCacheDas(base.pageType, data); //挂载页面容器数据\n        addCacheDas('activitys', activitys); //挂载activitys数据\n        addCacheDas('autoRunDas', autoRunDas); //挂载自动运行数据\n    };\n\n    (0, _parser.query)(pageType, {\n        'pageIndex': pid,\n        'pageData': base.chapterDas,\n        'pptMaster': base.pptMaster\n    }, function (data, activitys, autoRunDas) {\n        addCache.apply(addCache, arguments);\n        callback(data);\n    });\n};\n\nvar _parser = require('../../manager/parser');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/cache.js\n ** module id = 129\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TaskComponents;\n\nvar _index = require('../../../directive/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _option = require('../../../util/option');\n\nvar _nexttick = require('../../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction TaskComponents(data, suspendCallback, successCallback) {\n\n    //预编译模式跳过创建\n    if (Xut.IBooks.runMode()) {\n        successCallback();\n        return;\n    }\n\n    if (data['activitys'].length) {\n        var str;\n        this.rootNode = data['rootNode'];\n        this.callback = {\n            'suspendCallback': suspendCallback,\n            'successCallback': successCallback\n        };\n        str = this.create(data);\n        this.compileSuspend(str);\n    } else {\n        successCallback();\n    }\n} /**\r\n   *  创建widgets对象任务片\r\n   *  state状态\r\n   *      0 未创建\r\n   *      1 正常创建\r\n   *      2 创建完毕\r\n   *      3 创建失败\r\n   */\n\n\nTaskComponents.prototype = {\n\n    clearReference: function clearReference() {\n        this.rootNode = null;\n    },\n\n    create: function create(data) {\n        var actType,\n            pageType = data.pageType,\n            createWidgets = data.activitys,\n            chpaterData = data.chpaterData,\n            chapterId = data.chapterId,\n            pid = data.pid,\n            virtualOffset = data.virtualOffset,\n            widgetRetStr = [];\n\n        function virtualCreate(actType, activityData) {\n            var scaleLeft = activityData.scaleLeft;\n            // 创建分布左边的对象\n            if (virtualOffset === 'left') {\n                if (scaleLeft < Xut.config.screenSize.width) {\n                    startCreate(actType, activityData);\n                }\n            }\n            //创建分布右边的对象\n            if (virtualOffset === 'right') {\n                if (scaleLeft > Xut.config.screenSize.width) {\n                    startCreate(actType, activityData);\n                }\n            }\n        }\n\n        //创建\n        function startCreate(actType, activityData) {\n            //创建DOM元素结构\n            //返回是拼接字符串\n            widgetRetStr.push(_index2.default[actType]['createDom'](activityData, chpaterData, chapterId, pid, Xut.zIndexlevel(), pageType));\n        }\n\n        //需要创建的数据结构\n        createWidgets.forEach(function (activityData, index) {\n\n            //创建类型\n            actType = activityData.actType || activityData.animation;\n\n            //特殊类型 showNote\n            if (!actType && activityData.note) {\n                activityData['actType'] = actType = \"ShowNote\";\n            }\n\n            switch (actType) {\n                case 'ShowNote':\n                case 'Action':\n                case 'Widget':\n                case 'Audio':\n                case 'Video':\n\n                    //缩放比\n                    activityData = (0, _option.reviseSize)(activityData);\n\n                    //处理虚拟模式创建\n                    if (Xut.config.virtualMode) {\n                        virtualCreate(actType, activityData);\n                    } else {\n                        startCreate(actType, activityData);\n                    }\n                    break;\n            }\n        });\n\n        return widgetRetStr.join(\"\");\n    },\n\n    /**\r\n     * 编译中断函数\r\n     * @return {[type]} [description]\r\n     */\n    compileSuspend: function compileSuspend(str) {\n\n        var nextTasks,\n            suspendTasks,\n            self = this;\n\n        //继续执行\n        nextTasks = function nextTasks() {\n            (0, _nexttick2.default)({\n                container: self.rootNode,\n                content: $(str)\n            }, function () {\n                self.clearReference();\n                self.callback.successCallback();\n            });\n        };\n\n        //中断方法\n        suspendTasks = function suspendTasks() {\n            self.suspendQueues = [];\n            self.suspendQueues.push(function () {\n                nextTasks();\n            });\n        };\n\n        self.callback.suspendCallback(nextTasks, suspendTasks);\n    },\n\n    //运行被阻断的线程任务\n    runSuspendTasks: function runSuspendTasks() {\n        if (this.suspendQueues) {\n            var fn;\n            if (fn = this.suspendQueues.pop()) {\n                fn();\n            }\n            this.suspendQueues = null;\n        }\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/component/index.js\n ** module id = 130\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (data, successCallback) {\n\n    var $element = void 0,\n        pseudoElement = void 0,\n        direction = void 0,\n        transform = void 0;\n\n    //iboosk编译\n    //在执行的时候节点已经存在\n    //不需要在创建\n    if (Xut.IBooks.runMode()) {\n        $element = $(\"#\" + data.prefix);\n        successCallback($element, pseudoElement);\n        return;\n    }\n\n    transform = data.initTransformParameter[0];\n    direction = data.initTransformParameter[1];\n\n    //创建的flip结构体\n    $element = createContainer(transform, data);\n\n    //如果启动了wordMode模式,查找伪li\n    if (Xut.config.virtualMode) {\n        pseudoElement = $element.find('div');\n    }\n\n    (0, _nexttick2.default)({\n        container: data.rootNode,\n        content: $element,\n        position: direction === 'before' ? 'first' : 'last'\n    }, function () {\n        successCallback($element, pseudoElement);\n    });\n};\n\nvar _index = require('../../../config/index');\n\nvar _nexttick = require('../../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n *  创建主容器任务片\r\n *  state状态\r\n *      0 未创建\r\n *      1 正常创建\r\n *      2 创建完毕\r\n *      3 创建失败\r\n */\nvar TANSFROM = Xut.style.transform;\n\nvar createli = function createli() {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var data = _ref.data;\n    var transform = _ref.transform;\n    var customStyle = _ref.customStyle;\n    var containerBackground = _ref.containerBackground;\n\n\n    var offsetLeft = 0;\n    var proportion = _index.config.proportion;\n    var calculate = proportion.calculateContainer();\n    var sWidth = calculate.width;\n    var pageType = data.pageType;\n    var virtualNode = '';\n\n    if (_index.config.virtualMode) {\n        if (data.virtualOffset === 'right') {\n            offsetLeft = -(_index.config.screenSize.width - proportion.offsetLeft);\n        }\n        virtualNode = '<div style=\"width:' + sWidth + 'px;left:' + offsetLeft + 'px;height:100%;position:relative\"></div>';\n    }\n\n    return String.styleFormat('<li id=\"' + data.prefix + '\"\\n            class=\"xut-flip\"\\n            data-map=\"' + data.pid + '\"\\n            data-pageType=\"' + pageType + '\"\\n            data-container=\"true\"\\n            style=\"overflow:hidden;\\n                ' + TANSFROM + ':' + transform + ';\\n                ' + containerBackground + customStyle + '\">\\n            ' + virtualNode + '\\n        </li>');\n};\n\n/**\r\n * 创建父容器li结构\r\n */\nvar createContainer = function createContainer(transform, data) {\n\n    var containerBackground = '';\n    var userStyle = data.userStyle;\n    var baseData = data.baseData;\n    var url = baseData.md5;\n\n    //chpater有背景，不是svg格式\n    if (!/.svg$/i.test(url)) {\n        containerBackground = 'background-image:url(' + _index.config.pathAddress + url + ');';\n    }\n\n    /**\r\n     * 自定义配置了样式\r\n     * 因为单页面跳槽层级的问题处理\r\n     */\n    var customStyle = '';\n    if (userStyle !== undefined) {\n        //解析自定义规则\n        _.each(userStyle, function (value, key) {\n            customStyle += key + ':' + value + ';';\n        });\n    }\n\n    return $(createli({\n        data: data,\n        transform: transform,\n        customStyle: customStyle,\n        containerBackground: containerBackground\n    }));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/container/index.js\n ** module id = 131\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parserRelated = undefined;\n\nvar _index = require(\"../../../util/index\");\n\n//零件类型,快速判断\n//新增content卷滚区域,所有JS零件content\n//类型选择,content有扩充的子类型\n//针对零件类型在category字段中的子分类\nvar widgetType = {}; /********************************************************\r\n                      *\r\n                      *\t数据过滤,去重算法\r\n                      *\tcontent数据解析息息相关的方法\r\n                      *\r\n                      *======================================================*/\n\n_.each(\"jsWidget content svgWidget canvasWidget path\".split(\" \"), function (key, name) {\n    widgetType[key] = true;\n});\n\n/**\r\n * 类型统一\r\n * @param  {[type]} activity [description]\r\n * @return {[type]}          [description]\r\n */\nfunction unifyType(activity) {\n    //满足条件统一为零件类型\n    return widgetType[activity.category] ? \"JsWidget\" : activity.actType;\n}\n\n/**\r\n * 创建事件容器\r\n * @param  {[type]} eventId [description]\r\n * @return {[type]}         [description]\r\n */\nfunction createEventContainer(relateds, eventId) {\n    if (!relateds.seasonRelated[eventId]) {\n        relateds.seasonRelated[eventId] = {};\n    }\n}\n\n/**\r\n * 配合出item中相关信息\r\n * 1.场景信息\r\n * 2.收费信息\r\n * @param  {[type]} tokens [description]\r\n * @return {[type]}        [description]\r\n */\nfunction adapterItemArrayRelated(relateds, activitys, tokens) {\n    //如果分解出节信息\n    var seasonId,\n        inAppValue,\n        chapterId,\n        values,\n        eventId = activitys.imageId;\n\n    _.each(['seasonId', 'Inapp', 'SearchBar', 'BookMarks'], function (type) {\n        values = tokens[type];\n        //如果有值\n        if (values !== undefined) {\n            //创建容器\n            createEventContainer(relateds, eventId);\n            switch (type) {\n                //跳转新场景信息\n                case 'seasonId':\n                    chapterId = tokens['chapterId'] || tokens['chapter'];\n                    relateds.seasonRelated[eventId] = {\n                        seasonId: values[0],\n                        chapterId: chapterId ? chapterId[0] : ''\n                    };\n                    break;\n                //收费信息,给事件上绑定收费接口\n                //0 收费 1 已收费\n                case 'Inapp':\n                    relateds.seasonRelated[eventId]['Inapp'] = values[0];\n                    break;\n                default:\n                    //搜索栏\n                    //书签\n                    relateds.seasonRelated[eventId][type] = eventId;\n                    break;\n            }\n        }\n    });\n}\n\n////////////\n//解析相关数据 //\n//解析每一条 Activitys 对应的数据结构\n////////////\nfunction parserRelated(compileActivitys, data) {\n\n    var activitys,\n        hookType,\n        resultsActivitys,\n        //结果结合\n    i = compileActivitys.length,\n        pageType = data.pageType,\n        pid = data.pid,\n\n\n    /**\r\n     * 相关数据合集\r\n     * @type {Object}\r\n     */\n    activityRelated = [],\n        //Activit合集相关数据信息\n    tempRelated = [],\n        //临时数据\n\n    /**\r\n     * 解析出来的相关信息\r\n     * @type {Object}\r\n     */\n    relateds = {\n        seasonRelated: {}, //节信息\n        containerRelated: [], //容器合集相关数据信息\n        eventRelated: {}, //多事件容器合集\n        partContentRelated: [] //卷滚conten只创建,不处理行为\n    };\n\n    /**\r\n     * 创建解析\r\n     * @param  {Function} callback [description]\r\n     * @return {[type]}            [description]\r\n     */\n    var createResolve = function createResolve(callback) {\n        return resolveContentToActivity(function (tokens) {\n            return callback(tokens);\n        }, activitys, pageType, pid);\n    };\n\n    /**\r\n     * 类型处理器\r\n     * 除去动画的其余处理类型\r\n     * @type {Object}\r\n     */\n    var hookResolve = {\n\n        /**\r\n         * 单独处理容器类型\r\n         * @param  {[type]} relateds [description]\r\n         * @return {[type]}          [description]\r\n         */\n        \"Container\": function Container() {\n            relateds.containerRelated.push(createResolve(function (tokens) {\n                return {\n                    'Container': tokens['Content']\n                };\n            }));\n        },\n\n        /**\r\n         * 多事件\r\n         * @param  {[type]} relateds [description]\r\n         * @return {[type]}          [description]\r\n         */\n        \"Contents\": function Contents() {\n            var item;\n            if (item = createResolve(function (tokens) {\n                return {\n                    'Contents': [tokens]\n                };\n            })[0]) {\n                //给content注册多个绑定事件\n                var eventId = activitys.imageId;\n                var eventData = {\n                    'eventContentId': eventId,\n                    'activityId': activitys._id,\n                    'registers': item['activity'],\n                    'eventType': activitys.eventType,\n                    'dragdropPara': activitys.para1 //拖拽对象\n                };\n                var isEvt = relateds.eventRelated['eventContentId->' + eventId];\n                if (isEvt) {\n                    isEvt.push(eventData);\n                } else {\n                    relateds.eventRelated['eventContentId->' + eventId] = [eventData];\n                }\n            }\n        },\n\n        /**\r\n         * 所有js零件\r\n         * @param  {[type]} relateds [description]\r\n         * @return {[type]}          [description]\r\n         */\n        \"JsWidget\": function JsWidget() {\n            var scrollContents = (0, _index.parseJSON)(activitys.itemArray);\n            if (_.isArray(scrollContents)) {\n                _.each(scrollContents, function (data) {\n                    relateds.partContentRelated.push(data.id);\n                });\n            } else {\n                relateds.partContentRelated.push(scrollContents.id);\n            }\n        }\n    };\n\n    /**\r\n     * 解析出当前页面的所有的Activit表\r\n     * 1个chpater页面 可以对应多个Activit表中的数据\r\n     * 1 Container 容器类型\r\n     * 2 page 类型\r\n     * 3 parallax 类型\r\n     * 4 Scenario 类型\r\n     * 5 content合集 contents处理\r\n     *\r\n     */\n    while (activitys = compileActivitys.shift()) {\n\n        //统一类型\n        hookType = unifyType(activitys);\n\n        //类型匹配\n        if (!hookResolve[hookType]\n        /////////////////\n        ///钩子事件\n        ////////////////\n        || hookResolve[hookType] && hookResolve[hookType](relateds)) {\n\n            /////////////////////\n            //Content类型处理 //\n            /////////////////////\n\n            //如果是动画表,视觉差表关联的content类型\n            resultsActivitys = createResolve(function (tokens) {\n\n                //解析itemArray字段中的相关的信息\n                adapterItemArrayRelated(relateds, activitys, tokens);\n\n                //解析表数据\n                switch (pageType) {\n                    case 'page':\n                        return parseTypeRelation(['Animation'], tokens);\n                    case 'master':\n                        //新增第三个参数，\n                        //视觉差支持所有content动画\n                        return parseTypeRelation(['Animation', 'Parallax'], tokens);\n                }\n            });\n\n            //如果有手动触发器,置于最后\n            if (activitys.imageId) {\n                tempRelated.push(resultsActivitys);\n            } else {\n                activityRelated.push(resultsActivitys);\n            }\n        }\n    }\n\n    //合并排序\n    if (tempRelated.length) {\n        activityRelated = activityRelated.concat(tempRelated);\n    }\n\n    /**\r\n     *\t过滤出与创建相关的content合集ID\r\n     *\treturn [\r\n     *\t\tcreateEventIds  主content列表 (用来绑定eventType事件)\r\n     *\t    createContentIds 合并所有content操作后,过滤掉重复的content,得到可以创建的content的ID合集\r\n     *\t]\r\n     *\r\n     * \twContentRelated  混入合并的数据\r\n     * partContentRelated 需要过滤的数据\r\n     */\n    // console.log(activityRelated.slice(0))\n    var createEventIds, createContentIds,\n    // cacheUUID = 'createRelevant-' + data.chapterId,\n    createRelevant;\n\n    //   createRelevant = contentCache[cacheUUID];\n\n    createRelevant = toRepeatCombineGroup(activityRelated, relateds.partContentRelated, pageType);\n\n    // //创建缓存\n    // if (!createRelevant) {\n    //     createRelevant = contentCache(cacheUUID, tog)\n    // }\n    // console.log(tog,createRelevant)\n\n    createEventIds = createRelevant[0];\n    createContentIds = createRelevant[1];\n\n    //如果存在过滤器\n    if (Xut.CreateFilter.size()) {\n        var filterEach = Xut.CreateFilter.each(data.chapterId);\n        if (filterEach) {\n            filterEach(createEventIds, function (indexOf) {\n                createEventIds.splice(indexOf, 1);\n            });\n            filterEach(createContentIds, function (indexOf) {\n                createContentIds.splice(indexOf, 1);\n            });\n            filterEach = null;\n        }\n    }\n\n    return _.extend(data, relateds, {\n        'createEventIds': createEventIds, //事件ID数\n        'createContentIds': createContentIds, //创建的content总ID数\n        'createActivitys': activityRelated\n    });\n};\n\n/**************************************************************************\r\n *\r\n * \t\t分组Content表中对应的多个Conte\r\n *   \t1：Animation表\r\n *    \t2: Parallax表\r\n *     \t3: seed种子合集 就是解析1：Animation表，Parallax表得到的数据\r\n *\r\n ****************************************************************************/\nfunction resolveContentToActivity(callback, activity, pageType, pid) {\n    var animContentIds,\n        paraContentIds,\n        parallaxRelated,\n        parallaxDas,\n        animRelated,\n        animationDas = '',\n        eventId = activity.imageId,\n\n    //需要分解的contentIds合集\n    // 1 动画表数据\t\tAnimation\n    // 2 视觉差数据     Parallax\n    // 3 超链接\t\t\tseasonId\n    // 4 收费\t\t\tInapp\n    tokens = tokenize(activity['itemArray']) || [],\n\n    //解析Animations,Parallaxs数据\n    //\tseed {\n    //\t\tAnimation:[data,Ids]\n    //\t\tParallax:[data,Ids]\n    //\t}\n    seed = callback(tokens),\n\n\n    //判断类型\n    type = Object.keys(seed)[0];\n\n    /**\r\n     * 去重事件ID\r\n     * original  原ID合集\r\n     * detection 需要检测去重的ID\r\n     *\r\n     */\n    function toRepeatContents(original) {\n        if (original && eventId) {\n            var indexOf = original.indexOf(eventId);\n            if (-1 !== indexOf) {\n                original.splice(indexOf, 1);\n            }\n        }\n    }\n\n    switch (type) {\n        //容器\n        case 'Container':\n            animContentIds = seed.Container;\n            toRepeatContents(animContentIds);\n            break;\n        //多事件处理\n        case 'Contents':\n            return seed.Contents;\n        default:\n            /**\r\n             * 如果是对象处理，\r\n             * 针对动画表，视觉差表,行为的处理\r\n             */\n            //需要创建的content合集\n            if (_.keys(seed).length) {\n                animRelated = seed.Animation;\n                parallaxRelated = seed.Parallax;\n                //页面模式\n                if (pageType === 'page') {\n                    if (animRelated) {\n                        animContentIds = animRelated.ids;\n                        animationDas = animRelated.das;\n                    }\n                } else {\n                    //视觉差存在视觉差表处理\n                    // console.log(1111,animRelated, parallaxRelated)\n                    //母版的动画数据\n                    if (animRelated) {\n                        animContentIds = animRelated.ids;\n                        animationDas = animRelated.das;\n                    }\n                    //母版的视察数据\n                    if (parallaxRelated) {\n                        paraContentIds = parallaxRelated.ids;\n                        parallaxDas = parallaxRelated.das;\n                    }\n                }\n\n                //如果id都存在\n                //合并\n                if (animContentIds && paraContentIds) {\n                    animContentIds = animContentIds.concat(paraContentIds);\n                }\n\n                //只存在视察\n                if (!animContentIds && paraContentIds) {\n                    animContentIds = paraContentIds;\n                }\n                toRepeatContents(animContentIds);\n            }\n            break;\n    }\n\n    //创建对象是层次关系\n    return {\n        'pageType': pageType,\n        'activity': activity,\n        'imageIds': eventId,\n        //data\n        'seed': {\n            'animation': animationDas,\n            'parallax': parallaxDas\n        },\n        //id\n        'ids': {\n            'content': animContentIds,\n            'parallax': paraContentIds\n        }\n    };\n}\n\n/************************************************************************\r\n *\r\n *     合并,过滤需要处理的content\r\n *     combineImageIds  可以创建的imageId合集，也就是content的合集,用来绑定自定义事件\r\n *     createContentIds 可以创建的content合集,过滤合并重复\r\n *\r\n * **********************************************************************/\nfunction toRepeatCombineGroup(compilerActivitys, mixFilterRelated, pageType) {\n    var ids,\n        contentIds,\n        needCreateContentIds,\n        imageIds,\n        activityRelated,\n        parallaxId,\n        combineItemIds = [],\n        combineImageIds = [],\n        i = compilerActivitys.length;\n\n    function pushCache(target, original, callback) {\n        var id,\n            i = original.length;\n        while (i--) {\n            id = Number(original[i]);\n            target.push(id);\n            callback && callback(id);\n        }\n    }\n\n    while (i--) {\n        //开始执行过滤操作\n        activityRelated = compilerActivitys[i];\n        ids = activityRelated.ids;\n        contentIds = ids.content;\n        parallaxId = ids.parallax; //浮动类型的对象\n        imageIds = activityRelated.imageIds;\n\n        //针对普通content对象\n        if (contentIds && contentIds.length) {\n            //如果不为空\n            pushCache(combineItemIds, contentIds);\n        }\n\n        //视察对象\n        if (parallaxId && parallaxId.length) {\n            //如果不为空\n            pushCache(combineItemIds, parallaxId);\n        }\n\n        //事件合集\n        if (imageIds) {\n            combineImageIds.push(Number(imageIds));\n        }\n    }\n\n    //混入外部合并了逻辑\n    if (mixFilterRelated && mixFilterRelated.length) {\n        _.each(mixFilterRelated, function (data) {\n            if (data) {\n                combineItemIds = combineItemIds.concat(data);\n            }\n        });\n    }\n\n    //过滤合并多个content数据\n    if (combineImageIds.length) {\n        needCreateContentIds = (0, _index.arrayUnique)(combineItemIds.concat(combineImageIds));\n    } else {\n        needCreateContentIds = (0, _index.arrayUnique)(combineItemIds);\n    }\n\n    //排序\n    needCreateContentIds = needCreateContentIds.sort(function (a, b) {\n        return a - b;\n    });\n\n    /**\r\n     * 合并创建信息\r\n     * 需要创建的事件\r\n     * 需要创建的所有对象\r\n     */\n    return [combineImageIds, needCreateContentIds];\n}\n\n/**\r\n * 解析指定类型数据\r\n * strengthenAnmin 视觉差增强动画表\r\n * @return {[type]}\r\n */\nfunction parseTypeRelation(tableName, tokenIds) {\n    var tokenId;\n    var itemData = {};\n    _.each(tableName, function (tName) {\n        if (tokenId = tokenIds[tName]) {\n            if (itemData[tName]) {\n                console.log('未处理解析同一个表');\n            } else {\n                itemData[tName] = inGroup(tName, tokenId);\n            }\n        }\n    });\n    return itemData;\n}\n\n/**\r\n * 分组\r\n * @return {[type]} [description]\r\n */\nfunction inGroup(tableName, contentIds) {\n    var k,\n        keyName,\n        data,\n        contentId,\n        temp = {},\n        das = [],\n        ids = [],\n        query = Xut.data.query;\n\n    _.each(contentIds, function (id) {\n        if (data = query(tableName, id)) {\n            contentId = data.contentId;\n            if (-1 === ids.indexOf(contentId)) {\n                ids.push(contentId);\n            }\n            //合并同个contentId多条动画数据的情况\n            keyName = \"contentId-\" + contentId;\n            if (temp[keyName]) {\n                temp[keyName].push(data);\n            } else {\n                temp[keyName] = [data];\n            }\n        }\n    });\n\n    //转成数组格式\n    for (k in temp) {\n        das.push(temp[k]);\n    }\n\n    return {\n        das: das,\n        ids: ids\n    };\n}\n\n//解析itemArray序列,得到对应的id\nfunction tokenize(itemArray) {\n    var itemJson,\n        actType,\n        anmins = {};\n    if (!itemArray) return;\n    itemJson = (0, _index.parseJSON)(itemArray);\n    //解析多个参数\n    if (itemJson.length) {\n        _.each(itemJson, function (opts) {\n            actType = opts.actType;\n            if (!anmins[actType]) {\n                anmins[actType] = [];\n            }\n            anmins[actType].push(opts.id);\n        });\n    } else {\n        actType = itemJson.actType;\n        anmins[actType] = [];\n        //actType: \"Animation\", id: 14\n        //actType: \"Inapp\", value: 0\n        anmins[actType].push(itemJson.id || itemJson.value);\n    }\n    return anmins;\n}\n\nexports.parserRelated = parserRelated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/data.js\n ** module id = 132\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = TaskContents;\n\nvar _nexttick = require('../../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nvar _index = require('../../../util/index');\n\nvar _data = require('./data');\n\nvar _index2 = require('./structure/index');\n\nvar _index3 = require('../../../component/activity/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TRANSFORM = Xut.style.transform;\n\n/**\r\n * 解析出需要构建的content对象\r\n * @param  {[type]} data [description]\r\n * @return {[type]}      [description]\r\n */\n/****************************************************\r\n *\r\n *           构建TaskContents对象\r\n *\r\n *      依赖数据解析算法类 Algorithm\r\n *      结构合并创建类    Structure\r\n *      行为动画绑定类     Content\r\n *\r\n * ***************************************************/\nfunction onlyParseContents(data) {\n    var actType,\n        preCompileContent = [];\n\n    //需要创建的数据结构\n    _.each(data.activitys, function (activityData) {\n        actType = activityData.actType || activityData.animation;\n        //特殊类型 showNote\n        if (!actType && activityData.note) {\n            activityData['actType'] = actType = \"ShowNote\";\n        }\n        if (activityData.itemArray || activityData.autoPlay !== 2) {\n            switch (actType) {\n                case 'Container':\n                case 'Content':\n                case 'Parallax':\n                case 'Contents':\n                    preCompileContent.push(activityData);\n                    break;\n            }\n        }\n        //编译content类型\n        // 1 通过Animation表产生\n        // 2 通过Parallax 表产生\n        function compileContent() {\n            preCompileContent.push({\n                postprocessor: function postprocessor(rootEle, pid) {\n                    activityData['nodes'] = data['nodes'];\n                    activityData['pageOffset'] = data['pageOffset'];\n                    return activityData;\n                }\n            });\n        }\n    });\n    return preCompileContent.length ? preCompileContent : null;\n}\n\nfunction TaskContents(activityData) {\n    activityData = _.extend(this, activityData);\n    //只解析content有关的activityData\n    var compileActivitys = onlyParseContents(activityData);\n    //如果有预执行动作\n    //Activity表数据存在\n    if (compileActivitys) {\n        //解析动画表数据结构\n        activityData = (0, _data.parserRelated)(compileActivitys, activityData);\n        //如果有需要构建的content\n        //开始多线程处理\n        activityData.createContentIds.length ? this.dataAfterCheck(activityData) : this.loadComplete();\n    } else {\n        this.loadComplete();\n    }\n}\n\nvar taskProto = TaskContents.prototype;\n\n/**\r\n * 任务断言\r\n */\ntaskProto.assert = function (taskName, tasks) {\n\n    var self = this;\n\n    //中断方法\n    var suspendTasks = function suspendTasks() {\n        self.suspendQueues = [];\n        self.suspendQueues.push(function () {\n            tasks.call(self);\n        });\n    };\n\n    //完成方法\n    var nextTasks = function nextTasks() {\n        tasks.call(self);\n    };\n\n    self.pageBaseHooks.suspend(taskName, nextTasks, suspendTasks);\n};\n\n/**\r\n * 运行被阻断的线程任务\r\n * @return {[type]} [description]\r\n */\ntaskProto.runSuspendTasks = function () {\n    if (this.suspendQueues) {\n        var fn;\n        if (fn = this.suspendQueues.pop()) {\n            fn();\n        }\n        this.suspendQueues = null;\n    }\n};\n\n/**\r\n * 构建完毕\r\n * @return {[type]} [description]\r\n */\ntaskProto.loadComplete = function () {\n    this.pageBaseHooks.success();\n};\n\nfunction createFn(obj, id, callback) {\n    var cObj = obj[id];\n    if (!cObj) {\n        cObj = obj[id] = {};\n    }\n    callback.call(cObj);\n}\n\n/**\r\n * 转成数组格式\r\n * @param  {[type]} contentsFragment [description]\r\n * @return {[type]}                  [description]\r\n */\nfunction toArray(o) {\n    var contentsFragment = [];\n    _.each(o, function (contentElements) {\n        contentsFragment.push(contentElements);\n    });\n    return contentsFragment;\n}\n\n/**\r\n * 构建快速查询节点对象\r\n * 转成哈希方式\r\n * @return {[type]} [description]\r\n */\nfunction toObject(cachedContentStr) {\n    var tempFragmentHash = {};\n    _.each($(cachedContentStr), function (ele, index) {\n        tempFragmentHash[ele.id] = ele;\n    });\n    return tempFragmentHash;\n};\n\n/**\r\n * 行为反馈\r\n *  content id = {\r\n *      弹动\r\n *      音频URl\r\n *  }\r\n */\nfunction addBehavior(data) {\n    var parameter,\n        soundSrc,\n        contentId,\n        isButton,\n        feedbackBehavior = data.feedbackBehavior = {};\n    _.each(data.activitys, function (activitys) {\n        if (activitys.parameter && (parameter = (0, _index.parseJSON)(activitys.parameter))) {\n            contentId = activitys.imageId;\n            //视觉反馈\n            if (isButton = parameter['isButton']) {\n                if (isButton != 0) {\n                    //过滤数据的字符串类型\n                    createFn(feedbackBehavior, contentId, function () {\n                        this['isButton'] = true;\n                    });\n                }\n            }\n            //音频行为\n            if (soundSrc = parameter['behaviorSound']) {\n                if (soundSrc != 0) {\n                    createFn(feedbackBehavior, contentId, function () {\n                        this['behaviorSound'] = soundSrc;\n                    });\n                }\n            }\n        }\n    });\n}\n\n/**\r\n * 中断一:构建数据之后\r\n * @param  {[type]} data [description]\r\n * @return {[type]}      [description]\r\n */\ntaskProto.dataAfterCheck = function (data) {\n\n    this.assert('dataAfter', function () {\n\n        //浮动模板\n        //用于实现模板上的事件\n        data.floatMaters = {\n            'ids': [], //浮动id\n            'container': {}, //浮动容器\n            'zIndex': {}\n        };\n\n        //浮动页面\n        //母板事件引起的层级遮挡问题\n        //用于提升最高\n        data.floatPages = {\n            'ids': [],\n            'zIndex': {}\n        };\n\n        //增加点击行为反馈\n        addBehavior(data);\n\n        //构建页面content类型结构\n        //contentDas, contentStr, containerPrefix, idFix, contentHtmlBoxIds\n        var createStr = function createStr(userData) {\n\n            data.contentHtmlBoxIds = userData.contentHtmlBoxIds;\n            data.contentsFragment = {};\n\n            //iboosk节点预编译\n            //在执行的时候节点已经存在\n            //不需要在创建\n            if (Xut.IBooks.runMode()) {\n                _.each(userData.idFix, function (id) {\n                    data.contentsFragment[id] = data.element.find(\"#\" + id)[0];\n                });\n            } else {\n                //构件快速查询节点对象\n                data.contentsFragment = toObject(userData.contentStr);\n                delete userData.contentStr;\n            }\n\n            //容器的前缀\n            data.containerPrefix = userData.containerPrefix;\n\n            /* eslint-disable */\n            //2015.5.6暴露到全局\n            //提供给音频字幕上下文\n            if (!Xut.Contents.contentsFragment[data.chapterId]) {\n                Xut.Contents.contentsFragment[data.chapterId];\n            }\n            Xut.Contents.contentsFragment[data.chapterId] = data.contentsFragment;\n            /* elist-enable */\n\n            //开始下一个任务\n            this.dataStrCheck(data, userData.contentDas);\n        };\n\n        //构建页面节点\n        (0, _index2.structure)(createStr, data, this);\n    });\n};\n\n/**\r\n * 中断二:构建结构之后\r\n * @param  {[type]} data       [description]\r\n * @param  {[type]} contentDas [description]\r\n * @return {[type]}            [description]\r\n */\ntaskProto.dataStrCheck = function (data, contentDas) {\n    this.assert('strAfter', function () {\n\n        var self = this;\n\n        //保留场景的留信息\n        //用做软件制作单页预加载\n        Xut.sceneController.seasonRelated = data.seasonRelated;\n\n        //初始化content对象\n        //绑定content\n        //1 动画\n        //2 事件\n        //3 视觉差\n        //4 动画音频\n        //5 canvas动画\n        var cb = function cb(delayHooks) {\n            //渲染页面\n            self.eventAfterCheck(data, delayHooks);\n        };\n\n        bindActivitys(cb, data, contentDas);\n    });\n};\n\n///////////////\n//创建浮动相关的信息 //\n///////////////\nfunction crateFloat(callback, floatName, dasFloat, data, base) {\n\n    var elements = [];\n    var prefix = 'Content_' + data.pid + \"_\";\n\n    //去重复\n    dasFloat.ids = (0, _index.arrayUnique)(dasFloat.ids);\n\n    var makePrefix,\n        fragment,\n        zIndex,\n        zIndexs = dasFloat.zIndex;\n\n    data.count++;\n\n    //分离出浮动节点\n    _.each(dasFloat.ids, function (id) {\n        makePrefix = prefix + id;\n        if (fragment = data.contentsFragment[makePrefix]) {\n            zIndex = zIndexs[id];\n            //保证层级关系\n            // fragment.style.zIndex = (Number(zIndex) + Number(fragment.style.zIndex)) \n            elements.push(fragment);\n            delete data.contentsFragment[makePrefix];\n        }\n    });\n\n    //floatPages模式下面\n    //如果是当前页面\n    //因为会产生三页面并联\n    //所以中间去最高层级\n    if (floatName === 'floatPages' && base.initTransformParameter[2] === 0) {\n        zIndex = 2001;\n    } else {\n        zIndex = 2000;\n    }\n\n    //浮动根节点\n    //floatPages设置的content溢出后处理\n    //在非视区增加overflow:hidden\n    //可视区域overflow:''\n    var overflow = 'overflow:hidden;';\n    //如果是母板,排除\n    if (floatName === 'floatMaters') {\n        overflow = '';\n    }\n\n    var floatStr = String.format('<div id=\"' + floatName + '-li-{0}\" class=\"xut-float\" style=\"' + TRANSFORM + ':{1};z-index:' + zIndex + ';{2}\"></div>', data.pid, base.initTransformParameter[0], overflow);\n\n    var container = $(floatStr);\n\n    //增加浮动容器\n    $(data.rootNode).after(container);\n\n    callback(elements, container);\n}\n\n/**\r\n * 创建浮动母版对象\r\n * @return {[type]} [description]\r\n */\nfunction createFloatMater(base, data, complete) {\n    //创建浮动对象\n    crateFloat(function (elements, container) {\n        //浮动容器\n        data.floatMaters.container = container;\n\n        (0, _nexttick2.default)({\n            'container': container,\n            'content': elements\n        }, function () {\n            //收集浮动母版对象标识\n            base.pageBaseHooks.collector.floatMaters(data.floatMaters);\n            complete(data);\n        });\n    }, 'floatMaters', data.floatMaters, data, base);\n}\n\n/**\r\n * 创建浮动的页面对象\r\n */\nfunction createFloatPage(base, data, complete) {\n    //创建浮动对象\n    crateFloat(function (elements, container) {\n        //浮动容器\n        data.floatPages.container = container;\n        (0, _nexttick2.default)({\n            'container': container,\n            'content': elements\n        }, function () {\n            //收集浮动母版对象标识\n            base.pageBaseHooks.collector.floatPages(data.floatPages);\n            complete(data);\n        });\n    }, 'floatPages', data.floatPages, data, base);\n}\n\n/**\r\n * 中断三:绑定事件事件之后\r\n * @param  {[type]} iScrollHooks [description]\r\n * @return {[type]}              [description]\r\n */\ntaskProto.eventAfterCheck = function (data, delayHooks) {\n\n    var self = this;\n\n    this.assert('eventAfter', function () {\n\n        data.count = 1; //计算回调的成功的次数\n\n        /**\r\n         * 完成钩子函数\r\n         * 1 content的卷滚条\r\n         * 2 canvas事件绑定\r\n         * @return {[type]} [description]\r\n         */\n        var completeHooks = function completeHooks() {\n            var hooks;\n            _.each(delayHooks, function (fns) {\n                while (hooks = fns.shift()) {\n                    hooks();\n                }\n            });\n        };\n\n        var nextTask = function nextTask() {\n            completeHooks();\n            self.applyAfterCheck();\n        };\n\n        /**\r\n         * 1 页面浮动\r\n         * 2 母版浮动\r\n         * 3 正常对象\r\n         */\n        var complete = function (data) {\n            return function () {\n                if (data.count === 1) {\n                    nextTask();\n                    return;\n                }\n                data.count--;\n            };\n        }(data);\n\n        //浮动页面对\n        //浮动对象比任何层级都都要高\n        //超过母版\n        if (data.floatPages.ids && data.floatPages.ids.length) {\n            createFloatPage(this, data, complete);\n        }\n\n        //如果存在母版浮动节点\n        //在创建节点structure中过滤出来，根据参数的tipmost\n        if (data.floatMaters.ids && data.floatMaters.ids.length) {\n            createFloatMater(this, data, complete);\n        }\n\n        //iboosk节点预编译\n        //在执行的时候节点已经存在\n        //不需要在创建\n        if (Xut.IBooks.runMode()) {\n            complete();\n        } else {\n            //正常对象\n            (0, _nexttick2.default)({\n                'container': data.element,\n                'content': toArray(data.contentsFragment)\n            }, complete);\n        }\n    });\n};\n\n/**\r\n * 中断四：渲染content\r\n * @return {[type]} [description]\r\n */\ntaskProto.applyAfterCheck = function () {\n    this.assert('applyAfter', function () {\n        //构建页面节点\n        // Xut.log('debug', '第' + (self.pid + 1) + '页面content相关的节点与事件全部构建完毕................')\n        this.loadComplete(true);\n    });\n};\n\n/**\r\n * 清理引用\r\n * @return {[type]} [description]\r\n */\ntaskProto.clearReference = function () {\n    //删除字幕用的碎片文档\n    if (Xut.Contents.contentsFragment[this.chapterId]) {\n        delete Xut.Contents.contentsFragment[this.chapterId];\n    }\n    this.element = null;\n    this.rootNode = null;\n    this.contentsFragment = null;\n};\n\n/** 配置ID\r\n * @return {[type]} [description]\r\n */\nfunction autoUUID() {\n    return 'autoRun-' + Math.random().toString(36).substring(2, 15);\n}\n\n/**\r\n * 给所有content节点绑定对应的事件与动画\r\n * @return {[type]} [description]\r\n */\nfunction bindActivitys(callback, data, contentDas) {\n    var compiler,\n        element = data.element,\n        eventRelated = data.eventRelated,\n        //合集事件\n    pid = data.pid,\n        createActivitys = data.createActivitys,\n        feedbackBehavior = data.feedbackBehavior,\n        //反馈数据,跟事件相关\n    pageBaseHooks = data.pageBaseHooks,\n        pageId = data.chapterId;\n\n    //如果有浮动对象,才需要计算偏移量\n    //母版里面可能存在浮动或者不浮动的对象\n    //那么在布局的时候想对点不一样\n    //如果在浮动区域就取浮动初始值\n    //否则就是默认的想对点0\n    var transformOffset = function (ids, initTransformOffset) {\n        return function (id) {\n            //匹配是不是属于浮动对象\n            if (ids.length && ids[id]) {\n                //初始化容器布局的坐标\n                return initTransformOffset;\n            }\n            return 0;\n        };\n    }(data.floatMaters.ids, data.initTransformParameter[2]);\n\n    //相关回调\n    var relatedCallback = {\n        //绑定卷滚条钩子\n        'iscrollHooks': [],\n        //contetn钩子回调\n        'contentsHooks': pageBaseHooks.collector.contents\n    };\n\n    //相关数据\n    var relatedData = {\n        'floatMaters': data.floatMaters,\n        'seasonId': data.chpaterData.seasonId,\n        'pageId': pageId,\n        'contentDas': contentDas, //所有的content数据合集\n        'container': data.liRootNode,\n        'seasonRelated': data.seasonRelated,\n        'containerPrefix': data.containerPrefix,\n        'nodes': data.nodes,\n        'pageOffset': data.pageOffset,\n        'createContentIds': data.createContentIds,\n        'partContentRelated': data.partContentRelated,\n        'transformOffset': transformOffset,\n        'contentsFragment': data.contentsFragment,\n        'contentHtmlBoxIds': data.contentHtmlBoxIds\n    };\n\n    /**\r\n     * 继续下一个任务\r\n     * @return {[type]} [description]\r\n     */\n    var nextTask = function nextTask() {\n        //多事件合集处理pagebase\n        if (eventRelated) {\n            pageBaseHooks.eventBinding && pageBaseHooks.eventBinding(eventRelated);\n        }\n        //删除钩子\n        delete relatedCallback.contentsHooks;\n        callback(relatedCallback);\n    };\n\n    /**\r\n     * 生成activty控制对象\r\n     * @type {[type]}\r\n     */\n    var makeActivitys = function makeActivitys(compiler) {\n        return function (callback) {\n            var filters;\n            var imageId = compiler['imageIds']; //父id\n            var activity = compiler['activity'];\n            var eventType = activity.eventType;\n            var dragdropPara = activity.para1;\n            var eventContentId = imageId;\n\n            /**\r\n             * 多事件数据过滤\r\n             * 为了防止数据写入错误数据\r\n             * 如果当前对象上有多事件的行为\r\n             * 则默认的事件去掉\r\n             * @type {[type]}\r\n             */\n            if (filters = eventRelated['eventContentId->' + imageId]) {\n                _.each(filters, function (edata) {\n                    //id不需要\n                    //eventContentId = void 0;\n                    if (edata.eventType == activity.eventType) {\n                        //写入的是伪数据,此行为让多事件抽象接管\n                        eventType = dragdropPara = void 0;\n                    }\n                });\n            }\n\n            //需要绑定事件的数据\n            var eventData = {\n                'eventContentId': eventContentId,\n                'eventType': eventType,\n                'dragdropPara': dragdropPara,\n                'feedbackBehavior': feedbackBehavior\n            };\n\n            var actdata = {\n                'noticeComplete': callback, //监听完成\n                'pageIndex': data.pageIndex,\n                'canvasRelated': data.canvasRelated, //父类引用\n                'id': imageId || autoUUID(),\n                \"type\": 'Content',\n                'pageId': pageId,\n                'activityId': activity._id,\n                'rootNode': element,\n                'pageType': compiler['pageType'], //构建类型 page/master\n                'seed': compiler['seed'], //动画表数据 or 视觉差表数据\n                \"pid\": pid, //页码\n                'eventData': eventData, //事件数据\n                'relatedData': relatedData, //相关数据,所有子作用域Activity对象共享\n                'relatedCallback': relatedCallback //相关回调\n            };\n\n            //注册引用\n            pageBaseHooks.registerAbstractActivity(new _index3.Activity(actdata));\n        };\n    };\n\n    //制作curry Activity闭包\n    var fnsActivity = [];\n    while (compiler = createActivitys.shift()) {\n        fnsActivity.push(makeActivitys(compiler));\n    }\n\n    // 递归解析 activitys\n    var recursiveParse = function recursiveParse() {\n        if (!fnsActivity.length) {\n            nextTask();\n            return;\n        }\n        var first = fnsActivity.shift();\n        first(function () {\n            recursiveParse();\n        });\n    };\n    recursiveParse();\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/index.js\n ** module id = 133\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createCanvas = createCanvas;\n/**\r\n * 组成HTML结构\r\n * @param  {[type]} argument [description]\r\n * @return {[type]}          [description]\r\n */\nfunction createCanvas(data, wrapObj) {\n\n    var mark = '';\n    if (data.category) {\n        var cats = data.category.split(\",\");\n        var len = cats.length;\n        if (len) {\n            while (len--) {\n                mark += cats[len];\n            }\n        }\n    }\n\n    var temp = '<canvas id=\"{0}\"' + ' data-ctype={1}' + ' width=\"{2}\"' + ' height=\"{3}\">' + '</canvas>';\n\n    var str = String.format(temp, wrapObj.makeId('canvas'), mark.toLocaleLowerCase(), data.scaleWidth, data.scaleHeight);\n\n    return str;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/canvas.js\n ** module id = 134\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createContainer = createContainer;\n\nvar _index = require('../../../../util/index');\n\nvar _parsecontent = require('./parsecontent');\n\n/**\r\n * 针对容器类型的处理\r\n * @param  {[type]} containerName [description]\r\n * @param  {[type]} contentId     [description]\r\n * @param  {[type]} pid     [description]\r\n * @return {[type]}               [description]\r\n */\nvar createContainerWrap = function createContainerWrap(containerName, contentId, pid) {\n\n    var contentDas = (0, _parsecontent.parseContentDas)([contentId]),\n        data = (0, _index.reviseSize)(contentDas[0]),\n        wapper = '<div' + ' id=\"{0}\"' + ' data-behavior=\"click-swipe\"' + ' style=\"width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:{5};\">';\n\n    return String.format(wapper, containerName, data.scaleWidth, data.scaleHeight, data.scaleTop, data.scaleLeft, data.zIndex);\n};\n\nfunction createContainer(containerRelated, pid) {\n    var itemIds,\n        uuid,\n        contentId,\n        containerName,\n        containerObj = {\n        createUUID: [],\n        containerName: []\n    };\n\n    containerRelated.forEach(function (data, index) {\n        contentId = data.imageIds;\n        containerName = \"Container_\" + pid + \"_\" + contentId;\n        uuid = \"aaron\" + Math.random();\n        containerObj[uuid] = {\n            'start': [createContainerWrap(containerName, contentId, pid)],\n            'end': '</div>'\n        };\n        containerObj.createUUID.push(uuid);\n        containerObj.containerName.push(containerName);\n        data.itemIds.forEach(function (id) {\n            containerObj[id] = uuid;\n        });\n    });\n    return containerObj;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/container.js\n ** module id = 135\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createDom = createDom;\n\nvar _index = require(\"../../../../util/index\");\n\nvar maskBoxImage = Xut.style.maskBoxImage;\n\n/**\r\n * 蒙版动画\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar maskContent = function maskContent(data, wrapObj) {\n\n    var restr = \"\";\n\n    //如果有蒙版图\n    var isMaskImg = data.mask ? maskBoxImage + \":url(\" + Xut.config.pathAddress + data.mask + \");\" : \"\";\n\n    //蒙板图\n    if (data.mask || wrapObj['isGif']) {\n\n        //蒙版图\n        if (maskBoxImage != undefined) {\n            restr += String.format('<img' + ' id=\"img_{1}\"' + ' class=\"xut-contentScrollerImg\"' + ' src=\"{0}\"' + ' style=\"width:{2}px;height:{3}px;position:absolute;background-size:100% 100%;{4}\"/>', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg);\n        } else {\n            //canvas\n            restr += String.format(' <canvas src=\"{0}\"' + ' class=\"xut-contentScrollerImg edges\"' + ' mask=\"{5}\"' + ' id = \"img_{1}\"' + ' width=\"{2}\"' + ' height=\"{3}\"' + ' style=\"width:{2}px; height:{3}px;opacity:0; background-size:100% 100%; {4}\"' + ' />', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg, Xut.config.pathAddress.replace(/\\//g, \"\\/\") + data.mask);\n        }\n\n        //精灵图\n    } else if (data.category == 'Sprite') {\n\n        var matrixX = 100 * data.thecount;\n        var matrixY = 100;\n\n        //如果有参数\n        //精灵图是矩阵图\n        if (data.parameter) {\n            var parameter = (0, _index.parseJSON)(data.parameter);\n            if (parameter && parameter.matrix) {\n                var matrix = parameter.matrix.split(\"-\");\n                matrixX = 100 * Number(matrix[0]);\n                matrixY = 100 * Number(matrix[1]);\n            }\n        }\n        restr += String.format('<div' + ' class=\"sprite\"' + ' style=\"height:{0}px;background-image:url({1});background-size:{2}% {3}%;\">' + '</div>', data.scaleHeight, wrapObj['pathImg'], matrixX, matrixY);\n    } else {\n        //普通图片\n        restr += String.format('<img' + ' src=\"{0}\"' + ' class=\"xut-contentScrollerImg\"' + ' id=\"img_{1}\"' + ' style=\"width:{2}px;height:{3}px;position:absolute;background-size:100% 100%; {4}\"/>', wrapObj['pathImg'], data['_id'], data.scaleWidth, data.scaleHeight, isMaskImg);\n    }\n\n    return restr;\n};\n\n/**\r\n * 纯文本内容\r\n * @param  {[type]} data [description]\r\n * @return {[type]}      [description]\r\n */\nvar textContent = function textContent(data) {\n    return String.format('<div' + ' id = \"{0}\"' + ' style=\"background-size:100% 100%;height:auto\">{1}</div>', data['_id'], data.content);\n};\n\n/**\r\n * 如果是.js结尾的\r\n * 新增的html文件\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar jsContent = function jsContent(data, wrapObj) {\n    return wrapObj[\"htmlstr\"];\n};\n\n/**\r\n * 如果内容是svg\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar svgContent = function svgContent(data, wrapObj) {\n    var restr = \"\";\n    var svgstr = wrapObj['svgstr'];\n    var scaleWidth = data['scaleWidth'];\n\n    //从SVG文件中，读取Viewport的值\n    if (svgstr != undefined) {\n        var startPos = svgstr.search('viewBox=\"');\n        var searchTmp = svgstr.substring(startPos, startPos + 64).replace('viewBox=\"', '').replace('0 0 ', '');\n        var endPos = searchTmp.search('\"');\n        var temp = searchTmp.substring(0, endPos);\n        var sptArray = temp.split(\" \");\n        var svgwidth = sptArray[0];\n        var svgheight = sptArray[1];\n\n        //svg内容宽度:svg内容高度 = viewBox宽:viewBox高\n        //svg内容高度 = svg内容宽度 * viewBox高 / viewBox宽\n        var svgRealHeight = Math.floor(scaleWidth * svgheight / svgwidth);\n        //如果svg内容高度大于布局高度则添加滚动条\n        if (svgRealHeight > data.scaleHeight + 1) {\n            var svgRealWidth = Math.floor(scaleWidth);\n            //if there do need scrollbar, then restore text to its original prop\n            //布局位置\n            var marginleft = wrapObj['backMode'] ? data.scaleLeft - data.scaleBackLeft : 0;\n            var margintop = wrapObj['backMode'] ? data.scaleTop - data.scaleBackTop : 0;\n            temp = '<div style=\"width:{0}; height:{1};margin-left:{2}px;margin-top:{3}px;\">{4}</div>';\n\n            if (data.isScroll) {\n                restr = String.format(temp, svgRealWidth + 'px', svgRealHeight + 'px', marginleft, margintop, svgstr);\n            } else {\n                restr = String.format(temp, '100%', '100%', marginleft, margintop, svgstr);\n            }\n        } else {\n            restr += svgstr;\n        }\n    }\n    return restr;\n};\n\n/**\r\n * 创建包含容器\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar createWapper = function createWapper(data, wrapObj) {\n    var wapper = void 0,\n        actName = void 0,\n        offset = void 0,\n        visibility = void 0,\n        backwidth = void 0,\n        backheight = void 0,\n        backleft = void 0,\n        backtop = void 0,\n        zIndex = data['zIndex'],\n        id = data['_id'],\n        containerName = wrapObj.containerName,\n        pid = wrapObj.pid,\n        makeId = wrapObj.makeId,\n        background = data.background ? 'background-image: url(' + Xut.config.pathAddress + data.background + ');' : '';\n\n    //背景尺寸优先\n    if (data.scaleBackWidth && data.scaleBackHeight) {\n        backwidth = data.scaleBackWidth;\n        backheight = data.scaleBackHeight;\n        backleft = data.scaleBackLeft;\n        backtop = data.scaleBackTop;\n        wrapObj.backMode = true; //背景图模式\n    } else {\n        backwidth = data.scaleWidth;\n        backheight = data.scaleHeight;\n        backleft = data.scaleLeft;\n        backtop = data.scaleTop;\n    }\n\n    //content默认是显示的数据的\n    //content.visible = 0\n    //如果为1 就隐藏改成hidden\n    //05.1.14\n    visibility = 'visible';\n    if (data.visible) {\n        visibility = 'hidden';\n    }\n\n    // var isHtml = \"\";\n    //2015.12.29\n    //如果是html内容\n    if (wrapObj.isJs) {\n        //正常content类型\n        wapper = '<div id=\"{0}\"' + ' data-behavior=\"click-swipe\"' + ' style=\"overflow:hidden;width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:{5};visibility:{6};background-size:100% 100%;{10}\">' + ' <div id=\"{7}\" style=\"width:{8}px;position:absolute;\">';\n        return String.format(wapper, containerName, backwidth, backheight, backtop, backleft, zIndex, visibility, makeId('contentWrapper'), backwidth, backheight, background);\n    }\n\n    //正常content类型\n    wapper = '<div id=\"{0}\"' + ' data-behavior=\"click-swipe\"' + ' style=\"overflow:hidden;width:{1}px;height:{2}px;top:{3}px;left:{4}px;position:absolute;z-index:{5};visibility:{6};\">' + ' <div id=\"{7}\" style=\"width:{8}px;height:{9}px;{10}position:absolute;background-size:100% 100%;\">';\n\n    return String.format(wapper, containerName, backwidth, backheight, backtop, backleft, zIndex, visibility, makeId('contentWrapper'), backwidth, backheight, background);\n};\n\n/**\r\n * 创建内容\r\n * @param  {[type]} data    [description]\r\n * @param  {[type]} wrapObj [description]\r\n * @return {[type]}         [description]\r\n */\nvar createContent = function createContent(data, wrapObj) {\n    var restr = \"\";\n    //如果内容是图片\n    //如果是svg或者html\n    if (wrapObj.imgContent) {\n        //如果是SVG\n        if (wrapObj.isSvg) {\n            restr += svgContent(data, wrapObj);\n        } else if (wrapObj.isJs) {\n            //如果是.js结构的html文件\n            restr += jsContent(data, wrapObj);\n        } else {\n            //如果是蒙板，或者是gif类型的动画，给高度\n            restr += maskContent(data, wrapObj);\n        }\n    } else {\n        //纯文本文字\n        restr += textContent(data, wrapObj);\n    }\n    return restr;\n};\n\n/**\r\n * 组成HTML结构\r\n * @param  {[type]} argument [description]\r\n * @return {[type]}          [description]\r\n */\nfunction createDom(data, wrapObj) {\n    var restr = '';\n    //创建包装容器\n    restr += createWapper(data, wrapObj);\n    //创建内容\n    restr += createContent(data, wrapObj);\n    restr += \"</div></div>\";\n    return restr;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/dom.js\n ** module id = 136\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.structure = structure;\n\nvar _index = require('../../../../util/index');\n\nvar _parsetype = require('./parsetype');\n\nvar _container = require('./container');\n\nvar _dom = require('./dom');\n\nvar _canvas = require('./canvas');\n\nvar _parsecontent = require('./parsecontent');\n\n/**\r\n * 解析序列中需要的数据\r\n * @param  {[type]}   contentIds [description]\r\n * @param  {Function} callback   [description]\r\n * @return {[type]}              [description]\r\n */\n\n/**\r\n * 制作包装对象\r\n * 用于隔绝content数据的引用关系\r\n * 导致重复数据被修正的问题\r\n * @return {[type]}             [description]\r\n */\n/**\r\n * 编译content的容器\r\n * 2013.10.12\r\n * 1 为处理重复content数据引用问题,增加\r\n *            makeWarpObj方法,用于隔绝content数据的引用关系，导致重复数据被修正的问题\r\n * 2 多个页面引用同一个content的处理，Conetnt_0_1 ,类型+页码+ID的标示\r\n * @return {[type]} [description]\r\n */\n\nvar makeWarpObj = function makeWarpObj(contentId, content, pageType, pid, virtualOffset) {\n    //唯一标示符\n    var prefix = \"_\" + pid + \"_\" + contentId;\n    return {\n        pageType: pageType,\n        contentId: contentId,\n        isJs: /.js$/i.test(content.md5), //html类型\n        isSvg: /.svg$/i.test(content.md5), //svg类型\n        data: content,\n        pid: pid,\n        virtualOffset: virtualOffset, //布局位置\n        containerName: 'Content' + prefix,\n        makeId: function makeId(name) {\n            return name + prefix;\n        }\n    };\n};\n\n/**\r\n * 创建图片地址\r\n * @return {[type]}         [description]\r\n */\nvar analysisPath = function analysisPath(wrapObj, conData) {\n    var pathImg, imgContent, isGif, originalPathImg, resourcePath, results, name;\n\n    imgContent = conData.md5;\n    isGif = /.gif$/i.test(imgContent); //是gif格式\n    originalPathImg = Xut.config.pathAddress + imgContent; //原始地址\n\n    if (isGif) {\n        pathImg = Xut.createRandomImg(originalPathImg); //处理gif图片缓存+随机数\n    } else {\n        pathImg = originalPathImg;\n    }\n\n    if (conData.category === \"AutoCompSprite\") {\n        try {\n            resourcePath = \"content/gallery/\" + imgContent + \"/app.json\";\n            results = (0, _index.getResources)(resourcePath);\n            var spiritList = results.spiritList[0];\n            var actListName = spiritList.params.actList;\n            name = spiritList.params[actListName].ImageList[0].name;\n\n            pathImg += '/' + name;\n            conData.resource = results;\n            conData.containerName = wrapObj.containerName;\n        } catch (err) {\n            console.log('AutoCompSprite获取数据失败');\n        }\n    }\n\n    wrapObj['imgContent'] = imgContent;\n    wrapObj['isGif'] = isGif;\n    wrapObj['pathImg'] = pathImg;\n};\n\n/**\r\n * content\r\n *  svg数据\r\n *  html数据\r\n * 解析外部文件\r\n * @param  {[type]} wrapObj     [description]\r\n * @param  {[type]} svgCallback [description]\r\n * @return {[type]}             [description]\r\n */\nvar externalFile = function externalFile(wrapObj, svgCallback) {\n    //svg零件不创建解析具体内容\n    if (wrapObj.isSvg) {\n        (0, _index.readFile)(wrapObj.data.md5, function (svgdata) {\n            wrapObj['svgstr'] = svgdata;\n            svgCallback(wrapObj);\n        });\n    } else if (wrapObj.isJs) {\n        //如果是.js的svg文件\n        (0, _index.readFile)(wrapObj.data.md5, function (htmldata) {\n            wrapObj['htmlstr'] = htmldata;\n            svgCallback(wrapObj);\n        }, \"js\");\n    } else {\n        svgCallback(wrapObj);\n    }\n};\n\n//=====================================================\n//\n//  构建content的序列tokens\n//  createImageIds,\n//  createContentIds\n//  pid,\n//  pageType,\n//  dydCreate //重要判断,动态创建\n//\n//=======================================================\nfunction structure(callback, data, context) {\n    var content,\n        contentId,\n        wrapObj,\n        containerObj,\n        sizeResults,\n        contentCollection,\n        contentCount,\n        cloneContentCount,\n        pid = data.pid,\n        pageType = data.pageType,\n        containerRelated = data.containerRelated,\n        seasonRelated = data.seasonRelated,\n        isMaster = pageType === 'master',\n\n\n    //容器li生成的位置\n    //left,right\n    virtualOffset = data.virtualOffset,\n\n\n    ////////////\n    //浮动处理 //\n    //1.浮动母版对象\n    //2.浮动页面对象\n    ////////////\n    floatMaters = data.floatMaters,\n        floatPages = data.floatPages,\n\n\n    //文本框\n    //2016.1.7\n    contentHtmlBoxIds = [],\n\n\n    //所有content的id记录\n    //返回出去给ibooks预编译使用\n    idFix = [],\n\n\n    //缓存contentDas\n    contentDas = {},\n\n    //缓存content结构\n    cachedContentStr = [];\n\n    /**\r\n     * 容器结构创建\r\n     */\n    if (containerRelated && containerRelated.length) {\n        containerObj = (0, _container.createContainer)(containerRelated, pid);\n    }\n\n    /**\r\n     * 转化canvas模式 contentMode 0/1\r\n     * 页面或者母板浮动对象\r\n     * 页面是最顶级的\r\n     * @return {[type]}           [description]\r\n     */\n    var eachPara = function eachPara(parameter, contentId, conData) {\n        var zIndex;\n        _.each(parameter, function (para) {\n            //针对母版content的topmost数据处理，找出浮动的对象Id\n            //排除数据topmost为0的处理\n            zIndex = para['topmost'];\n            if (zIndex && zIndex != 0) {\n                if (isMaster) {\n                    //收集浮动的母版对象id\n                    floatMaters.ids.push(contentId);\n                    floatMaters.zIndex[contentId] = zIndex;\n                } else {\n                    //浮动页面\n                    floatPages.ids.push(contentId);\n                    floatPages.zIndex[contentId] = zIndex;\n                }\n            }\n        });\n    };\n\n    /**\r\n     * 开始过滤参数\r\n     * @return {[type]}           [description]\r\n     */\n    var prefilter = function prefilter(conData, contentId) {\n        var eventId, parameter;\n        var category = conData.category;\n\n        //如果是模板书签，强制为浮动对象\n        if (isMaster && (eventId = seasonRelated[contentId])) {\n            if (eventId['BookMarks']) {\n                floatMaters.ids.push(contentId);\n            }\n        }\n\n        //如果有parameter参数\n        //1 浮动对象\n        //2 canvas对象\n        if (conData) {\n            //匹配canvas对象数据\n            if (category) {\n                //解析canvas先关数据\n                (0, _parsetype.parseCanvas)(contentId, category, conData, data);\n            }\n            //如果有parameter\n            if (conData.parameter) {\n                if (parameter = (0, _index.parseJSON)(conData.parameter)) {\n                    //parameter保持数组格式\n                    eachPara(parameter.length ? parameter : [parameter], contentId, conData);\n                }\n            }\n        }\n    };\n\n    /**\r\n     * 解析出每一个content对应的动作\r\n     * 传递prefilter过滤器\r\n     * 1 浮动动作\r\n     * 2 canvas动作\r\n     * @type {[type]}\r\n     */\n    contentCollection = (0, _parsecontent.parseContentDas)(data.createContentIds, prefilter);\n    contentCount = cloneContentCount = contentCollection.length;\n\n    //如果是启动了特殊高精灵动画\n    //强制打开canvas模式设置\n    //这里可以排除掉其余的canvas动画\n    if (data.canvasRelated.onlyCompSprite) {\n        data.canvasRelated.enable = true;\n    }\n\n    ////////////////\n    //开始生成所有的节点 //\n    //1:dom\n    //2:canvas\n    ////////////////\n    while (contentCount--) {\n\n        //根据数据创content结构\n        if (content = contentCollection[contentCount]) {\n            contentId = content['_id'];\n\n            //创建包装器,处理数据引用关系\n            wrapObj = makeWarpObj(contentId, content, pageType, pid, virtualOffset);\n            idFix.push(wrapObj.containerName);\n\n            //保存文本框content的Id\n            if (wrapObj.isJs) {\n                contentHtmlBoxIds.push(contentId);\n            }\n            //转换缩放比\n            sizeResults = (0, _index.reviseSize)(wrapObj.data);\n\n            //如果启用了virtualMode模式\n            //对象需要分离创建\n            if (Xut.config.virtualMode) {\n                virtualCreate(sizeResults, wrapObj, content, contentId);\n            } else {\n                //正常模式下创建\n                startCreate(wrapObj, content, contentId);\n            }\n        } else {\n            //或者数据出错\n            checkComplete();\n        }\n    }\n\n    /**\r\n     * analysisPath\r\n     * @param  {[type]} wrapObj   [description]\r\n     * @param  {[type]} content   [description]\r\n     * @param  {[type]} contentId [description]\r\n     * @return {[type]}           [description]\r\n     */\n    function startCreate(wrapObj, content, contentId) {\n        //缓存数据\n        contentDas[contentId] = content;\n        //开始创建\n        createRelated(contentId, wrapObj);\n    }\n\n    /**\r\n     * 清理剔除的content\r\n     * @param  {[type]} contentId [description]\r\n     * @return {[type]}           [description]\r\n     */\n    function clearContent(contentId) {\n        data.createContentIds.splice(data.createContentIds.indexOf(contentId), 1);\n        checkComplete();\n    }\n\n    /**\r\n     * 虚拟模式区分创建\r\n     * @param  {[type]} sizeResults [description]\r\n     * @param  {[type]} wrapObj     [description]\r\n     * @param  {[type]} content     [description]\r\n     * @param  {[type]} contentId   [description]\r\n     * @return {[type]}             [description]\r\n     */\n    function virtualCreate(sizeResults, wrapObj, content, contentId) {\n        // 创建分布左边的对象\n        if (wrapObj.virtualOffset === 'left') {\n            if (sizeResults.scaleLeft < Xut.config.screenSize.width) {\n                startCreate(wrapObj, content, contentId);\n            } else {\n                clearContent(contentId);\n            }\n        }\n        // 创建分布右边的对象\n        if (wrapObj.virtualOffset === 'right') {\n            if (sizeResults.scaleLeft > Xut.config.screenSize.width) {\n                startCreate(wrapObj, content, contentId);\n            } else {\n                clearContent(contentId);\n            }\n        }\n    }\n\n    /**\r\n     * 创建content节点\r\n     * @param  {[type]} wrapObj [description]\r\n     * @return {[type]}         [description]\r\n     */\n    function createRelated(contentId, wrapObj) {\n        externalFile(wrapObj, function (wrapObj) {\n            var uuid, startStr, contentStr, conData;\n            conData = wrapObj.data;\n\n            //拼接地址\n            analysisPath(wrapObj, conData);\n\n            //canvas节点\n            if (conData.canvasMode) {\n                contentStr = (0, _canvas.createCanvas)(conData, wrapObj);\n            } else {\n                //dom节点\n                contentStr = (0, _dom.createDom)(conData, wrapObj);\n            }\n\n            //如果创建的是容器对象\n            if (containerObj && (uuid = containerObj[contentId])) {\n                startStr = containerObj[uuid];\n                startStr.start.push(contentStr);\n            } else {\n                //普通对象\n                cachedContentStr.unshift(contentStr);\n            }\n\n            //检测完毕\n            checkComplete();\n        });\n    }\n\n    /**\r\n     * 返回处理\r\n     * @return {[type]} [description]\r\n     */\n    function checkComplete() {\n        if (cloneContentCount === 1) {\n            var data = {\n                contentDas: contentDas,\n                idFix: idFix,\n                contentHtmlBoxIds: contentHtmlBoxIds,\n                containerPrefix: ''\n            };\n            //针对容器处理\n            if (containerObj) {\n                var start, end, containerPrefix, containerStr;\n                containerStr = [];\n\n                //合并容器\n                containerObj.createUUID.forEach(function (uuid) {\n                    start = containerObj[uuid].start.join('');\n                    end = containerObj[uuid].end;\n                    containerStr.push(start.concat(end));\n                });\n                containerStr = containerStr.join('');\n                containerPrefix = containerObj.containerName;\n                containerObj = null;\n\n                data.contentStr = cachedContentStr.join('').concat(containerStr);\n                data.containerPrefix = containerPrefix;\n            } else {\n                data.contentStr = cachedContentStr.join('');\n            }\n\n            callback.call(context, data);\n        }\n        cloneContentCount--;\n    }\n}\n\n/**\r\n * 针对分段处理\r\n * 只构件必要的节点节点对象\r\n * content字段中visible === 0 是构建显示的对象\r\n *                      === 1 是构建隐藏的对象\r\n *\r\n * 并且不是动态创建\r\n */\n// if (false && (1 == content.visible) && !data.dydCreate) {\n// endReturn();  //false 先屏蔽 ，客户端未实现\n// }else{}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/index.js\n ** module id = 137\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.parseCanvas = parseCanvas;\n/**\r\n * 设置canvas数据\r\n */\nvar createCanvasData = function createCanvasData(type, opts) {\n\n\tvar data = opts.data;\n\tvar contentId = opts.contentId;\n\tvar conData = opts.conData;\n\n\t//content收集id标记\n\t//cid =>content=> 普通动画 ppt\n\t//wid =>widget=>高级动画\n\tif (data.canvasRelated[type].indexOf(contentId) == -1) {\n\t\tdata.canvasRelated[type].push(contentId);\n\t\tconData.actionTypes[type] = true;\n\t}\n\n\tif (data.canvasRelated.cid.indexOf(contentId) == -1) {\n\t\tdata.canvasRelated.cid.push(contentId);\n\t}\n\n\t//给content数据增加直接判断标示\n\tconData.canvasMode = true;\n\n\t//拿到最高层级\n\tif (conData.zIndex) {\n\t\tif (conData.zIndex > data.canvasRelated.containerIndex) {\n\t\t\tdata.canvasRelated.containerIndex = conData.zIndex;\n\t\t}\n\t}\n};\n\n/**\r\n * canvas pixi.js类型处理转化\r\n * 填充cid, wid\r\n * @type {Object}\r\n */\nvar pixiType = {\n\t//普通精灵动画\n\t\"Sprite\": function Sprite(opts, data) {\n\t\tif (data.canvasRelated.enable) {\n\t\t\t//启动精灵模式\n\t\t\t//在动画处理的时候给initAnimations快速调用\n\t\t\tcreateCanvasData('spiritId', opts);\n\t\t}\n\t},\n\t//ppt=》pixi动画\n\t\"PPT\": function PPT(opts, data) {\n\t\t//双重判断\n\t\t//必须启动cnavas模式\n\t\t//必须数据是canvs模式\n\t\t//因为ppt只支持 高级与复杂精灵\n\t\tif (data.canvasRelated.enable && opts.conData.canvasMode) {\n\t\t\tcreateCanvasData('pptId', opts);\n\t\t}\n\t},\n\t//高级精灵动画\n\t//widget\n\t\"SeniorSprite\": function SeniorSprite(opts, data) {\n\t\tif (data.canvasRelated.enable) {\n\t\t\tcreateCanvasData('widgetId', opts);\n\t\t}\n\t},\n\t//复杂精灵动画\n\t//可以在dom模式与canvas混合使用\n\t//所以dom下还要强制开始canvasMode\n\t\"CompSprite\": function CompSprite(opts) {\n\t\tvar data = opts.data;\n\t\tvar conData = opts.conData;\n\t\tif (/\\./i.test(opts.conData.md5)) {\n\t\t\tconsole.log('复杂精灵动画数据错误');\n\t\t\treturn;\n\t\t}\n\n\t\t//特殊判断，见canvas.js\n\t\t//如果没有启动canvas也能走进这个程序\n\t\t//给上特殊标示\n\t\tif (!data.canvasRelated.enable && !data.canvasRelated.onlyCompSprite) {\n\t\t\t//仅仅只是满足特殊动画\n\t\t\t//特殊模式，可能chapter表中没有启动canvas模式\n\t\t\tdata.canvasRelated.onlyCompSprite = true;\n\t\t}\n\t\tcreateCanvasData('compSpriteId', opts);\n\t}\n\n};\n\n/**\r\n * 解析参数\r\n */\nfunction callResolveArgs(category, opts) {\n\tvar cate;\n\tvar val;\n\tvar data = opts.data;\n\tvar cates = category.split(\",\");\n\tvar length = cates.length;\n\tvar i = 0;\n\t//判断ppt是不是数组中最后一个\n\t//如果不是，需要对调位置\n\tvar pptindex = cates.indexOf('PPT');\n\n\t//如果是首位\n\tif (pptindex == 0) {\n\t\t//ppt永远最后一个\n\t\tcates = cates.concat(cates.splice(pptindex, 1));\n\t}\n\n\tif (length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tcate = cates[i];\n\t\t\t//匹配数据类型\n\t\t\tpixiType[cate] && pixiType[cate](opts, data);\n\t\t}\n\t}\n}\n\n/**\r\n * 解析canvas数据\r\n *\r\n */\nfunction parseCanvas(contentId, category, conData, data) {\n\n\t//类型转化\n\t//双数据类型转行单个类型\n\tif (Xut.config.onlyDomMode) {\n\t\tif (category) {\n\t\t\tvar cat;\n\t\t\tvar cats = category.split(\",\");\n\t\t\tvar len = cats.length;\n\t\t\tif (len > 1) {\n\t\t\t\t//删除ppt\n\t\t\t\tvar pptindex = cats.indexOf('PPT');\n\t\t\t\tif (-1 != pptindex) {\n\t\t\t\t\tcats.splice(pptindex, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconData.category = cats[0];\n\t\t}\n\t\treturn;\n\t}\n\n\t//动作类型\n\t//用于动画判断\n\tconData.actionTypes = {};\n\n\t//下一个数据\n\tvar opts = {\n\t\tcontentId: contentId,\n\t\tconData: conData,\n\t\tdata: data\n\t};\n\n\t//转成canvas标记\n\t//如果有pixi的处理类型\n\t//2016.2.25\n\t//SeniorSprite,PPT\n\t//Sprite,PPT\n\t//SeniorSprite\n\t//Sprite\n\t//PPT\n\t//CompSprite\n\t//多种处理方式\n\t//可以组合\n\tcategory && callResolveArgs(category, opts);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/contents/structure/parsetype.js\n ** module id = 138\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (base, successCallback) {\n  base._flows.register(new _index2.default(base, successCallback));\n};\n\nvar _index = require('../../../component/flow/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/flow/index.js\n ** module id = 139\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = initstate;\n\nvar _translation = require('../../swipe/translation');\n\nvar noop = function noop() {};\n\nfunction initstate(instance) {\n\n  return {\n    /**\r\n     * 主线任务等待\r\n     */\n    tasksHang: null,\n\n    /**\r\n     * 创建相关的信息\r\n     * @type {Object}\r\n     */\n    tasksTimer: 0,\n\n    /**\r\n     * 当前任务是否中断\r\n     * return\r\n     *     true  中断\r\n     *     false 没有中断\r\n     */\n    isTaskSuspend: false,\n\n    /**\r\n     * 是否预创建背景中\r\n     */\n    preCreateTasks: false,\n\n    /**\r\n     * 下一个将要运行的任务标示\r\n     * 1 主容器任务\r\n     * 2 背景任务\r\n     * 3 widget热点任务\r\n     * 4 content对象任务\r\n     */\n    nextRunTask: 'container',\n\n    /**\r\n     * 缓存构建中断回调\r\n     * 构建分2步骤\r\n     * 1 构建数据与结构（执行中断处理）\r\n     * 2 构建绘制页面\r\n     * @type {Object}\r\n     */\n    cacheTasks: function () {\n      var cacheTasks = {};\n      _.each([\"Flow\", \"background\", \"components\", \"contents\"], function (taskName) {\n        cacheTasks[taskName] = false;\n      });\n      return cacheTasks;\n    }(),\n\n    /**\r\n     * 与创建相关的信息\r\n     * 创建坐标\r\n     * 1 创建li位置\r\n     * 2 创建浮动对象\r\n     * \"translate3d(0px, 0, 0)\", \"original\"\r\n     */\n    initTransformParameter: (0, _translation.createTransform)(instance.visiblePid, instance.pid),\n\n    /**\r\n     * 预创建\r\n     * 构建页面主容器完毕后,此时可以翻页\r\n     * @return {[type]} [description]\r\n     */\n    preforkComplete: noop,\n\n    /**\r\n     * 整个页面都构建完毕通知\r\n     * @return {[type]} [description]\r\n     */\n    createTasksComplete: noop\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/states.js\n ** module id = 140\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (instance) {\n\n    /**\r\n     * 创建相关的信息\r\n     * @type {Object}\r\n     */\n    var createRelated = instance.createRelated = (0, _states2.default)(instance);\n\n    /**\r\n     * 设置下一个标记\r\n     * 用于标记完成度\r\n     */\n    var setNextRunTask = function setNextRunTask(taskName) {\n        createRelated.nextRunTask = taskName;\n    };\n\n    var callContextTasks = function callContextTasks(taskName, fn) {\n        return _assign2.default[taskName](fn, instance);\n    };\n\n    /**\r\n     * 任务钩子\r\n     * @type {Object}\r\n     */\n    instance.threadtasks = {\n\n        /**\r\n         * li容器\r\n         * @return {[type]} [description]\r\n         */\n        container: function container() {\n            callContextTasks('Container', function (element, pseudoElement) {\n                //////////////\n                //li,li-div //\n                //////////////\n                instance.element = element;\n                instance.pseudoElement = pseudoElement;\n\n                //获取根节点\n                instance.getElement = function () {\n                    return pseudoElement ? pseudoElement : element;\n                };\n\n                setNextRunTask('flow');\n\n                //构建主容器li完毕,可以提前执行翻页动作\n                createRelated.preforkComplete();\n\n                //视觉差不管\n                if (instance.isMaster) {\n                    instance.nextTasks({\n                        'taskName': '外部Background',\n                        'outNextTasks': function outNextTasks() {\n                            instance.dispatchTasks();\n                        }\n                    });\n                }\n            });\n        },\n\n\n        /**\r\n         * 2016.9.7\r\n         * 特殊的一个内容\r\n         * 是否为流式排版\r\n         * @return {[type]} [description]\r\n         */\n        flow: function flow() {\n            //chapter=>note == 'flow'\n            if (instance.chapterDas.note == 'flow') {\n                callContextTasks('Flow', function () {\n                    setNextRunTask('complete');\n                    createRelated.createTasksComplete();\n                });\n            } else {\n                setNextRunTask('background');\n                instance.dispatchTasks();\n            }\n        },\n\n\n        /**\r\n         * 背景\r\n         * @return {[type]} [description]\r\n         */\n        background: function background() {\n            callContextTasks('Background', function () {\n                createRelated.preCreateTasks = false;\n                setNextRunTask('components');\n\n                //针对当前页面的检测\n                if (!createRelated.tasksHang || instance.isMaster) {\n                    instance.nextTasks({\n                        'taskName': '外部widgets',\n                        outNextTasks: function outNextTasks() {\n                            instance.dispatchTasks();\n                        }\n                    });\n                }\n\n                //如果有挂起任务，则继续执行\n                if (createRelated.tasksHang) {\n                    createRelated.tasksHang();\n                }\n            });\n        },\n\n\n        /**\r\n         * 组件\r\n         * @return {[type]} [description]\r\n         */\n        components: function components() {\n            //构件零件类型任务\n            callContextTasks('Components', function () {\n                setNextRunTask('contents');\n                instance.nextTasks({\n                    'taskName': '外部contents',\n                    outNextTasks: function outNextTasks() {\n                        instance.dispatchTasks();\n                    }\n                });\n            });\n        },\n\n\n        /**\r\n         * content\r\n         * @return {[type]} [description]\r\n         */\n        contents: function contents() {\n            callContextTasks('Contents', function () {\n                setNextRunTask('complete');\n                createRelated.createTasksComplete();\n            });\n        }\n    };\n};\n\nvar _assign = require('./assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _states = require('./states');\n\nvar _states2 = _interopRequireDefault(_states);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = function noop() {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/pagebase/threadtask/tasks.js\n ** module id = 141\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pMainBar = pMainBar;\nexports.pDeputyBar = pDeputyBar;\n\nvar _index = require('../util/index');\n\n/**\r\n * 分解工具栏配置文件\r\n * @return {[type]}          [description]\r\n */\nvar parseTooBar = function parseTooBar(toolbar, tbType, pageMode) {\n    if (toolbar = (0, _index.parseJSON)(toolbar)) {\n        //兼容数据库中未指定的情况\n        var n = Number(toolbar.pageMode);\n        pageMode = _.isFinite(n) ? n : pageMode;\n        if (_.isString(toolbar.tbType)) {\n            tbType = _.map(toolbar.tbType.split(','), function (num) {\n                return Number(num);\n            });\n        }\n    }\n    return {\n        'tbType': tbType,\n        'pageMode': pageMode\n    };\n};\n\n/**\r\n * 主场景工具栏配置\r\n * pageMode:默认2 允许滑动,带翻页按钮\r\n * @param  {[type]} scenarioId [description]\r\n * @return {[type]}            [description]\r\n */\nfunction pMainBar(scenarioId) {\n    var sectionRang = Xut.data.query('sectionRelated', scenarioId);\n\n    //场景工具栏配置信息\n    var toolbar = sectionRang.toolbar;\n    var pagetotal = sectionRang.length;\n\n    //默认显示系统工具栏\n    var tbType = [1];\n\n    //默认2 允许滑动,带翻页按钮\n    var pageMode = pagetotal > 1 ? 2 : 0;\n\n    return parseTooBar(toolbar, tbType, pageMode);\n}\n\n/**\r\n * 副场景工具栏配置\r\n * pageMode 是否支持滑动翻页  0禁止滑动 1允许滑动\r\n * tbType   工具栏显示的类型 [0-5]\r\n */\nfunction pDeputyBar(toolbar, pagetotal) {\n    var tbType = [0];\n    var pageMode = pagetotal > 1 ? 1 : 0;\n    return parseTooBar(toolbar, tbType, pageMode);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/scenario/barconf.js\n ** module id = 142\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SceneFactory = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _index = require('../config/index');\n\nvar _sysbar = require('../toolbar/sysbar');\n\nvar _sysbar2 = _interopRequireDefault(_sysbar);\n\nvar _fnbar = require('../toolbar/fnbar');\n\nvar _fnbar2 = _interopRequireDefault(_fnbar);\n\nvar _index2 = require('../toolbar/bookbar/index');\n\nvar _index3 = _interopRequireDefault(_index2);\n\nvar _layout = require('./layout');\n\nvar _controller = require('./controller');\n\nvar _index4 = require('../manager/index');\n\nvar _barconf = require('./barconf');\n\nvar _nexttick = require('../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 找到对应容器\r\n * @return {[type]}            [description]\r\n */\nvar findContainer = function findContainer(elements, scenarioId, isMain) {\n    return function (pane, parallax) {\n        var node;\n        if (isMain) {\n            node = '#' + pane;\n        } else {\n            node = '#' + parallax + scenarioId;\n        }\n        return elements.find(node)[0];\n    };\n};\n\n/**\r\n * 如果启动了缓存记录\r\n * 加载新的场景\r\n * @return {[type]} [description]\r\n */\nvar checkHistory = function checkHistory(history) {\n\n    //直接启用快捷调试模式\n    if (_index.config.deBugHistory) {\n        Xut.View.LoadScenario(_index.config.deBugHistory);\n        return true;\n    }\n\n    //如果有历史记录\n    if (history) {\n        var scenarioInfo = _controller.sceneController.seqReverse(history);\n        if (scenarioInfo) {\n            scenarioInfo = scenarioInfo.split('-');\n            Xut.View.LoadScenario({\n                'scenarioId': scenarioInfo[0],\n                'chapterId': scenarioInfo[1],\n                'pageIndex': scenarioInfo[2]\n            });\n            return true;\n        } else {\n            return false;\n        }\n    }\n};\n\n/**\r\n * 场景创建类\r\n * @param  {[type]} seasonId               [description]\r\n * @param  {[type]} chapterId              [description]\r\n * @param  {[type]} createCompleteCallback [创建完毕通知回调]\r\n * @param  {[type]} createMode             [创建模式]\r\n * @param  {[type]} sceneChainId           [场景ID链,用于后退按钮加载前一个场景]\r\n * @return {[type]}                        [description]\r\n */\n\nvar SceneFactory = exports.SceneFactory = function () {\n    function SceneFactory(data) {\n        var _this = this;\n\n        _classCallCheck(this, SceneFactory);\n\n        //基本配置信息\n        var seasonId = data.seasonId;\n        var chapterId = data.chapterId;\n\n        var options = _.extend(this, data, {\n            'scenarioId': seasonId,\n            'chapterId': chapterId,\n            'container': $('#xut-scene-container')\n        });\n\n        //创建主场景\n        this._createHTML(options, function () {\n            //配置工具栏行为\n            if (!Xut.IBooks.Enabled) {\n                _.extend(_this, _this._initToolBar());\n            }\n            //构建Mediator对象\n            _this._createMediator();\n            //注入场景管理\n            _controller.sceneController.add(seasonId, chapterId, _this);\n        });\n    }\n\n    /**\r\n     * 创建场景\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(SceneFactory, [{\n        key: '_createHTML',\n        value: function _createHTML(options, callback) {\n\n            //如果是静态文件执行期\n            //支持Xut.IBooks模式\n            //都不需要创建节点\n            if (Xut.IBooks.runMode()) {\n                this.elements = $('#sceneHome');\n                callback();\n                return;\n            }\n\n            var str = void 0;\n\n            if (options.isMain) {\n                str = (0, _layout.home)();\n            } else {\n                str = (0, _layout.scene)(this.scenarioId);\n            }\n\n            this.elements = $(str);\n\n            (0, _nexttick2.default)({\n                'container': this.container,\n                'content': this.elements\n            }, callback);\n        }\n\n        /**\r\n         *\r\n         * 配置工具栏行为\r\n         *  1.  工具栏类型\r\n         *  tbType：(如果用户没有选择任何工具栏信息处理，tbType字段就为空)\r\n         *   0  禁止工具栏\r\n         *   1  系统工具栏   - 显示IOS系统工具栏\r\n         *   2  场景工具栏   - 显示关闭按钮\r\n         *   3  场景工具栏   - 显示返回按钮\r\n         *   4  场景工具栏   - 显示顶部小圆点式标示\r\n         *\r\n         *  2.  翻页模式\r\n         *  pageMode：(如果用户没有选择任何处理，pageMode字段就为空)\r\n         *   0禁止滑动\r\n         *   1 允许滑动无翻页按钮\r\n         *   2 允许滑动带翻页按钮\r\n         *\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_initToolBar',\n        value: function _initToolBar() {\n            var scenarioId = this.scenarioId;\n            var pageTotal = this.pageTotal;\n            var pageIndex = this.pageIndex;\n            var elements = this.elements;\n            var findControlBar = function findControlBar() {\n                return elements.find('#controlBar');\n            };\n\n            //工具栏配置信息\n            var conf = void 0;\n\n            //主场景工具栏设置\n            if (this.isMain) {\n                conf = (0, _barconf.pMainBar)(scenarioId, pageTotal);\n\n                if (_index.config.scrollPaintingMode) {\n                    //word模式,自动启动工具条\n                    this.sToolbar = new _index3.default({\n                        container: elements,\n                        controlBar: findControlBar(),\n                        pageMode: conf.pageMode\n                    });\n                } else if (_.some(conf.tbType)) {\n                    //普通模式\n                    this.sToolbar = new _sysbar2.default({\n                        container: elements,\n                        controlBar: findControlBar(),\n                        pageTotal: pageTotal,\n                        currentPage: pageIndex + 1,\n                        pageMode: conf.pageMode\n                    });\n                }\n            } else {\n                //副场景\n                conf = (0, _barconf.pDeputyBar)(this.barInfo, pageTotal);\n                //创建工具栏\n                if (conf) {\n                    this.cToolbar = new _fnbar2.default({\n                        id: scenarioId,\n                        container: elements,\n                        tbType: conf.tbType,\n                        pageTotal: pageTotal,\n                        currentPage: pageIndex,\n                        pageMode: conf.pageMode\n                    });\n                }\n            }\n\n            return conf;\n        }\n\n        /**\r\n         * 构建创建对象\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_createMediator',\n        value: function _createMediator() {\n\n            var self = this;\n            var scenarioId = this.scenarioId;\n            var pageTotal = this.pageTotal;\n            var pageIndex = this.pageIndex;\n            var elements = this.elements;\n            var pageMode = this.pageMode;\n            var isMain = this.isMain;\n            var tempfind = findContainer(elements, scenarioId, isMain);\n            //页面容器\n            var scenarioPage = tempfind('pageContainer', 'scenarioPage-');\n            //视差容器\n            var scenarioMaster = tempfind('masterContainer', 'scenarioMaster-');\n\n            //场景容器对象\n            var vm = this.vm = new _index4.Mediator({\n                'container': this.elements[0],\n                'pageMode': pageMode,\n                'multiScenario': !isMain,\n                'rootPage': scenarioPage,\n                'rootMaster': scenarioMaster,\n                'initIndex': pageIndex, //保存索引从0开始\n                'pagetotal': pageTotal,\n                'sectionRang': this.sectionRang,\n                'scenarioId': scenarioId,\n                'chapterId': this.chapterId,\n                'isInApp': this.isInApp //提示页面\n            });\n\n            /**\r\n             * 配置选项\r\n             * @type {[type]}\r\n             */\n            var isToolbar = this.isToolbar = this.cToolbar ? this.cToolbar : this.sToolbar;\n\n            /**\r\n             * 监听翻页\r\n             * 用于更新页码\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('pageUpdate', function (pageIndex) {\n                isToolbar && isToolbar.updatePointer(pageIndex);\n            });\n\n            /**\r\n             * 显示下一页按钮\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('showNext', function () {\n                isToolbar && isToolbar.showNext();\n            });\n\n            /**\r\n             * 隐藏下一页按钮\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('hideNext', function () {\n                isToolbar && isToolbar.hideNext();\n            });\n\n            /**\r\n             * 显示上一页按钮\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('showPrev', function () {\n                isToolbar && isToolbar.showPrev();\n            });\n\n            /**\r\n             * 隐藏上一页按钮\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('hidePrev', function () {\n                isToolbar && isToolbar.hidePrev();\n            });\n\n            /**\r\n             * 切换工具栏\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('toggleToolbar', function (state, pointer) {\n                isToolbar && isToolbar.toggle(state, pointer);\n            });\n\n            /**\r\n             * 复位工具栏\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('resetToolbar', function () {\n                self.sToolbar && self.sToolbar.reset();\n            });\n\n            /**\r\n             * 监听创建完成\r\n             * @return {[type]} [description]\r\n             */\n            vm.$bind('createComplete', function (nextAction) {\n                self.complete && setTimeout(function () {\n                    if (isMain) {\n                        self.complete(function () {\n                            Xut.View.HideBusy();\n                            //检测是不是有缓存加载\n                            if (!checkHistory(self.history)) {\n                                //指定自动运行的动作\n                                nextAction && nextAction();\n                            }\n                            //全局接口,应用加载完毕\n                            Xut.Application.AddEventListener();\n                        });\n                    } else {\n                        self.complete(nextAction);\n                    }\n                }, 200);\n            });\n\n            //如果是读酷端加载\n            if (window.DUKUCONFIG && isMain && window.DUKUCONFIG.success) {\n                window.DUKUCONFIG.success();\n                vm.$init();\n                //如果是客户端加载\n            } else if (window.CLIENTCONFIGT && isMain && window.CLIENTCONFIGT.success) {\n                window.CLIENTCONFIGT.success();\n                vm.$init();\n            } else {\n                //正常加载\n                vm.$init();\n            }\n\n            /**\r\n             * 绑定桌面调试\r\n             */\n            _index.config.debugMode && Xut.plat.isBrowser && this._bindWatch();\n        }\n\n        /**\r\n         * 为桌面测试\r\n         * 绑定调试\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: '_bindWatch',\n        value: function _bindWatch() {\n            // for test\n            if (Xut.plat.isBrowser) {\n                var vm = this.vm;\n                this.testWatch = $(\".xut-controlBar-pageNum\").click(function () {\n                    console.log('主场景', vm);\n                    console.log('主场景容器', vm.$scheduler.pageMgr.Collections);\n                    console.log('主场景视觉差容器', vm.$scheduler.parallaxMgr && vm.$scheduler.parallaxMgr.Collections);\n                    console.log('多场景', _controller.sceneController.expose());\n                    console.log('数据库', Xut.data);\n                });\n            }\n        }\n\n        /**\r\n         * 销毁场景对象\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            /**\r\n             * 桌面调试\r\n             */\n            if (this.testWatch) {\n                this.testWatch.off();\n                this.testWatch = null;\n            }\n\n            /**\r\n             * 销毁当前场景\r\n             */\n            this.vm.$destroy();\n\n            /**\r\n             * 销毁工具栏\r\n             */\n            if (this.isToolbar) {\n                this.isToolbar.destroy();\n                this.isToolbar = null;\n            }\n\n            this.container = null;\n\n            //销毁节点\n            this.elements.off();\n            this.elements.remove();\n            this.elements = null;\n\n            //销毁引用\n            _controller.sceneController.remove(this.scenarioId);\n        }\n    }]);\n\n    return SceneFactory;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/scenario/factory.js\n ** module id = 143\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = api;\n\nvar _depend = require('./depend');\n\nfunction api(Swipe) {\n\n    Swipe.prototype.openSwipe = function () {\n        this._initOperation();\n    };\n\n    Swipe.prototype.closeSwipe = function () {\n        this._evtDestroy();\n    };\n\n    /**\r\n     * 是否为边界\r\n     * @param  {[type]}  distance [description]\r\n     * @return {Boolean}          [description]\r\n     */\n    Swipe.prototype.isBorder = function (distance) {\n        //起点左偏移\n        if (this._hindex === 0 && distance > 0) {\n            return true;\n        }\n        //终点右偏移\n        if (this._hindex === this.pagetotal - 1 && distance < 0) {\n            return true;\n        }\n    };\n\n    /**\r\n     * 检车是否还在移动中\r\n     * @return {Boolean} [description]\r\n     */\n    Swipe.prototype.isMoveimg = function () {\n        return this._fliplock;\n    };\n\n    /**\r\n     * 前翻页接口\r\n     * @return {[type]} [description]\r\n     */\n    Swipe.prototype.prev = function () {\n        if (!this._borderBounce(1)) {\n            this._slideTo('prev');\n        }\n    };\n\n    /**\r\n     * 后翻页接口\r\n     * @return {Function} [description]\r\n     */\n    Swipe.prototype.next = function () {\n        if (!this._borderBounce(-1)) {\n            this._slideTo('next');\n        }\n    };\n\n    /**\r\n     * 获取当前页码\r\n     * @return {[type]} [description]\r\n     */\n    Swipe.prototype.getHindex = function () {\n        return this._hindex;\n    };\n\n    /**\r\n     * 主动设置页码编号\r\n     * 因为分栏的关系，内部修改外部\r\n     * 页面需要拼接\r\n     */\n    Swipe.prototype.setPointer = function (target, pagetotal) {\n        this._pagePointer = (0, _depend.initPointer)(target, pagetotal || this.pagetotal);\n    };\n\n    /**\r\n     * 获取页面Pointer\r\n     * @return {[type]} [description]\r\n     */\n    Swipe.prototype.getPointer = function () {\n        return this._pagePointer;\n    };\n\n    /**\r\n     * 跳指定页面\r\n     * @param  {[type]} targetIndex [description]\r\n     * @param  {[type]} preMode     [description]\r\n     * @param  {[type]} complete    [description]\r\n     * @return {[type]}             [description]\r\n     */\n    Swipe.prototype.scrollToPage = function (targetIndex) {\n        //目标页面\n\n        //如果还在翻页中\n        if (this._fliplock) return;\n\n        var data;\n        var currIndex = this._hindex; //当前页面\n\n        switch (targetIndex) {\n            //前一页\n            case currIndex - 1:\n                if (this.multiplePages) {\n                    return this.prev();\n                }\n                break;\n            //首页\n            case currIndex:\n                if (currIndex == 0) {\n                    this.$emit('onDropApp');\n                }\n                return;\n            //后一页\n            case currIndex + 1:\n                if (this.multiplePages) {\n                    return this.next();\n                }\n                break;\n        }\n\n        //算出是相关数据\n        data = (0, _depend.calculationIndex)(currIndex, targetIndex, this.pagetotal);\n\n        //更新页码索引\n        this._updataPointer(data);\n\n        data.pagePointer = this._pagePointer;\n\n        this.$emit('onJumpPage', data);\n    };\n\n    /**\r\n     * 销毁所有\r\n     * @return {[type]} [description]\r\n     */\n    Swipe.prototype.destroy = function () {\n        this._evtDestroy();\n        this.$off();\n        this._bubbleNode.page = null;\n        this._bubbleNode.master = null;\n        this.element = null;\n    };\n\n    /**\r\n     * 设置动画完成\r\n     * @param {[type]} element [description]\r\n     */\n    Swipe.prototype.setAnimComplete = function (element) {\n        this.distributed(element[0]);\n    };\n\n    /**\r\n     * 目标元素\r\n     * 找到li元素\r\n     * @param  {Function} callback [description]\r\n     * @return {[type]}            [description]\r\n     */\n    Swipe.prototype.findRootElement = function (point, pageType) {\n        var liNode = void 0,\n            map = void 0;\n        var _hindex = this._hindex;\n        var sectionRang = this.sectionRang;\n\n        //找到对应的li\n        var childNodes = this._bubbleNode[pageType].childNodes;\n        var numNodes = childNodes.length;\n\n        while (numNodes--) {\n            liNode = childNodes[numNodes];\n            map = liNode.getAttribute('data-map');\n            if (sectionRang) {\n                _hindex += sectionRang.start;\n            }\n            if (map == _hindex) {\n                return liNode;\n            }\n            _hindex = this._hindex;\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/swipe/api.js\n ** module id = 144\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * [svgIconConfig description]\r\n * http://tympanus.net/Development/AnimatedSVGIcons/\r\n * @type {Object}\r\n */\nvar iconConfig = {\n    nextArrow: {\n        url: 'images/icons/pageback.svg',\n        animation: [{\n            el: 'path:nth-child(1)',\n            animProperties: {\n                from: {\n                    val: '{\"transform\" : \"r0 16 16\", \"fill-opacity\" : \"0.9\"}',\n                    before: '{\"fill-opacity\" : \"0.9\", \"stroke-opacity\" : \"0\" , \"transform\" : \"r90 16 16\"}'\n                },\n                to: {\n                    val: '{\"transform\" : \"r360 16 16\", \"fill-opacity\": \"0\"}',\n                    before: '{\"fill-opacity\" : \"0\", \"stroke-opacity\" : \"1\" }'\n                }\n            }\n        }]\n    },\n    prevArrow: {\n        url: 'images/icons/pageforward.svg',\n        animation: [{\n            el: 'path:nth-child(1)',\n            animProperties: {\n                from: {\n                    val: '{\"transform\" : \"r0 16 16\", \"fill-opacity\" : \"0.9\"}',\n                    before: '{\"fill-opacity\" : \"0.9\", \"stroke-opacity\" : \"0\" , \"transform\" : \"r90 16 16\"}'\n                },\n                to: {\n                    val: '{\"transform\" : \"r360 16 16\", \"fill-opacity\": \"0\"}',\n                    before: '{\"fill-opacity\" : \"0\", \"stroke-opacity\" : \"1\" }'\n                }\n            }\n        }]\n    },\n    close: {\n        url: 'images/icons/close.svg',\n        animation: [{\n            el: 'path:nth-child(1)',\n            animProperties: {\n                from: {\n                    val: '{\"transform\" : \"r0 16 16\", \"fill-opacity\" : \"0.9\"}',\n                    before: '{\"fill-opacity\" : \"0.9\", \"stroke-opacity\" : \"0\" , \"transform\" : \"r90 16 16\"}'\n                },\n                to: {\n                    val: '{\"transform\" : \"r360 16 16\", \"fill-opacity\": \"0\"}',\n                    before: '{\"fill-opacity\" : \"0\", \"stroke-opacity\" : \"1\" }'\n                }\n            }\n        }]\n    },\n    back: {\n        url: 'images/icons/back.svg',\n        animation: [{\n            el: 'path:nth-child(1)',\n            animProperties: {\n                from: {\n                    val: '{\"transform\" : \"r0 16 16\", \"fill-opacity\" : \"0.9\"}',\n                    before: '{\"fill-opacity\" : \"0.9\", \"stroke-opacity\" : \"0\" , \"transform\" : \"r90 16 16\"}'\n                },\n                to: {\n                    val: '{\"transform\" : \"r360 16 16\", \"fill-opacity\": \"0\"}',\n                    before: '{\"fill-opacity\" : \"0\", \"stroke-opacity\" : \"1\" }'\n                }\n            }\n        }]\n    }\n};\n\nexports.iconConfig = iconConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/base/iconconfig.js\n ** module id = 145\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.svgIcon = svgIcon;\n\nvar _tap = require(\"../../tap\");\n\n/*** helper functions ***/\n\n// from https://github.com/desandro/classie/blob/master/classie.js\nfunction classReg(className) {\n    return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n} /**\r\n   * svgicons.js v1.0.0\r\n   * http://www.codrops.com\r\n   *\r\n   * Licensed under the MIT license.\r\n   * http://www.opensource.org/licenses/mit-license.php\r\n   *\r\n   * Copyright 2013, Codrops\r\n   * http://www.codrops.com\r\n   */\n\nfunction hasClass(el, c) {\n    return 'classList' in document.documentElement ? el.classList.contains(c) : classReg(c).test(el.className);\n}\n\nfunction extend(a, b) {\n    for (var key in b) {\n        if (b.hasOwnProperty(key)) {\n            a[key] = b[key];\n        }\n    }\n    return a;\n}\n\n// from http://stackoverflow.com/a/11381730/989439\nfunction mobilecheck() {\n    var check = false;\n    (function (a) {\n        if (/(android|ipad|playbook|silk|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n}\n\n// http://snipplr.com/view.php?codeview&id=5259\nfunction isMouseLeaveOrEnter(e, handler) {\n    if (e.type != 'mouseout' && e.type != 'mouseover') return false;\n    var reltg = e.relatedTarget ? e.relatedTarget : e.type == 'mouseout' ? e.toElement : e.fromElement;\n    while (reltg && reltg != handler) {\n        reltg = reltg.parentNode;\n    }return reltg != handler;\n}\n\n/*** svgIcon ***/\n\nfunction svgIcon(el, config, options) {\n    this.el = el;\n    this.options = extend({}, this.options);\n    extend(this.options, options);\n    this.svg = Snap(this.options.size.w, this.options.size.h);\n    this.svg.attr('viewBox', '0 0 32 32');\n    this.el.appendChild(this.svg.node);\n    // state\n    this.toggled = false;\n    // icons configuration\n    this.config = config[this.el.getAttribute('data-icon-name')];\n    // reverse?\n    if (hasClass(this.el, 'si-icon-reverse')) {\n        this.reverse = true;\n    }\n    if (!this.config) return;\n    var self = this;\n    // load external svg\n    Snap.load(this.config.url, function (f) {\n        var g = f.select('g');\n        self.svg.append(g);\n        self.options.onLoad();\n        self._initEvents();\n        if (self.reverse) {\n            self.toggle(true);\n        }\n    });\n}\n\nsvgIcon.prototype.options = {\n    speed: 200,\n    easing: mina.linear,\n    evtoggle: 'click', // click || mouseover\n    size: {\n        w: 44,\n        h: 44\n    },\n    onLoad: function onLoad() {\n        return false;\n    },\n    onToggle: function onToggle() {\n        return false;\n    }\n};\n\nsvgIcon.prototype._initEvents = function () {\n    var self = this,\n        toggleFn = function toggleFn(ev) {\n        if ((ev.type.toLowerCase() === 'mouseover' || ev.type.toLowerCase() === 'mouseout') && isMouseLeaveOrEnter(ev, this) || ev.type.toLowerCase() === 'touchstart' || ev.type.toLowerCase() === 'mousedown') {\n            self.toggle(true);\n            self.options.onToggle();\n        }\n        return false;\n    };\n\n    if (this.options.evtoggle === 'mouseover') {\n        this.el.addEventListener('mouseover', toggleFn);\n        this.el.addEventListener('mouseout', toggleFn);\n    } else {\n\n        (0, _tap.bindTap)(this.el, {\n            start: function start(e) {\n                toggleFn(e);\n            }\n        });\n    }\n};\n\nsvgIcon.prototype.toggle = function (motion) {\n    if (!this.config.animation) return;\n    var self = this;\n    for (var i = 0, len = this.config.animation.length; i < len; ++i) {\n        var a = this.config.animation[i],\n            el = this.svg.select(a.el),\n            animProp = this.toggled ? a.animProperties.from : a.animProperties.to,\n            val = animProp.val,\n            timeout = motion && animProp.delayFactor ? animProp.delayFactor : 0;\n\n        if (animProp.before) {\n            el.attr(JSON.parse(animProp.before));\n        }\n\n        if (motion) {\n            setTimeout(function (el, val, animProp) {\n                return function () {\n                    el.animate(JSON.parse(val), self.options.speed, self.options.easing, function () {\n                        if (animProp.after) {\n                            this.attr(JSON.parse(animProp.after));\n                        }\n                        if (animProp.animAfter) {\n                            this.animate(JSON.parse(animProp.animAfter), self.options.speed, self.options.easing);\n                        }\n                    });\n                };\n            }(el, val, animProp), timeout * self.options.speed);\n        } else {\n            el.attr(JSON.parse(val));\n        }\n    }\n    this.toggled = !this.toggled;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/base/svgicon.js\n ** module id = 146\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bar = require('./base/bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nvar _index = require('../config/index');\n\nvar _lang = require('../util/lang');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 函数工具栏\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar fnBar = function (_Bar) {\n    _inherits(fnBar, _Bar);\n\n    function fnBar() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var pageMode = _ref.pageMode;\n        var id = _ref.id;\n        var container = _ref.container;\n        var tbType = _ref.tbType;\n        var pageTotal = _ref.pageTotal;\n        var currentPage = _ref.currentPage;\n\n        _classCallCheck(this, fnBar);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(fnBar).call(this));\n\n        _this.pageTips = null;\n        _this.currTip = null;\n        _this.tipsMode = 0;\n        _this.top = 0;\n        _this.Lock = false;\n        _this.delay = 50;\n        _this.hasTopBar = false;\n        _this.barStatus = true;\n        _this.arrows = (0, _lang.hash)();\n        //options\n        _this.pageMode = pageMode;\n        _this.id = id;\n        _this.container = container;\n        _this.tbType = tbType;\n        _this.pageTotal = pageTotal;\n        _this.currentPage = currentPage;\n\n        _this.initConfig();\n\n        _this.initTool();\n        return _this;\n    }\n\n    /**\r\n     * 创建工具栏\r\n     * tbType:\r\n     *      0   禁止工具栏\r\n     *      1   系统工具栏   - 显示IOS系统工具栏\r\n     *      2   场景工具栏   - 显示关闭按钮\r\n     *      3   场景工具栏   - 显示返回按钮\r\n     *      4   场景工具栏   - 显示顶部小圆点式标示\r\n     *  pageMode:\r\n     *      0禁止滑动\r\n     *      1允许滑动无翻页按钮\r\n     *      2 允许滑动带翻页按钮\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(fnBar, [{\n        key: 'initTool',\n        value: function initTool() {\n            var container = this.container,\n                type;\n\n            container.hide();\n            this.controlBar = [];\n\n            while (type = this.tbType.shift()) {\n                switch (type) {\n                    case 1:\n                        this.createSystemBar();\n                        break;\n                    case 2:\n                        this.createCloseIcon();\n                        break;\n                    case 3:\n                        this.createBackIcon(container);\n                        break;\n                    case 4:\n                        this.createPageTips();\n                        break;\n                    default:\n                        this.barStatus = false;\n                        this.hasTopBar = false;\n                        break;\n                }\n            }\n\n            //创建翻页按钮\n            if (this.pageMode === 2) {\n                this.createArrows();\n            }\n\n            container.show();\n\n            //邦定事件\n            this.bindButtonsEvent();\n        }\n\n        /**\r\n         * 系统工具栏\r\n         */\n\n    }, {\n        key: 'createSystemBar',\n        value: function createSystemBar() {\n            var id = this.id,\n                TOP = this.barHeight,\n                html = '',\n                style = 'top:0;height:' + this.iconHeight + 'px;padding-top:' + TOP + 'px';\n            html = '<div id=\"controlBar' + id + '\" class=\"xut-controlBar\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.top = TOP;\n            this.showSystemBar();\n            this.createBackIcon(html);\n            this.createTitle(html);\n            this.createPageNum(html);\n            this.controlBar = html;\n            this.container.append(html);\n            this.hasTopBar = true;\n        }\n\n        /**\r\n         * 页码小圆点\r\n         */\n\n    }, {\n        key: 'createPageTips',\n        value: function createPageTips() {\n            var chapters = this.pageTotal,\n                height = this.iconHeight,\n                TOP = this.top,\n                isIOS = Xut.plat.isIOS,\n                html = '';\n\n            //如果只有一页则不显示小圆\n            if (chapters < 2) {\n                return '';\n            }\n\n            var calculate = _index.config.proportion.calculateContainer();\n            //圆点尺寸\n            var size = isIOS ? 7 : Math.max(8, Math.round(this.propHeight * 8)),\n                width = 2.5 * size,\n                //圆点间距\n            tipsWidth = chapters * width,\n                //圆点总宽度\n            top = (height - size) / 2,\n                //保持圆点垂直居中\n            left = (calculate.width - tipsWidth) / 2; //保持圆点水平居中\n\n            html = '<ul class=\"xut-scenario-tips\"  style=\"top:' + TOP + 'px;left:' + left + 'px;width:' + tipsWidth + 'px;opacity:0.6\">';\n            for (var i = 1; i <= chapters; i++) {\n                html += '<li class=\"xut-scenario-dark\" style=\"float:left;width:' + width + 'px;height:' + height + 'px;\" data-index=\"' + i + '\">';\n                html += '<div class=\"xut-scenario-radius\" style=\"width:' + size + 'px;height:' + size + 'px;margin:' + top + 'px auto\"></div></li>';\n            }\n            html += '</ul>';\n            html = $(html);\n            this.pageTips = html.children();\n            this.tipsMode = 1;\n            this.controlBar.push(html);\n            this.container.append(html);\n        }\n\n        /**\r\n         * 更新页码指示\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'updatePointer',\n        value: function updatePointer(pageIndex) {\n            switch (this.tipsMode) {\n                case 1:\n                    if (this.prevTip) {\n                        this.prevTip.className = 'xut-scenario-dark';\n                    }\n                    this.currTip = this.pageTips[pageIndex];\n                    this.currTip.className = 'xut-scenario-light';\n                    this.prevTip = this.currTip;\n                    break;\n                case 2:\n                    this.currTip.html(pageIndex + 1);\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        /**\r\n         * [ 关闭按钮]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createCloseIcon',\n        value: function createCloseIcon() {\n            var style,\n                html,\n                TOP = this.top,\n                height = this.iconHeight;\n            style = 'top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon xut-scenario-close\" data-icon-name=\"close\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon($(html)[0], function () {\n                Xut.View.CloseScenario();\n            });\n            this.controlBar.push(html);\n            this.container.append(html);\n        }\n\n        /**\r\n         * [ 返回按钮]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createBackIcon',\n        value: function createBackIcon(container) {\n            var style,\n                html,\n                TOP = this.top,\n                height = this.iconHeight;\n            style = 'top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon xut-scenario-back\" data-icon-name=\"back\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon(html[0], function () {\n                Xut.View.CloseScenario();\n            });\n            this.controlBar.push(html);\n            container.append(html);\n        }\n\n        //创建页码数\n\n    }, {\n        key: 'createPageNum',\n        value: function createPageNum(container) {\n            var pageTotal = this.pageTotal,\n                TOP = this.top,\n                height = this.iconHeight,\n                currentPage = this.currentPage,\n                style,\n                html;\n            style = 'position:absolute;right:4px;top:' + (height * 0.25 + TOP) + 'px;padding:0 0.25em;height:' + height * 0.5 + 'px;line-height:' + height * 0.5 + 'px;border-radius:0.5em';\n            html = '<div class=\"xut-controlBar-pageNum\" style=\"' + style + '\">';\n            html += '<span class=\"currentPage\">' + currentPage + '</span>/<span>' + pageTotal + '</span>';\n            html += '</div>';\n            html = $(html);\n            this.tipsMode = 2;\n            this.currTip = html.children().first();\n            container.append(html);\n        }\n\n        //工具栏隐藏按钮\n\n    }, {\n        key: 'createHideToolbar',\n        value: function createHideToolbar(container) {\n            var html,\n                style,\n                TOP = this.top,\n                height = this.iconHeight,\n                right = this.iconHeight * 2.5;\n            style = 'position:absolute;right:' + right + 'px;top:' + TOP + 'px;width:' + height + 'px;height:' + height + 'px;background-size:cover';\n            html = '<div class=\"xut-controlBar-hide\" style=\"' + style + '\"></div>';\n            container.append(html);\n        }\n\n        //应用标题\n\n    }, {\n        key: 'createTitle',\n        value: function createTitle(container) {\n            var style,\n                html,\n                appName = this.appName;\n            style = 'line-height:' + this.iconHeight + 'px';\n            html = '<div class=\"xut-controlBar-title\" style=\"' + style + '\">' + appName + '</div>';\n            container.append(html);\n        }\n\n        /**\r\n         * [ 普通按钮邦定事件]\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'bindButtonsEvent',\n        value: function bindButtonsEvent() {\n            var that = this,\n                index = 1,\n                id = this.id;\n\n            this.container.on(\"touchend touchend\", function (e) {\n                var target = Xut.plat.evtTarget(e),\n                    type = target.className;\n                switch (type) {\n                    case 'xut-controlBar-hide':\n                        that.hideTopBar();\n                        break;\n                    case 'xut-scenario-dark':\n                        if (that.pageMode) {\n                            index = target.getAttribute('data-index') || 1;\n                            Xut.View.GotoSlide(Number(index));\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n\n        /**\r\n         * [ 显示顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showTopBar',\n        value: function showTopBar() {\n            var that = this,\n                delay = this.delay,\n                controlBar = this.controlBar;\n            if (this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n            if (this.hasTopBar) {\n                controlBar.css({\n                    'display': 'block',\n                    'opacity': 0\n                });\n                setTimeout(function () {\n                    controlBar.animate({\n                        'opacity': 1\n                    }, delay, 'linear', function () {\n                        that.showSystemBar();\n                        that.barStatus = true;\n                        that.Lock = false;\n                    });\n                });\n            } else {\n                controlBar.forEach(function (el) {\n                    el.show();\n                    that.Lock = false;\n                    that.barStatus = true;\n                });\n            }\n        }\n\n        /**\r\n         * [ 隐藏顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideTopBar',\n        value: function hideTopBar() {\n            var that = this,\n                delay = this.delay,\n                controlBar = this.controlBar;\n\n            if (!this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n            if (this.hasTopBar) {\n                controlBar.animate({\n                    'opacity': 0\n                }, delay, 'linear', function () {\n                    that.controlBar.hide();\n                    that.hideSystemBar();\n                    that.barStatus = false;\n                    that.Lock = false;\n                });\n            } else {\n                controlBar.forEach(function (el) {\n                    el.hide(delay, function () {\n                        that.Lock = false;\n                        that.barStatus = false;\n                    });\n                });\n            }\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.container.off();\n            this.controlBar = null;\n            this.arrows = null;\n            this.pageTips = null;\n            this.currTip = null;\n            this.prevTip = null;\n        }\n    }]);\n\n    return fnBar;\n}(_bar2.default);\n\nexports.default = fnBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/fnbar.js\n ** module id = 149\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createdom = createdom;\n\nvar _layout = require('../../scenario/layout');\n\nvar _nexttick = require('../../nexttick');\n\nvar _nexttick2 = _interopRequireDefault(_nexttick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 创建dom\r\n */\nfunction createdom(artControl, callback) {\n\n    var pageArray = [];\n\n    Xut.data.query('Chapter', Xut.data.novelId, 'seasonId', function (item) {\n        pageArray.push(item);\n    });\n\n    //显示下拉菜单\n    (0, _nexttick2.default)({\n        'container': artControl,\n        'content': (0, _layout.nav)(pageArray)\n    }, function () {\n        callback(pageArray);\n    });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/navbar/dom.js\n ** module id = 150\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _bar = require('./base/bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nvar _lang = require('../util/lang');\n\nvar _index = require('./navbar/index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 系统工具栏\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * 主场景工具栏\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar sysBar = function (_Bar) {\n    _inherits(sysBar, _Bar);\n\n    function sysBar() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var controlBar = _ref.controlBar;\n        var container = _ref.container;\n        var pageMode = _ref.pageMode;\n        var pageTotal = _ref.pageTotal;\n        var currentPage = _ref.currentPage;\n\n        _classCallCheck(this, sysBar);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(sysBar).call(this));\n\n        _this.arrows = (0, _lang.hash)();\n        _this.curTips = null; //当前页码对象\n        _this.Lock = false; //操作锁\n        _this.delay = 50; //动画延时\n        _this.hasTopBar = true; //有顶部工具条\n        _this.controlBar = controlBar;\n        _this.container = container;\n        _this.pageMode = pageMode;\n        _this.pageTotal = pageTotal;\n        _this.currentPage = currentPage;\n\n        //配置属性\n        _this.initConfig();\n\n        _this._initTool();\n        return _this;\n    }\n\n    /**\r\n     * init tool\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(sysBar, [{\n        key: '_initTool',\n        value: function _initTool() {\n\n            var bar = this.controlBar,\n                setting = this.settings;\n\n            //工具栏的显示状态\n            this.barStatus = bar.css('display') === 'none' ? false : true;\n\n            //工具栏摆放位置\n            this.toolbarPostion(bar, setting.ToolbarPos);\n\n            //首页按钮\n            setting.HomeBut && this.createHomeIcon(bar);\n\n            //目录按钮\n            setting.ContentBut && this.createDirIcon(bar);\n\n            //添加标题\n            this.createTitle(bar);\n\n            //关闭子文档\n            setting.CloseBut && this.createCloseIcon(bar);\n\n            //页码数\n            setting.PageBut && this.createPageNum(bar);\n\n            //工具栏隐藏按钮\n            this.createHideToolbar(bar);\n\n            //翻页按钮\n            if (this.pageMode == 2) {\n                this.createArrows();\n            }\n\n            //邦定事件\n            this.bindButtonsEvent(bar);\n        }\n\n        /**\r\n         * 工具条的位置\r\n         * @param  {[type]} bar      [description]\r\n         * @param  {[type]} position [description]\r\n         * @return {[type]}          [description]\r\n         */\n\n    }, {\n        key: 'toolbarPostion',\n        value: function toolbarPostion(bar, position) {\n            var height = this.iconHeight,\n                TOP = this.barHeight;\n            if (position == 1) {\n                //在底部\n                bar.css({\n                    bottom: 0,\n                    height: height + 'px'\n                });\n            } else {\n                //在顶部\n                bar.css({\n                    top: 0,\n                    height: height + 'px',\n                    paddingTop: TOP + 'px'\n                });\n            }\n        }\n\n        /**\r\n         * 创建主页按钮\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createHomeIcon',\n        value: function createHomeIcon(bar) {\n            var str = '<div id=\"backHome\" style=\"float:left;text-indent:0.25em;height:{0}px;line-height:{1}px;color:#007aff\">主页</div>',\n                height = this.iconHeight,\n                html = $(String.format(str, height, height));\n            bar.append(html);\n        }\n\n        /**\r\n         * 创建目录按钮\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createDirIcon',\n        value: function createDirIcon(bar) {\n            var str = '<div id=\"backDir\" class=\"xut-controlBar-backDir\" style=\"float:left;margin-left:4px;width:{0}px;height:{1}px;background-size:cover\"></div>',\n                height = this.iconHeight,\n                html = $(String.format(str, height, height));\n            bar.append(html);\n        }\n\n        /**\r\n         * 创建页码数\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createPageNum',\n        value: function createPageNum(bar) {\n            var height = this.iconHeight,\n                marginTop = height * 0.25,\n                iconH = height * 0.5,\n                str,\n                html;\n            str = '<div class=\"xut-controlBar-pageNum\" style=\"float:right;margin:{0}px 4px;padding:0 0.25em;height:{1}px;line-height:{2}px;border-radius:0.5em\"><span>{3}</span>/<span>{4}</span></div>';\n            html = $(String.format(str, marginTop, iconH, iconH, this.currentPage, this.pageTotal));\n            this.curTips = html.children().first();\n            bar.append(html);\n        }\n\n        /**\r\n         * 工具栏隐藏按钮\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createHideToolbar',\n        value: function createHideToolbar(bar) {\n            var html,\n                style,\n                height = this.iconHeight;\n            style = 'float:right;width:' + height + 'px;height:' + height + 'px;background-size:cover';\n            html = '<div id=\"hideToolbar\" class=\"xut-controlBar-hide\" style=\"' + style + '\"></div>';\n            bar.append(html);\n        }\n\n        //关闭子文档按钮\n\n    }, {\n        key: 'createCloseIcon',\n        value: function createCloseIcon(bar) {\n            var style,\n                html,\n                height = this.iconHeight;\n            style = 'float:right;margin-right:4px;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon\" data-icon-name=\"close\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon(html[0], function () {\n                if (window.SUbDOCCONTEXT) {\n                    window.SUbDOCCONTEXT.Xut.publish('subdoc:dropApp');\n                } else {\n                    Xut.publish('magazine:dropApp');\n                }\n            });\n            bar.append(html);\n        }\n\n        //应用标题\n\n    }, {\n        key: 'createTitle',\n        value: function createTitle(bar) {\n            var style,\n                html,\n                appName = this.appName,\n                height = this.iconHeight;\n            style = 'width:100%;position:absolute;line-height:' + height + 'px;pointer-events:none';\n            html = '<div class=\"xut-controlBar-title\" style=\"z-index:-99;' + style + '\">' + appName + '</div>';\n            bar.append(html);\n        }\n\n        /**\r\n         * [ 返回按钮]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createBackIcon',\n        value: function createBackIcon(container) {\n            var style,\n                html,\n                height = this.iconHeight;\n            style = 'float:left;width:' + height + 'px;height:' + height + 'px';\n            html = '<div class=\"si-icon\" data-icon-name=\"back\" style=\"' + style + '\"></div>';\n            html = $(html);\n            this.createSVGIcon(html[0], function () {\n                Xut.Application.Suspend({\n                    dispose: function dispose() {\n                        //停止热点动作\n                        Xut.Application.DropApp(); //退出应用\n                    },\n                    processed: function processed() {\n                        Xut.Application.DropApp(); //退出应用\n                    }\n                });\n            });\n            container.append(html);\n        }\n\n        /**\r\n         * 更新页码指示\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'updatePointer',\n        value: function updatePointer(pageIndex) {\n            this.curTips && this.curTips.html(pageIndex + 1);\n        }\n    }, {\n        key: 'bindButtonsEvent',\n        value: function bindButtonsEvent(bar) {\n            var that = this;\n            bar.on(\"touchend mouseup\", function (e) {\n                var type = Xut.plat.evtTarget(e).id;\n                switch (type) {\n                    case \"backHome\":\n                        that.homeControl();\n                        break;\n                    case \"backDir\":\n                        that.navigationBar();\n                        break;\n                    case 'hideToolbar':\n                        that.hideTopBar();\n                        break;\n                }\n            });\n        }\n\n        /**\r\n         * [ 跳转处理]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'homeControl',\n        value: function homeControl() {\n            if (window.DUKUCONFIG) {\n                Xut.Application.Suspend({\n                    dispose: function dispose() {\n                        Xut.Application.DropApp(); //退出应用\n                    },\n                    processed: function processed() {\n                        Xut.Application.DropApp(); //退出应用\n                    }\n                });\n                return;\n            }\n\n            Xut.Application.Suspend({\n                dispose: function dispose(promptMessage) {\n                    //停止热点动作\n                    //promptMessage('再按一次将跳至首页！')\n                },\n                processed: function processed() {\n                    Xut.View.GotoSlide(1); //调整到首页\n                }\n            });\n        }\n\n        /**\r\n         * [ 打开目录关闭当前页面活动热点]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'navigationBar',\n        value: function navigationBar() {\n            (0, _index.oepn)(Xut.Presentation.GetPageIndex());\n        }\n\n        /**\r\n         * [ 显示顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showTopBar',\n        value: function showTopBar() {\n            var that = this;\n\n            if (this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n            this.controlBar.css({\n                'display': 'block',\n                'opacity': 0\n            });\n\n            setTimeout(function () {\n                that.controlBar && that.controlBar.animate({\n                    'opacity': 1\n                }, that.delay, 'linear', function () {\n                    (0, _index.close)();\n                    that.showSystemBar();\n                    that.barStatus = true;\n                    that.Lock = false;\n                });\n            });\n        }\n\n        /**\r\n         * [ 隐藏顶部工具栏]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideTopBar',\n        value: function hideTopBar() {\n            var that = this;\n\n            if (!this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n\n            this.controlBar.animate({\n                'opacity': 0\n            }, that.delay, 'linear', function () {\n                (0, _index.close)();\n                that.controlBar.hide();\n                that.hideSystemBar();\n                that.barStatus = false;\n                that.Lock = false;\n            });\n        }\n\n        //销毁 \n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.controlBar.off();\n            this.controlBar = null;\n            this.arrows = null;\n            this.curTips = null;\n            this.barStatus = false;\n        }\n    }]);\n\n    return sysBar;\n}(_bar2.default);\n\nexports.default = sysBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/sysbar.js\n ** module id = 151\n ** module chunks = 0\n **/","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * 缓存池\r\n * @return {[type]} [description]\r\n */\nfunction createCache() {\n    var keys = [];\n    function cache(key, value) {\n        if (keys.push(key) > 20) {\n            delete cache[keys.shift()];\n        }\n        return cache[key] = value;\n    }\n    return cache;\n}\n\nvar contentCache = exports.contentCache = createCache();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/buffer.js\n ** module id = 152\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.addEdges = addEdges;\n/**\r\n * 利用canvas绘制出蒙板效果替换，需要蒙板效果的图片先用一个canvas占位，绘制是异步的\r\n */\n\nfunction _getCanvas(className) {\n    var children = document.getElementsByTagName('canvas'),\n        elements = new Array(),\n        i = 0,\n        child,\n        classNames,\n        j = 0;\n    for (i = 0; i < children.length; i++) {\n        child = children[i];\n        classNames = child.className.split(' ');\n        for (var j = 0; j < classNames.length; j++) {\n            if (classNames[j] == className) {\n                elements.push(child);\n                break;\n            }\n        }\n    }\n    return elements;\n}\n\nfunction _addEdge(canvas) {\n\n    var img = new Image(),\n        maskimg = new Image();\n\n    var classNames = canvas.className.split(' ');\n    var context = canvas.getContext(\"2d\");\n    img.addEventListener(\"load\", loadimg);\n    maskimg.addEventListener(\"load\", loadmask);\n\n    function loadimg() {\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = \"source-over\";\n        context.drawImage(img, 0, 0, canvas.width, canvas.height);\n        maskimg.src = canvas.getAttribute(\"mask\");\n        img.removeEventListener(\"load\", loadimg);\n        img.src = null;\n        img = null;\n    }\n\n    function loadmask() {\n        context.globalCompositeOperation = \"destination-atop\";\n        context.drawImage(maskimg, 0, 0, canvas.width, canvas.height);\n        canvas.style.opacity = 1;\n        maskimg.removeEventListener(\"load\", loadmask);\n        maskimg.src = null;\n        maskimg = null;\n        context = null;\n        classNames = null;\n        canvas.className = canvas.className.replace(\"edges\", \"\");\n    }\n    img.src = canvas.getAttribute(\"src\");\n}\n\nfunction addEdges() {\n    var thecanvas = _getCanvas('edges'),\n        i;\n    for (i = 0; i < thecanvas.length; i++) {\n        _addEdge(thecanvas[i]);\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/util/edge.js\n ** module id = 153\n ** module chunks = 0\n **/","/*\n   * CommonJS module that exports EventSource polyfill version 0.9.6\n   * This module is intended for browser side use\n   * =====================================================================\n   * THIS IS A POLYFILL MODULE, SO IT HAS SIDE EFFECTS\n   * IT AUTOMATICALLY CHECKS IF window OBJECT DEFINES EventSource\n   * AND ADD THE EXPORTED ONE IN CASE IT IS UNDEFINED\n   * =====================================================================\n   * Supported by sc AmvTek srl\n   * :email: devel@amvtek.com\n */\n\n\nvar PolyfillEventSource = require('./eventsource.js').EventSource;\nmodule.exports = PolyfillEventSource;\n\n// Add EventSource to window if it is missing...\nif (window && !window.EventSource){\n    window.EventSource = PolyfillEventSource;\n    if (console){\n\tconsole.log(\"polyfill-eventsource added missing EventSource to window\");\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventsource-polyfill/dist/browserify-eventsource.js\n ** module id = 154\n ** module chunks = 0\n **/","/*\n   * EventSource polyfill version 0.9.6\n   * Supported by sc AmvTek srl\n   * :email: devel@amvtek.com\n */\n;(function (global) {\n\n    if (global.EventSource && !global._eventSourceImportPrefix){\n        return;\n    }\n\n    var evsImportName = (global._eventSourceImportPrefix||'')+\"EventSource\";\n\n    var EventSource = function (url, options) {\n\n        if (!url || typeof url != 'string') {\n            throw new SyntaxError('Not enough arguments');\n        }\n\n        this.URL = url;\n        this.setOptions(options);\n        var evs = this;\n        setTimeout(function(){evs.poll()}, 0);\n    };\n\n    EventSource.prototype = {\n\n        CONNECTING: 0,\n\n        OPEN: 1,\n\n        CLOSED: 2,\n\n        defaultOptions: {\n\n            loggingEnabled: false,\n\n            loggingPrefix: \"eventsource\",\n\n            interval: 500, // milliseconds\n\n            bufferSizeLimit: 256*1024, // bytes\n\n            silentTimeout: 300000, // milliseconds\n\n            getArgs:{\n                'evs_buffer_size_limit': 256*1024\n            },\n\n            xhrHeaders:{\n                'Accept': 'text/event-stream',\n                'Cache-Control': 'no-cache',\n                'X-Requested-With': 'XMLHttpRequest'\n            }\n        },\n\n        setOptions: function(options){\n\n            var defaults = this.defaultOptions;\n            var option;\n\n            // set all default options...\n            for (option in defaults){\n\n                if ( defaults.hasOwnProperty(option) ){\n                    this[option] = defaults[option];\n                }\n            }\n\n            // override with what is in options\n            for (option in options){\n\n                if (option in defaults && options.hasOwnProperty(option)){\n                    this[option] = options[option];\n                }\n            }\n\n            // if getArgs option is enabled\n            // ensure evs_buffer_size_limit corresponds to bufferSizeLimit\n            if (this.getArgs && this.bufferSizeLimit) {\n\n                this.getArgs['evs_buffer_size_limit'] = this.bufferSizeLimit;\n            }\n\n            // if console is not available, force loggingEnabled to false\n            if (typeof console === \"undefined\" || typeof console.log === \"undefined\") {\n\n                this.loggingEnabled = false;\n            }\n        },\n\n        log: function(message) {\n\n            if (this.loggingEnabled) {\n\n                console.log(\"[\" + this.loggingPrefix +\"]:\" + message)\n            }\n        },\n\n        poll: function() {\n\n            try {\n\n                if (this.readyState == this.CLOSED) {\n                    return;\n                }\n\n                this.cleanup();\n                this.readyState = this.CONNECTING;\n                this.cursor = 0;\n                this.cache = '';\n                this._xhr = new this.XHR(this);\n                this.resetNoActivityTimer();\n\n            }\n            catch (e) {\n\n                // in an attempt to silence the errors\n                this.log('There were errors inside the pool try-catch');\n                this.dispatchEvent('error', { type: 'error', data: e.message });\n            }\n        },\n\n        pollAgain: function (interval) {\n\n            // schedule poll to be called after interval milliseconds\n            var evs = this;\n            evs.readyState = evs.CONNECTING;\n            evs.dispatchEvent('error', {\n                type: 'error',\n                data: \"Reconnecting \"\n            });\n            this._pollTimer = setTimeout(function(){evs.poll()}, interval||0);\n        },\n\n\n        cleanup: function() {\n\n            this.log('evs cleaning up')\n\n            if (this._pollTimer){\n                clearInterval(this._pollTimer);\n                this._pollTimer = null;\n            }\n\n            if (this._noActivityTimer){\n                clearInterval(this._noActivityTimer);\n                this._noActivityTimer = null;\n            }\n\n            if (this._xhr){\n                this._xhr.abort();\n                this._xhr = null;\n            }\n        },\n\n        resetNoActivityTimer: function(){\n\n            if (this.silentTimeout){\n\n                if (this._noActivityTimer){\n                    clearInterval(this._noActivityTimer);\n                }\n                var evs = this;\n                this._noActivityTimer = setTimeout(\n                        function(){ evs.log('Timeout! silentTImeout:'+evs.silentTimeout); evs.pollAgain(); },\n                        this.silentTimeout\n                        );\n            }\n        },\n\n        close: function () {\n\n            this.readyState = this.CLOSED;\n            this.log('Closing connection. readyState: '+this.readyState);\n            this.cleanup();\n        },\n\n        ondata: function() {\n\n            var request = this._xhr;\n\n            if (request.isReady() && !request.hasError() ) {\n                // reset the timer, as we have activity\n                this.resetNoActivityTimer();\n\n                // move this EventSource to OPEN state...\n                if (this.readyState == this.CONNECTING) {\n                    this.readyState = this.OPEN;\n                    this.dispatchEvent('open', { type: 'open' });\n                }\n\n                var buffer = request.getBuffer();\n\n                if (buffer.length > this.bufferSizeLimit) {\n                    this.log('buffer.length > this.bufferSizeLimit');\n                    this.pollAgain();\n                }\n\n                if (this.cursor == 0 && buffer.length > 0){\n\n                    // skip byte order mark \\uFEFF character if it starts the stream\n                    if (buffer.substring(0,1) == '\\uFEFF'){\n                        this.cursor = 1;\n                    }\n                }\n\n                var lastMessageIndex = this.lastMessageIndex(buffer);\n                if (lastMessageIndex[0] >= this.cursor){\n\n                    var newcursor = lastMessageIndex[1];\n                    var toparse = buffer.substring(this.cursor, newcursor);\n                    this.parseStream(toparse);\n                    this.cursor = newcursor;\n                }\n\n                // if request is finished, reopen the connection\n                if (request.isDone()) {\n                    this.log('request.isDone(). reopening the connection');\n                    this.pollAgain(this.interval);\n                }\n            }\n            else if (this.readyState !== this.CLOSED) {\n\n                this.log('this.readyState !== this.CLOSED');\n                this.pollAgain(this.interval);\n\n                //MV: Unsure why an error was previously dispatched\n            }\n        },\n\n        parseStream: function(chunk) {\n\n            // normalize line separators (\\r\\n,\\r,\\n) to \\n\n            // remove white spaces that may precede \\n\n            chunk = this.cache + this.normalizeToLF(chunk);\n\n            var events = chunk.split('\\n\\n');\n\n            var i, j, eventType, datas, line, retry;\n\n            for (i=0; i < (events.length - 1); i++) {\n\n                eventType = 'message';\n                datas = [];\n                parts = events[i].split('\\n');\n\n                for (j=0; j < parts.length; j++) {\n\n                    line = this.trimWhiteSpace(parts[j]);\n\n                    if (line.indexOf('event') == 0) {\n\n                        eventType = line.replace(/event:?\\s*/, '');\n                    }\n                    else if (line.indexOf('retry') == 0) {\n\n                        retry = parseInt(line.replace(/retry:?\\s*/, ''));\n                        if(!isNaN(retry)) {\n                            this.interval = retry;\n                        }\n                    }\n                    else if (line.indexOf('data') == 0) {\n\n                        datas.push(line.replace(/data:?\\s*/, ''));\n                    }\n                    else if (line.indexOf('id:') == 0) {\n\n                        this.lastEventId = line.replace(/id:?\\s*/, '');\n                    }\n                    else if (line.indexOf('id') == 0) { // this resets the id\n\n                        this.lastEventId = null;\n                    }\n                }\n\n                if (datas.length) {\n                    // dispatch a new event\n                    var event = new MessageEvent(eventType, datas.join('\\n'), window.location.origin, this.lastEventId);\n                    this.dispatchEvent(eventType, event);\n                }\n            }\n\n            this.cache = events[events.length - 1];\n        },\n\n        dispatchEvent: function (type, event) {\n            var handlers = this['_' + type + 'Handlers'];\n\n            if (handlers) {\n\n                for (var i = 0; i < handlers.length; i++) {\n                    handlers[i].call(this, event);\n                }\n            }\n\n            if (this['on' + type]) {\n                this['on' + type].call(this, event);\n            }\n\n        },\n\n        addEventListener: function (type, handler) {\n            if (!this['_' + type + 'Handlers']) {\n                this['_' + type + 'Handlers'] = [];\n            }\n\n            this['_' + type + 'Handlers'].push(handler);\n        },\n\n        removeEventListener: function (type, handler) {\n            var handlers = this['_' + type + 'Handlers'];\n            if (!handlers) {\n                return;\n            }\n            for (var i = handlers.length - 1; i >= 0; --i) {\n                if (handlers[i] === handler) {\n                    handlers.splice(i, 1);\n                    break;\n                }\n            }\n        },\n\n        _pollTimer: null,\n\n        _noactivityTimer: null,\n\n        _xhr: null,\n\n        lastEventId: null,\n\n        cache: '',\n\n        cursor: 0,\n\n        onerror: null,\n\n        onmessage: null,\n\n        onopen: null,\n\n        readyState: 0,\n\n        // ===================================================================\n        // helpers functions\n        // those are attached to prototype to ease reuse and testing...\n\n        urlWithParams: function (baseURL, params) {\n\n            var encodedArgs = [];\n\n            if (params){\n\n                var key, urlarg;\n                var urlize = encodeURIComponent;\n\n                for (key in params){\n                    if (params.hasOwnProperty(key)) {\n                        urlarg = urlize(key)+'='+urlize(params[key]);\n                        encodedArgs.push(urlarg);\n                    }\n                }\n            }\n\n            if (encodedArgs.length > 0){\n\n                if (baseURL.indexOf('?') == -1)\n                    return baseURL + '?' + encodedArgs.join('&');\n                return baseURL + '&' + encodedArgs.join('&');\n            }\n            return baseURL;\n        },\n\n        lastMessageIndex: function(text) {\n\n            var ln2 =text.lastIndexOf('\\n\\n');\n            var lr2 = text.lastIndexOf('\\r\\r');\n            var lrln2 = text.lastIndexOf('\\r\\n\\r\\n');\n\n            if (lrln2 > Math.max(ln2, lr2)) {\n                return [lrln2, lrln2+4];\n            }\n            return [Math.max(ln2, lr2), Math.max(ln2, lr2) + 2]\n        },\n\n        trimWhiteSpace: function(str) {\n            // to remove whitespaces left and right of string\n\n            var reTrim = /^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g;\n            return str.replace(reTrim, '');\n        },\n\n        normalizeToLF: function(str) {\n\n            // replace \\r and \\r\\n with \\n\n            return str.replace(/\\r\\n|\\r/g, '\\n');\n        }\n\n    };\n\n    if (!isOldIE()){\n\n        EventSource.isPolyfill = \"XHR\";\n\n        // EventSource will send request using XMLHttpRequest\n        EventSource.prototype.XHR = function(evs) {\n\n            request = new XMLHttpRequest();\n            this._request = request;\n            evs._xhr = this;\n\n            // set handlers\n            request.onreadystatechange = function(){\n                if (request.readyState > 1 && evs.readyState != evs.CLOSED) {\n                    if (request.status == 200 || (request.status>=300 && request.status<400)){\n                        evs.ondata();\n                    }\n                    else {\n                        request._failed = true;\n                        evs.readyState = evs.CLOSED;\n                        evs.dispatchEvent('error', {\n                            type: 'error',\n                            data: \"The server responded with \"+request.status\n                        });\n                        evs.close();\n                    }\n                }\n            };\n\n            request.onprogress = function () {\n            };\n\n            request.open('GET', evs.urlWithParams(evs.URL, evs.getArgs), true);\n\n            var headers = evs.xhrHeaders; // maybe null\n            for (var header in headers) {\n                if (headers.hasOwnProperty(header)){\n                    request.setRequestHeader(header, headers[header]);\n                }\n            }\n            if (evs.lastEventId) {\n                request.setRequestHeader('Last-Event-Id', evs.lastEventId);\n            }\n\n            request.send();\n        };\n\n        EventSource.prototype.XHR.prototype = {\n\n            useXDomainRequest: false,\n\n            _request: null,\n\n            _failed: false, // true if we have had errors...\n\n            isReady: function() {\n\n\n                return this._request.readyState >= 2;\n            },\n\n            isDone: function() {\n\n                return (this._request.readyState == 4);\n            },\n\n            hasError: function() {\n\n                return (this._failed || (this._request.status >= 400));\n            },\n\n            getBuffer: function() {\n\n                var rv = '';\n                try {\n                    rv = this._request.responseText || '';\n                }\n                catch (e){}\n                return rv;\n            },\n\n            abort: function() {\n\n                if ( this._request ) {\n                    this._request.abort();\n                }\n            }\n        };\n    }\n    else {\n\n\tEventSource.isPolyfill = \"IE_8-9\";\n\n        // patch EventSource defaultOptions\n        var defaults = EventSource.prototype.defaultOptions;\n        defaults.xhrHeaders = null; // no headers will be sent\n        defaults.getArgs['evs_preamble'] = 2048 + 8;\n\n        // EventSource will send request using Internet Explorer XDomainRequest\n        EventSource.prototype.XHR = function(evs) {\n\n            request = new XDomainRequest();\n            this._request = request;\n\n            // set handlers\n            request.onprogress = function(){\n                request._ready = true;\n                evs.ondata();\n            };\n\n            request.onload = function(){\n                this._loaded = true;\n                evs.ondata();\n            };\n\n            request.onerror = function(){\n                this._failed = true;\n                evs.readyState = evs.CLOSED;\n                evs.dispatchEvent('error', {\n                    type: 'error',\n                    data: \"XDomainRequest error\"\n                });\n            };\n\n            request.ontimeout = function(){\n                this._failed = true;\n                evs.readyState = evs.CLOSED;\n                evs.dispatchEvent('error', {\n                    type: 'error',\n                    data: \"XDomainRequest timed out\"\n                });\n            };\n\n            // XDomainRequest does not allow setting custom headers\n            // If EventSource has enabled the use of GET arguments\n            // we add parameters to URL so that server can adapt the stream...\n            var reqGetArgs = {};\n            if (evs.getArgs) {\n\n                // copy evs.getArgs in reqGetArgs\n                var defaultArgs = evs.getArgs;\n                    for (var key in defaultArgs) {\n                        if (defaultArgs.hasOwnProperty(key)){\n                            reqGetArgs[key] = defaultArgs[key];\n                        }\n                    }\n                if (evs.lastEventId){\n                    reqGetArgs['evs_last_event_id'] = evs.lastEventId;\n                }\n            }\n            // send the request\n\n            request.open('GET', evs.urlWithParams(evs.URL,reqGetArgs));\n            request.send();\n        };\n\n        EventSource.prototype.XHR.prototype = {\n\n            useXDomainRequest: true,\n\n            _request: null,\n\n            _ready: false, // true when progress events are dispatched\n\n            _loaded: false, // true when request has been loaded\n\n            _failed: false, // true if when request is in error\n\n            isReady: function() {\n\n                return this._request._ready;\n            },\n\n            isDone: function() {\n\n                return this._request._loaded;\n            },\n\n            hasError: function() {\n\n                return this._request._failed;\n            },\n\n            getBuffer: function() {\n\n                var rv = '';\n                try {\n                    rv = this._request.responseText || '';\n                }\n                catch (e){}\n                return rv;\n            },\n\n            abort: function() {\n\n                if ( this._request){\n                    this._request.abort();\n                }\n            }\n        };\n    }\n\n    function MessageEvent(type, data, origin, lastEventId) {\n\n        this.bubbles = false;\n        this.cancelBubble = false;\n        this.cancelable = false;\n        this.data = data || null;\n        this.origin = origin || '';\n        this.lastEventId = lastEventId || '';\n        this.type = type || 'message';\n    }\n\n    function isOldIE () {\n\n        //return true if we are in IE8 or IE9\n        return (window.XDomainRequest && (window.XMLHttpRequest && new XMLHttpRequest().responseType === undefined)) ? true : false;\n    }\n\n    global[evsImportName] = EventSource;\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventsource-polyfill/dist/eventsource.js\n ** module id = 155\n ** module chunks = 0\n **/","module.exports = {\n  XmlEntities: require('./lib/xml-entities.js'),\n  Html4Entities: require('./lib/html4-entities.js'),\n  Html5Entities: require('./lib/html5-entities.js'),\n  AllHtmlEntities: require('./lib/html5-entities.js')\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-entities/index.js\n ** module id = 156\n ** module chunks = 0\n **/","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'Oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'oelig', 'oelig', 'scaron', 'scaron', 'yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-entities/lib/html4-entities.js\n ** module id = 157\n ** module chunks = 0\n **/","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (str.length === 0) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    var strLength = str.length;\n    if (strLength === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    var strLenght = str.length;\n    if (strLenght === 0) {\n        return '';\n    }\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/html-entities/lib/xml-entities.js\n ** module id = 158\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 159\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 160\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 161\n ** module chunks = 0\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/strip-ansi/index.js\n ** module id = 162\n ** module chunks = 0\n **/","/*eslint-env browser*/\n\nvar clientOverlay = document.createElement('div');\nvar styles = {\n  background: 'rgba(0,0,0,0.85)',\n  color: '#E8E8E8',\n  lineHeight: '1.2',\n  whiteSpace: 'pre',\n  fontFamily: 'Menlo, Consolas, monospace',\n  fontSize: '13px',\n  position: 'fixed',\n  zIndex: 9999,\n  padding: '10px',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  overflow: 'auto'\n};\nfor (var key in styles) {\n  clientOverlay.style[key] = styles[key];\n}\n\nvar ansiHTML = require('ansi-html');\nvar colors = {\n  reset: ['transparent', 'transparent'],\n  black: '181818',\n  red: 'E36049',\n  green: 'B3CB74',\n  yellow: 'FFD080',\n  blue: '7CAFC2',\n  magenta: '7FACCA',\n  cyan: 'C3C2EF',\n  lightgrey: 'EBE7E3',\n  darkgrey: '6D7891'\n};\nansiHTML.setColors(colors);\n\nvar Entities = require('html-entities').AllHtmlEntities;\nvar entities = new Entities();\n\nexports.showProblems =\nfunction showProblems(type, lines) {\n  clientOverlay.innerHTML = '';\n  lines.forEach(function(msg) {\n    msg = ansiHTML(entities.encode(msg));\n    var div = document.createElement('div');\n    div.style.marginBottom = '26px';\n    div.innerHTML = problemType(type) + ' in ' + msg;\n    clientOverlay.appendChild(div);\n  });\n  if (document.body) {\n    document.body.appendChild(clientOverlay);\n  }\n};\n\nexports.clear =\nfunction clear() {\n  if (document.body && clientOverlay.parentNode) {\n    document.body.removeChild(clientOverlay);\n  }\n};\n\nvar problemColors = {\n  errors: colors.red,\n  warnings: colors.yellow\n};\n\nfunction problemType (type) {\n  var color = problemColors[type] || colors.red;\n  return (\n    '<span style=\"background-color:#' + color + '; color:#fff; padding:2px 4px; border-radius: 2px\">' +\n      type.slice(0, -1).toUpperCase() +\n    '</span>'\n  );\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-hot-middleware/client-overlay.js\n ** module id = 163\n ** module chunks = 0\n **/","/*eslint-env browser*/\n/*global __resourceQuery __webpack_public_path__*/\n\nvar options = {\n  path: \"/__webpack_hmr\",\n  timeout: 20 * 1000,\n  overlay: true,\n  reload: false,\n  log: true,\n  warn: true\n};\nif (__resourceQuery) {\n  var querystring = require('querystring');\n  var overrides = querystring.parse(__resourceQuery.slice(1));\n  if (overrides.path) options.path = overrides.path;\n  if (overrides.timeout) options.timeout = overrides.timeout;\n  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';\n  if (overrides.reload) options.reload = overrides.reload !== 'false';\n  if (overrides.noInfo && overrides.noInfo !== 'false') {\n    options.log = false;\n  }\n  if (overrides.quiet && overrides.quiet !== 'false') {\n    options.log = false;\n    options.warn = false;\n  }\n  if (overrides.dynamicPublicPath) {\n    options.path = __webpack_public_path__ + options.path;\n  }\n}\n\nif (typeof window === 'undefined') {\n  // do nothing\n} else if (typeof window.EventSource === 'undefined') {\n  console.warn(\n    \"webpack-hot-middleware's client requires EventSource to work. \" +\n    \"You should include a polyfill if you want to support this browser: \" +\n    \"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools\"\n  );\n} else {\n  connect(window.EventSource);\n}\n\nfunction connect(EventSource) {\n  var source = new EventSource(options.path);\n  var lastActivity = new Date();\n\n  source.onopen = handleOnline;\n  source.onmessage = handleMessage;\n  source.onerror = handleDisconnect;\n\n  var timer = setInterval(function() {\n    if ((new Date() - lastActivity) > options.timeout) {\n      handleDisconnect();\n    }\n  }, options.timeout / 2);\n\n  function handleOnline() {\n    if (options.log) console.log(\"[HMR] connected\");\n    lastActivity = new Date();\n  }\n\n  function handleMessage(event) {\n    lastActivity = new Date();\n    if (event.data == \"\\uD83D\\uDC93\") {\n      return;\n    }\n    try {\n      processMessage(JSON.parse(event.data));\n    } catch (ex) {\n      if (options.warn) {\n        console.warn(\"Invalid HMR message: \" + event.data + \"\\n\" + ex);\n      }\n    }\n  }\n\n  function handleDisconnect() {\n    clearInterval(timer);\n    source.close();\n    setTimeout(function() { connect(EventSource); }, options.timeout);\n  }\n\n}\n\nvar reporter;\n// the reporter needs to be a singleton on the page\n// in case the client is being used by mutliple bundles\n// we only want to report once.\n// all the errors will go to all clients\nvar singletonKey = '__webpack_hot_middleware_reporter__';\nif (typeof window !== 'undefined' && !window[singletonKey]) {\n  reporter = window[singletonKey] = createReporter();\n}\n\nfunction createReporter() {\n  var strip = require('strip-ansi');\n\n  var overlay;\n  if (typeof document !== 'undefined' && options.overlay) {\n    overlay = require('./client-overlay');\n  }\n\n  return {\n    problems: function(type, obj) {\n      if (options.warn) {\n        console.warn(\"[HMR] bundle has \" + type + \":\");\n        obj[type].forEach(function(msg) {\n          console.warn(\"[HMR] \" + strip(msg));\n        });\n      }\n      if (overlay && type !== 'warnings') overlay.showProblems(type, obj[type]);\n    },\n    success: function() {\n      if (overlay) overlay.clear();\n    },\n    useCustomOverlay: function(customOverlay) {\n      overlay = customOverlay;\n    }\n  };\n}\n\nvar processUpdate = require('./process-update');\n\nvar customHandler;\nvar subscribeAllHandler;\nfunction processMessage(obj) {\n  if (obj.action == \"building\") {\n    if (options.log) console.log(\"[HMR] bundle rebuilding\");\n  } else if (obj.action == \"built\") {\n    if (options.log) {\n      console.log(\n        \"[HMR] bundle \" + (obj.name ? obj.name + \" \" : \"\") +\n        \"rebuilt in \" + obj.time + \"ms\"\n      );\n    }\n    if (obj.errors.length > 0) {\n      if (reporter) reporter.problems('errors', obj);\n    } else {\n      if (reporter) {\n        if (obj.warnings.length > 0) reporter.problems('warnings', obj);\n        reporter.success();\n      }\n\n      processUpdate(obj.hash, obj.modules, options);\n    }\n  } else if (customHandler) {\n    customHandler(obj);\n  }\n\n  if (subscribeAllHandler) {\n    subscribeAllHandler(obj);\n  }\n}\n\nif (module) {\n  module.exports = {\n    subscribeAll: function subscribeAll(handler) {\n      subscribeAllHandler = handler;\n    },\n    subscribe: function subscribe(handler) {\n      customHandler = handler;\n    },\n    useCustomOverlay: function useCustomOverlay(customOverlay) {\n      if (reporter) reporter.useCustomOverlay(customOverlay);\n    }\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-hot-middleware/client.js?noInfo=true&reload=true\n ** module id = 164\n ** module chunks = 0\n **/","/**\n * Based heavily on https://github.com/webpack/webpack/blob/\n *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js\n * Original copyright Tobias Koppers @sokra (MIT license)\n */\n\n/* global window __webpack_hash__ */\n\nif (!module.hot) {\n  throw new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n\nvar hmrDocsUrl = \"http://webpack.github.io/docs/hot-module-replacement-with-webpack.html\"; // eslint-disable-line max-len\n\nvar lastHash;\nvar failureStatuses = { abort: 1, fail: 1 };\nvar applyOptions = { ignoreUnaccepted: true };\n\nfunction upToDate(hash) {\n  if (hash) lastHash = hash;\n  return lastHash == __webpack_hash__;\n}\n\nmodule.exports = function(hash, moduleMap, options) {\n  var reload = options.reload;\n  if (!upToDate(hash) && module.hot.status() == \"idle\") {\n    if (options.log) console.log(\"[HMR] Checking for updates on the server...\");\n    check();\n  }\n\n  function check() {\n    var cb = function(err, updatedModules) {\n      if (err) return handleError(err);\n\n      if(!updatedModules) {\n        if (options.warn) {\n          console.warn(\"[HMR] Cannot find update (Full reload needed)\");\n          console.warn(\"[HMR] (Probably because of restarting the server)\");\n        }\n        performReload();\n        return null;\n      }\n\n      var applyCallback = function(applyErr, renewedModules) {\n        if (applyErr) return handleError(applyErr);\n\n        if (!upToDate()) check();\n\n        logUpdates(updatedModules, renewedModules);\n      };\n\n      var applyResult = module.hot.apply(applyOptions, applyCallback);\n      // webpack 2 promise\n      if (applyResult && applyResult.then) {\n        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`\n        applyResult.then(function(outdatedModules) {\n          applyCallback(null, outdatedModules);\n        });\n        applyResult.catch(applyCallback);\n      }\n\n    };\n\n    var result = module.hot.check(false, cb);\n    // webpack 2 promise\n    if (result && result.then) {\n        result.then(function(updatedModules) {\n            cb(null, updatedModules);\n        });\n        result.catch(cb);\n    }\n  }\n\n  function logUpdates(updatedModules, renewedModules) {\n    var unacceptedModules = updatedModules.filter(function(moduleId) {\n      return renewedModules && renewedModules.indexOf(moduleId) < 0;\n    });\n\n    if(unacceptedModules.length > 0) {\n      if (options.warn) {\n        console.warn(\n          \"[HMR] The following modules couldn't be hot updated: \" +\n          \"(Full reload needed)\\n\" +\n          \"This is usually because the modules which have changed \" +\n          \"(and their parents) do not know how to hot reload themselves. \" +\n          \"See \" + hmrDocsUrl + \" for more details.\"\n        );\n        unacceptedModules.forEach(function(moduleId) {\n          console.warn(\"[HMR]  - \" + moduleMap[moduleId]);\n        });\n      }\n      performReload();\n      return;\n    }\n\n    if (options.log) {\n      if(!renewedModules || renewedModules.length === 0) {\n        console.log(\"[HMR] Nothing hot updated.\");\n      } else {\n        console.log(\"[HMR] Updated modules:\");\n        renewedModules.forEach(function(moduleId) {\n          console.log(\"[HMR]  - \" + moduleMap[moduleId]);\n        });\n      }\n\n      if (upToDate()) {\n        console.log(\"[HMR] App is up to date.\");\n      }\n    }\n  }\n\n  function handleError(err) {\n    if (module.hot.status() in failureStatuses) {\n      if (options.warn) {\n        console.warn(\"[HMR] Cannot check for update (Full reload needed)\");\n        console.warn(\"[HMR] \" + err.stack || err.message);\n      }\n      performReload();\n      return;\n    }\n    if (options.warn) {\n      console.warn(\"[HMR] Update check failed: \" + err.stack || err.message);\n    }\n  }\n\n  function performReload() {\n    if (reload) {\n      if (options.warn) console.warn(\"[HMR] Reloading page\");\n      window.location.reload();\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)-hot-middleware/process-update.js\n ** module id = 165\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 166\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _svgicon = require('./svgicon');\n\nvar _iconconfig = require('./iconconfig');\n\nvar _index = require('../../config/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isIOS = Xut.plat.isIOS;\n\n/**\r\n * 获取翻页按钮位置\r\n * @return {[type]} [description]\r\n */\nvar arrowStyle = function arrowStyle() {\n    var height = _index.config.iconHeight;\n    var settings = _index.config.settings;\n    var styleText = 'height:' + height + 'px;width:' + height + 'px';\n    switch (settings.NavbarPos) {\n        case 0:\n            styleText += ';top:0';\n            break; //顶部\n        case 1:\n            styleText += ';margin-top:' + -height / 2 + 'px';\n            break; //中间\n        case 2:\n            styleText += ';top:auto;bottom:0';\n            break; //底部\n        default:\n            break;\n    }\n\n    return styleText;\n};\n\nvar Bar = function () {\n    function Bar() {\n        _classCallCheck(this, Bar);\n\n        /**\r\n         * 系统状态栏高度\r\n         * @type {[type]}\r\n         */\n        this.barHeight = isIOS ? 20 : 0;\n\n        /**\r\n         * 默认创建左翻页按钮\r\n         * @type {Boolean}\r\n         */\n        this.enableLeft = true;\n\n        /**\r\n         * 默认创建右翻页按钮 \r\n         * @type {Boolean}\r\n         */\n        this.enableRight = true;\n    }\n\n    _createClass(Bar, [{\n        key: 'initConfig',\n        value: function initConfig() {\n            var propHeight;\n            //获取高度缩放比\n            //自动选择缩放比例\n            this.propHeight = propHeight = function () {\n                var layout = _index.config.layoutMode,\n                    prop = _index.config.proportion;\n                return layout == \"horizontal\" ? prop.width : prop.height;\n            }();\n\n            //获取图标高度\n            //工具栏图标高度\n            this.iconHeight = function () {\n                var height = _index.config.iconHeight;\n                return isIOS ? height : Math.round(propHeight * height);\n            }();\n\n            this.appName = _index.config.shortName; //应用标题\n            this.settings = _index.config.settings; //应用默认配置\n        }\n\n        /**\r\n         * 创建翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createArrows',\n        value: function createArrows() {\n            //是否使用自定义的翻页按钮: true /false\n            //图标名称是客户端指定的：pageforward_'+appId+'.svg\n            var isCustom = this.settings.customButton;\n\n            if (this.enableLeft) {\n                isCustom ? this.createLeftIcon() : this.createLeftArrow();\n            }\n\n            if (this.enableRight) {\n                isCustom ? this.createRightIcon() : this.createRightArrow();\n            }\n        }\n\n        /**\r\n         * 左箭头翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createLeftArrow',\n        value: function createLeftArrow() {\n            var style = arrowStyle(),\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            $dom = $('<div class=\"si-icon xut-flip-control xut-flip-control-left ' + state + '\" data-icon-name=\"prevArrow\" style=\"' + style + '\"></div>');\n\n            this.createSVGIcon($dom[0], function () {\n                Xut.View.GotoPrevSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.prev = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * 右箭头翻页按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createRightArrow',\n        value: function createRightArrow() {\n            var style = arrowStyle(),\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            $dom = $('<div class=\"si-icon xut-flip-control xut-flip-control-right ' + state + '\" data-icon-name=\"nextArrow\" style=\"' + style + '\"></div>');\n\n            this.createSVGIcon($dom[0], function () {\n                Xut.View.GotoNextSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.next = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * 自定义左翻页按钮\r\n         * [createLeftIcon description]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createLeftIcon',\n        value: function createLeftIcon() {\n            var style = arrowStyle(),\n                appId = this.config.appId,\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            style += ';background-image:url(images/icons/pageforward_' + appId + '.svg);background-size:cover';\n            $dom = $('<div name=\"prevArrow\" class=\"xut-flip-control xut-flip-control-left ' + state + '\" style=\"' + style + '\"></div>');\n\n            $dom.on(\"touchend mouseup\", function () {\n                Xut.View.GotoPrevSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.prev = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        //自定义右翻页按钮\n\n    }, {\n        key: 'createRightIcon',\n        value: function createRightIcon() {\n            var style = arrowStyle(),\n                appId = this.config.appId,\n                state = this.barStatus ? '' : 'hide',\n                $dom;\n            style += ';background-image:url(images/icons/pageback_' + appId + '.svg);background-size:cover';\n            $dom = $('<div name=\"nextArrow\" class=\"xut-flip-control xut-flip-control-right ' + state + '\" style=\"' + style + '\"></div>');\n\n            $dom.on(\"touchend mouseup\", function () {\n                Xut.View.GotoNextSlide();\n            });\n\n            this.container.append($dom);\n            this.arrows.next = {\n                el: $dom,\n                able: true\n            };\n        }\n\n        /**\r\n         * [ description]\r\n         * @param  {[type]} dir [next,prev]\r\n         * @param  {[type]} status  [true/false]\r\n         * @return {[type]}       [description]\r\n         */\n\n    }, {\n        key: 'toggleArrow',\n        value: function toggleArrow(dir, status) {\n            var arrow = this.arrows[dir];\n            //如果没有创建翻页按钮,则不处理\n            if (!arrow) return;\n            arrow.able = status;\n            //如果人为隐藏了工具栏,则不显示翻页按钮\n            if (this.hasTopBar && !this.barStatus && status) {\n                return;\n            }\n            arrow.el[status ? 'show' : 'hide']();\n        }\n\n        //隐藏下一页按钮\n\n    }, {\n        key: 'hideNext',\n        value: function hideNext() {\n            this.toggleArrow('next', false);\n        }\n\n        //显示下一页按钮\n\n    }, {\n        key: 'showNext',\n        value: function showNext() {\n            this.toggleArrow('next', true);\n        }\n\n        //隐藏上一页按钮\n\n    }, {\n        key: 'hidePrev',\n        value: function hidePrev() {\n            this.toggleArrow('prev', false);\n        }\n\n        //显示上一页按钮\n\n    }, {\n        key: 'showPrev',\n        value: function showPrev() {\n            this.toggleArrow('prev', true);\n        }\n\n        /**\r\n         * [ 显示翻页按钮]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'showPageBar',\n        value: function showPageBar() {\n            var arrows = this.arrows;\n\n            for (var dir in arrows) {\n                var arrow = arrows[dir];\n                arrow.able && arrow.el.show();\n            }\n        }\n\n        /**\r\n         * [ 隐藏翻页按钮]\r\n         * @param  {[type]} unlock [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'hidePageBar',\n        value: function hidePageBar() {\n            var arrows = this.arrows;\n            for (var dir in arrows) {\n                arrows[dir].el.hide();\n            }\n        }\n\n        /**\r\n         * [description]\r\n         * @param  {[type]} state   [description]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'toggle',\n        value: function toggle(state, pointer) {\n            if (this.Lock) return;\n            this.Lock = true;\n\n            switch (state) {\n                case 'show':\n                    this.showToolbar(pointer);\n                    break;\n                case 'hide':\n                    this.hideToolbar(pointer);\n                    break;\n                default:\n                    this.barStatus ? this.hideToolbar(pointer) : this.showToolbar(pointer);\n                    break;\n            }\n        }\n\n        /**\r\n         * [ 显示工具栏]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'showToolbar',\n        value: function showToolbar(pointer) {\n            switch (pointer) {\n                case 'controlBar':\n                    this.showTopBar();\n                    break;\n                case 'button':\n                    this.showPageBar();\n                    this.Lock = false;\n                    break;\n                default:\n                    this.showTopBar();\n                    this.showPageBar();\n            }\n        }\n\n        /**\r\n         * [ 隐藏工具栏]\r\n         * @param  {[type]} pointer [description]\r\n         * @return {[type]}         [description]\r\n         */\n\n    }, {\n        key: 'hideToolbar',\n        value: function hideToolbar(pointer) {\n            switch (pointer) {\n                case 'controlBar':\n                    this.hideTopBar();\n                    break;\n                case 'button':\n                    this.hidePageBar();\n                    this.Lock = false;\n                    break;\n                default:\n                    this.hideTopBar();\n                    this.hidePageBar();\n            }\n        }\n\n        /**\r\n         * 显示IOS系统工具栏\r\n         *  iOS状态栏0=show,1=hide\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showSystemBar',\n        value: function showSystemBar() {\n            isIOS && Xut.Plugin.statusbarPlugin.setStatus(null, null, 0);\n        }\n\n        /**\r\n         * 隐藏IOS系统工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideSystemBar',\n        value: function hideSystemBar() {\n            isIOS && Xut.Plugin.statusbarPlugin.setStatus(null, null, 1);\n        }\n\n        /**\r\n         * 创建SVG按钮\r\n         * @param  {[type]}   el       [description]\r\n         * @param  {Function} callback [description]\r\n         * @return {[type]}            [description]\r\n         */\n\n    }, {\n        key: 'createSVGIcon',\n        value: function createSVGIcon(el, callback) {\n            var options = {\n                speed: 6000,\n                size: {\n                    w: this.iconHeight,\n                    h: this.iconHeight\n                },\n                onToggle: callback\n            };\n            return new _svgicon.svgIcon(el, _iconconfig.iconConfig, options);\n        }\n\n        /**\r\n         * 重置翻页按钮,状态以工具栏为标准\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.barStatus ? this.showPageBar() : this.hidePageBar();\n        }\n    }]);\n\n    return Bar;\n}();\n\nexports.default = Bar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/base/bar.js\n ** module id = 169\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Mark = require('./Mark');\n\nvar _index = require('../../util/index');\n\nvar _tap = require('../../tap');\n\nvar _bar = require('../base/bar');\n\nvar _bar2 = _interopRequireDefault(_bar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\r\n * 阅读模式工具栏\r\n * @param options object\r\n * @demo {container:页面容器,controlBar:工具栏容器,...}\r\n * @desc 继承自Toolbar.js\r\n */\nvar BookBar = function (_Bar) {\n    _inherits(BookBar, _Bar);\n\n    function BookBar() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var pageMode = _ref.pageMode;\n        var container = _ref.container;\n        var controlBar = _ref.controlBar;\n\n        _classCallCheck(this, BookBar);\n\n        //左右箭头\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BookBar).call(this));\n\n        _this.arrows = {};\n\n        //工具栏父容器\n        _this.container = container;\n\n        //工具栏容器\n        _this.controlBar = controlBar;\n\n        _this.pageMode = pageMode;\n\n        //是否有顶部工具栏\n        _this.hasTopBar = true;\n        _this.Lock = false;\n        _this.delay = 50;\n\n        //图书工具栏高度\n        _this.topBarHeight = _this.iconHeight * 1.25;\n\n        //配置属性\n        _this.initConfig();\n\n        _this.initTool();\n        return _this;\n    }\n\n    /**\r\n     * 初始化\r\n     */\n\n\n    _createClass(BookBar, [{\n        key: 'initTool',\n        value: function initTool() {\n            //工具栏的显示状态\n            var display = this.controlBar.css('display');\n            this.barStatus = display == 'none' ? false : true;\n            this.setToolbarStyle();\n            this.createBackIcon();\n            this.createDirIcon();\n            this.createMarkIcon();\n            // this.createStarIcon();\n\n            //翻页按钮\n            if (this.pageMode == 2) {\n                this.createArrows();\n            }\n\n            //监听事件\n            (0, _tap.bindTap)(this.container[0], {\n                end: this\n            });\n        }\n\n        /**\r\n         * 工具条的样式\r\n         */\n\n    }, {\n        key: 'setToolbarStyle',\n        value: function setToolbarStyle() {\n            var height = this.topBarHeight,\n                TOP = this.barHeight; //系统工具栏占用的高度\n\n            //在顶部\n            this.controlBar.css({\n                top: 0,\n                height: height + 'px',\n                paddingTop: TOP + 'px',\n                backgroundColor: 'rgba(0, 0, 0, 0.2)', //transparent\n                fontSize: '0.625em',\n                color: 'white'\n            });\n        }\n\n        /**\r\n         * 更新页码\r\n         */\n\n    }, {\n        key: 'updatePointer',\n        value: function updatePointer() {}\n        //预留\n\n\n        /**\r\n         * 创建目录图标\r\n         */\n\n    }, {\n        key: 'createDirIcon',\n        value: function createDirIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '目录';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-dir';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 创建书签图标\r\n         * @param  {[type]} bar [description]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'createMarkIcon',\n        value: function createMarkIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '书签';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-mark';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 创建评分图标\r\n         */\n\n    }, {\n        key: 'createStarIcon',\n        value: function createStarIcon(bar) {\n            var icon = document.createElement('div');\n            icon.innerHTML = '评分';\n            icon.style.width = this.iconHeight + 'px';\n            icon.style.lineHeight = 1.5 * this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-star';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 后退按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createBackIcon',\n        value: function createBackIcon() {\n            var icon = document.createElement('div');\n            icon.style.width = this.topBarHeight + 'px';\n            icon.className = 'xut-book-bar-back';\n            this.controlBar.append(icon);\n        }\n\n        /**\r\n         * 显示顶部工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'showTopBar',\n        value: function showTopBar() {\n            var that = this;\n\n            if (this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n\n            this.controlBar.css({\n                'display': 'block',\n                'opacity': 0\n            });\n\n            setTimeout(function () {\n                that.controlBar.animate({\n                    'opacity': 1\n                }, that.delay, 'linear', function () {\n                    that.showSystemBar();\n                    that.barStatus = true;\n                    that.Lock = false;\n                });\n            }, 50);\n        }\n\n        /**\r\n         * 隐藏顶部工具栏\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'hideTopBar',\n        value: function hideTopBar() {\n            var that = this;\n\n            if (!this.barStatus) {\n                this.Lock = false;\n                return;\n            }\n\n            this.controlBar.animate({\n                'opacity': 0\n            }, that.delay, 'linear', function () {\n                that.controlBar.hide();\n                that.hideSystemBar();\n                that.barStatus = false;\n                that.Lock = false;\n            });\n        }\n\n        /**\r\n         * 创建目录菜单\r\n         */\n\n    }, {\n        key: 'createDirMenu',\n        value: function createDirMenu() {\n            var self = this;\n            var wrap = document.createElement('div');\n            var mask = document.createElement('div');\n            //添加遮层\n            mask.className = 'xut-book-menu-mask';\n            //获取内容\n            this.getDirContent();\n            wrap.className = 'xut-book-menu';\n            wrap.innerHTML = '<ul>' + this.contentText + '</ul>';\n            this.container.append(wrap);\n            //是否滚动\n            this.isScrolled = false;\n\n            //添加滚动条\n            //url : http://iscrolljs.com/\n            this.iscroll = new iScroll(wrap, {\n                scrollbars: true,\n                fadeScrollbars: true,\n                scrollX: false\n            });\n\n            this.menu = wrap;\n\n            this.setColor();\n\n            this.iscroll.on('scrollStart', function (e) {\n                self.isScrolled = true;\n            });\n\n            this.iscroll.on('scrollEnd', function (e) {\n                self.isScrolled = false;\n            });\n\n            wrap.appendChild(mask);\n        }\n\n        /**\r\n         *  显示目录菜单\r\n         */\n\n    }, {\n        key: 'showDirMenu',\n        value: function showDirMenu() {\n            //获取当前页面\n            var page = Xut.Presentation.GetPageElement();\n\n            if (this.menu) {\n                this.menu.style.display = 'block';\n            } else {\n                this.createDirMenu();\n            }\n\n            //添加模糊效果\n            page.addClass('filter');\n            this.page = page;\n\n            //隐藏顶部工具栏\n            this.controlBar.hide();\n            var iscroll = this.iscroll;\n            //自动定位到上一位置\n            if (iscroll.y > iscroll.wrapperHeight) {\n                iscroll.scrollToElement(this.selectedChild);\n            }\n        }\n\n        /**\r\n         *  隐藏目录菜单\r\n         */\n\n    }, {\n        key: 'hideDirMenu',\n        value: function hideDirMenu() {\n            this.menu.style.display = 'none';\n            //恢复顶部工具栏\n            this.controlBar.show();\n            //移除模糊效果\n            this.page.removeClass('filter');\n        }\n\n        /**\r\n         *  创建目录内容\r\n         */\n\n    }, {\n        key: 'getDirContent',\n        value: function getDirContent() {\n\n            var Api = Xut.Presentation;\n            var data = Api.GetAppSectionData();\n            var sns = data[0];\n            var seaonId = sns._id;\n            var cids = Xut.data.Chapter;\n\n            ////////////////////////////\n            //针对book模式，合并了Season的参数 //\n            //1 SeasonTitle\n            //2 ChapterList列表的范围区间\n            ////////////////////////////\n            data = (0, _index.parseJSON)(sns.parameter);\n\n            if (!data) {\n                console.log('book模式parameter数据出错');\n                return;\n            }\n\n            //二级目录\n            function secondaryDirectory(startCid, endCid) {\n                var cid,\n                    str = '';\n                for (startCid; startCid <= endCid; startCid++) {\n                    cid = cids.item(startCid - 1);\n                    if (cid && cid.chapterTitle) {\n                        str += '<section><a class=\"xut-book-menu-item\" data-mark=' + seaonId + '-' + startCid + ' href=\"javascript:0\">' + cid.chapterTitle + '</a></section>';\n                    }\n                }\n                return str;\n            }\n\n            var i = 0;\n            var len = data.length;\n            var li = '<li class=\"title\"><center class=\"select\">目录</center></li>';\n            var seasonInfo, mark, seasonTitle, seaonId, startCid, endCid;\n\n            for (i; i < len; i++) {\n                seasonInfo = data[i];\n                startCid = seasonInfo.ChapterList[0];\n                endCid = seasonInfo.ChapterList[1];\n                mark = seaonId + '-' + startCid;\n                if (seasonInfo.SeasonTitle.length <= 0) continue;\n                seasonTitle = seasonInfo.SeasonTitle || '第' + (i + 1) + '章';\n                //第一级目录\n                li += '<li>' + '<a class=\"xut-book-menu-item\" data-mark=\"' + mark + '\" href=\"javascript:0\">' + seasonTitle + '</a>' +\n                //第二级目录\n                secondaryDirectory(startCid, endCid) + '</li>';\n            }\n\n            this.contentText = li;\n        }\n\n        /**\r\n         * 突出显示点击颜色\r\n         */\n\n    }, {\n        key: 'setColor',\n        value: function setColor(element) {\n            if (this.selectedChild) {\n                this.selectedChild.className = 'xut-book-menu-item';\n            }\n\n            element = element || this.menu.querySelectorAll('li')[1].children[0];\n            element.className = 'select';\n            this.selectedChild = element;\n        }\n\n        /**\r\n         * 跳转到指定书页\r\n         */\n\n    }, {\n        key: 'turnToPage',\n        value: function turnToPage(target) {\n            //忽略滚动点击\n            if (this.isScrolled) return;\n            this.setColor(target);\n            this.hideDirMenu();\n            var data = target.dataset.mark || '';\n            if (data) {\n                data = data.split('-');\n                Xut.View.LoadScenario({\n                    'scenarioId': data[0],\n                    'chapterId': data[1]\n                });\n            }\n        }\n\n        /**\r\n         * 显示书签\r\n         */\n\n    }, {\n        key: 'showBookMark',\n        value: function showBookMark() {\n            if (this.bookMark) {\n                this.bookMark.restore();\n            } else {\n                var pageData = Xut.Presentation.GetPageData();\n                this.bookMark = new _Mark.BookMark({\n                    parent: this.container,\n                    seasonId: pageData.seasonId,\n                    pageId: pageData._id\n                });\n            }\n        }\n\n        /**\r\n         * 返回首页\r\n         */\n\n    }, {\n        key: 'goBack',\n        value: function goBack() {\n            var self = this;\n            Xut.Application.Suspend({\n                dispose: function dispose(promptMessage) {\n                    //停止热点动作\n                    //promptMessage('再按一次将跳至首页！')\n                },\n                processed: function processed() {\n                    Xut.View.GotoSlide(1); //调整到首页\n                    self.setColor();\n                }\n            });\n        }\n\n        /**\r\n         * 事件处理\r\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(e) {\n\n            var target = e.target || e.srcElement;\n\n            var name = target.className;\n\n            switch (name) {\n                case 'xut-book-bar-back':\n                    this.goBack();\n                    //返回\n                    break;\n                case 'xut-book-bar-dir':\n                    //目录\n                    this.showDirMenu();\n                    break;\n                case 'xut-book-bar-mark':\n                    //书签\n                    this.showBookMark();\n                    break;\n                case 'xut-book-bar-star':\n                    //评分\n                    break;\n                case 'xut-book-menu-item':\n                    //跳转\n                    this.turnToPage(target);\n                    break;\n                case 'xut-book-menu-mask':\n                case 'select':\n                    this.hideDirMenu();\n                    break;\n                default:\n                    // console.log(name+':undefined')\n                    break;\n            }\n        }\n\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.iscroll && this.iscroll.destroy();\n            this.bookMark && this.bookMark.destroy();\n            var ele = this.container[0];\n            ele.removeEventListener('touchend', this, false);\n            ele.removeEventListener('mouseup', this, false);\n            this.iscroll = null;\n            this.menu = null;\n            this.page = null;\n        }\n    }]);\n\n    return BookBar;\n}(_bar2.default);\n\nexports.default = BookBar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/bookbar/index.js\n ** module id = 171\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n书签栏\r\n加入这个书签功能后，可以让用户自由选择哪页是需要保存记录的\r\nparam options object\r\nexample {parent:页面容器,pageId:chapterId,seasonId:seasionId}\r\nn\n\nvar _tap = require('../../tap');\n\nvar _index = require('../../util/index');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar icons = {\n    hide: 'images/icons/arrowDown.svg'\n};\n\n/**\r\n * 行高\r\n * @type {[type]}\r\n */\nvar sLineHeiht = parseInt($('body').css('font-size')) || 16; //行高\n\n/**\r\n * 书签缓存\r\n */\nvar BOOKCACHE = void 0;\n\nvar Mark = function () {\n    function Mark() {\n        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var parent = _ref.parent;\n        var pageId = _ref.pageId;\n        var seasonId = _ref.seasonId;\n\n        _classCallCheck(this, Mark);\n\n        this.parent = parent;\n        this.pageId = pageId;\n        this.seasonId = seasonId;\n\n        this.screenSize = Xut.config.screenSize;\n        this.sHeight = this.screenSize.height;\n        this.sWidth = this.screenSize.width;\n\n        //是否已存储\n        this.isStored = false;\n        this.init();\n    }\n\n    /**\r\n     * 初始化\r\n     * @return {[type]} [description]\r\n     */\n\n\n    _createClass(Mark, [{\n        key: 'init',\n        value: function init() {\n            var $bookMark = this.createBookMark(),\n                dom = this.parent[0],\n                that = this;\n\n            this.parent.append($bookMark);\n            this.bookMarkMenu = $bookMark.eq(0);\n            //显示书签\n            setTimeout(function () {\n                that.restore();\n            }, 20);\n            //获取历史记录\n            BOOKCACHE = this.getHistory();\n\n            //邦定用户事件\n            (0, _tap.bindTap)(dom, {\n                end: this\n            });\n        }\n\n        /**\r\n         * 创建书签\r\n         * @return {[object]} [jquery生成的dom对象]\r\n         */\n\n    }, {\n        key: 'createBookMark',\n        value: function createBookMark() {\n            var height = sLineHeiht * 3,\n                // menu的高为3em\n            box = '<div class=\"xut-bookmark-menu\" style=\"width:100%;height:{0}px;left:0;top:{1}px;\">' + '<div class=\"xut-bookmark-wrap\">' + '<div class=\"xut-bookmark-add\">加入书签</div>' + '<div class=\"xut-bookmark-off\" style=\"background-image:url({2})\"></div>' + '<div class=\"xut-bookmark-view\">书签记录</div>' + '</div>' + '</div>' + '<div class=\"xut-bookmark-list\" style=\"display:none;width:100%;height:{3}px;\">' + '<ul class=\"xut-bookmark-head\">' + '<li class=\"xut-bookmark-back\">返回</li>' + '<li>书签</li>' + '</ul>' + '<ul class=\"xut-bookmark-body\"></ul>' + '</div>';\n            box = String.format(box, height, this.sHeight, icons.hide, this.sHeight);\n            this.markHeight = height;\n            return $(box);\n        }\n\n        /**\r\n         * 生成书签列表\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'createMarkList',\n        value: function createMarkList() {\n            var tmp,\n                seasonId,\n                pageId,\n                list = '',\n                box = '',\n                self = this;\n\n            //取历史记录\n            _.each(BOOKCACHE, function (mark) {\n                tmp = mark.split('-');\n                seasonId = tmp[0];\n                pageId = tmp[1];\n                mark = self.getMarkId(seasonId, pageId);\n                list += '<li><a data-mark=\"' + mark + '\" class=\"xut-bookmark-id\" href=\"javascript:0\">第' + pageId + '页</a><a class=\"xut-bookmark-del\" data-mark=\"' + mark + '\" href=\"javascript:0\">X</a></li>';\n            });\n\n            return list;\n        }\n\n        /**\r\n         * 创建存储标签\r\n         * 存储格式 seasonId-pageId\r\n         * @return {string} [description]\r\n         */\n\n    }, {\n        key: 'getMarkId',\n        value: function getMarkId(seasonId, pageId) {\n            return seasonId + '-' + pageId;\n        }\n\n        /**\r\n         * 获取历史记录\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'getHistory',\n        value: function getHistory() {\n            var mark = (0, _index._get)('bookMark');\n            if (mark) {\n                return mark.split(',');\n            }\n            return [];\n        }\n\n        /**\r\n         * 添加书签\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'addBookMark',\n        value: function addBookMark() {\n            var key;\n\n            this.updatePageInfo();\n            key = this.getMarkId(this.seasonId, this.pageId);\n\n            //避免重复缓存\n            if (BOOKCACHE.indexOf(key) > -1) {\n                return;\n            }\n            BOOKCACHE.push(key);\n            (0, _index._set)('bookMark', BOOKCACHE);\n        }\n\n        /**\r\n         * 更新页信息\r\n         *  针对母板层上的书签\r\n         */\n\n    }, {\n        key: 'updatePageInfo',\n        value: function updatePageInfo() {\n            var pageData = Xut.Presentation.GetPageData();\n            this.pageId = pageData._id;\n            this.seasonId = pageData.seasonId;\n        }\n\n        /**\r\n         * 删除书签\r\n         * @param {object} [key] [事件目标对象]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'delBookMark',\n        value: function delBookMark(target) {\n            if (!target || !target.dataset) return;\n\n            var key = target.dataset.mark,\n                index = BOOKCACHE.indexOf(key);\n\n            BOOKCACHE.splice(index, 1);\n            (0, _index._set)('bookMark', BOOKCACHE);\n\n            if (BOOKCACHE.length == 0) {\n                (0, _index._remove)('bookMark');\n            }\n\n            //移除该行\n            $(target).parent().remove();\n        }\n\n        /**\r\n         * 显示书签\r\n         * @param {object} [target] [事件目标对象]\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'viewBookMark',\n        value: function viewBookMark(target) {\n            var $bookMarkList,\n                list = this.createMarkList();\n\n            if (this.bookMarkList) {\n                $bookMarkList = this.bookMarkList;\n            } else {\n                $bookMarkList = $(target).parent().parent().next();\n            }\n            //更新书签内容\n            $bookMarkList.find('.xut-bookmark-body').html(list);\n            this.bookMarkList = $bookMarkList;\n            $bookMarkList.fadeIn();\n        }\n\n        /**\r\n         * 点击放大效果\r\n         * @param  {[object]} target [事件目标对象]\r\n         * @return {[type]}      [description]\r\n         */\n\n    }, {\n        key: 'iconManager',\n        value: function iconManager(target) {\n            var $icon = this.bookMarkIcon = $(target),\n                restore = this.iconRestore;\n\n            $icon.css({\n                'transform': 'scale(1.2)',\n                'transition-duration': '500ms'\n            })[0].addEventListener(Xut.style.transitionEnd, restore.bind(this), false);\n        }\n\n        /**\r\n         * 复原按钮\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'iconRestore',\n        value: function iconRestore() {\n            this.bookMarkIcon.css('transform', '');\n        }\n\n        /**\r\n         * 跳转到书签页\r\n         * @param  {[type]} target [description]\r\n         * @return {[type]}        [description]\r\n         */\n\n    }, {\n        key: 'goBookMark',\n        value: function goBookMark(target) {\n            if (!target || !target.dataset) return;\n\n            var key = target.dataset.mark.split('-');\n            var seasonId = Number(key[0]);\n            var pageId = Number(key[1]);\n\n            this.updatePageInfo();\n            //关闭书签列表\n            this.backBookMark();\n\n            //忽略当前页的跳转\n            if (this.pageId == pageId && this.seasonId == seasonId) {\n                return;\n            }\n\n            Xut.View.LoadScenario({\n                'scenarioId': seasonId,\n                'chapterId': pageId\n            });\n        }\n\n        /**\r\n         * 书签回退键\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'backBookMark',\n        value: function backBookMark() {\n            this.bookMarkList.fadeOut();\n        }\n\n        /**\r\n         * 邦定事件\r\n         * @param  {[type]} evt [事件]\r\n         * @return {[type]}     [description]\r\n         */\n\n    }, {\n        key: 'handleEvent',\n        value: function handleEvent(evt) {\n            var target = evt.target;\n            switch (target.className) {\n                //加入书签\n                case 'xut-bookmark-add':\n                    this.addBookMark();\n                    this.iconManager(target);\n                    break;\n                //显示书签记录\n                case 'xut-bookmark-view':\n                    this.viewBookMark(target);\n                    this.iconManager(target);\n                    break;\n                //关闭书签\n                case 'xut-bookmark-off':\n                    this.closeBookMark(target);\n                    break;\n                //返回书签主菜单\n                case 'xut-bookmark-back':\n                    this.backBookMark();\n                    break;\n                //删除书签记录\n                case 'xut-bookmark-del':\n                    this.delBookMark(target);\n                    break;\n                //跳转到书签页\n                case 'xut-bookmark-id':\n                    this.goBookMark(target);\n                    break;\n                default:\n                    //console.log(target.className)\n                    break;\n            }\n        }\n\n        /**\r\n         * 关闭书签菜单\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'closeBookMark',\n        value: function closeBookMark(target) {\n            this.bookMarkMenu.css({\n                transform: 'translate3d(0,0,0)',\n                'transition-duration': '1s'\n            });\n        }\n\n        /**\r\n         * 恢复书签菜单\r\n         */\n\n    }, {\n        key: 'restore',\n        value: function restore() {\n            this.bookMarkMenu.css({\n                transform: 'translate3d(0,-' + this.markHeight + 'px,0)',\n                'transition-duration': '1s'\n            });\n        }\n\n        /**\r\n         * 销毁书签\r\n         * @return {[type]} [description]\r\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var dom = this.parent[0];\n\n            dom.removeEventListener('touchend', this, false);\n            dom.removeEventListener('mouseup', this, false);\n\n            //菜单部分\n            if (this.bookMarkMenu) {\n                this.bookMarkMenu.remove();\n                this.bookMarkMenu = null;\n            }\n\n            //列表部分\n            if (this.bookMarkList) {\n                this.bookMarkList.remove();\n                this.bookMarkList = null;\n            }\n\n            //按钮效果\n            if (this.bookMarkIcon) {\n                this.bookMarkIcon[0].removeEventListener(Xut.style.transitionEnd, this.iconRestore, false);\n                this.bookMarkIcon = null;\n            }\n\n            this.parent = null;\n        }\n    }]);\n\n    return Mark;\n}();\n\nexports.default = Mark;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/toolbar/bookbar/Mark.js\n ** module id = 172\n ** module chunks = 0\n **/"],"mappingsjkrbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxvxvbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxrtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtxOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpxjpizlgplGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnxxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrnrvvKA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzxnVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACplhWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACllpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClpmrlxtpPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjnprxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzhnjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjrrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrzorwvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjunapWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzxnxnvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxpvzlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7pBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACplnbdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpvbxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtmlvnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvarhsourceRoot":""}